Notebook[{Cell[
CellGroupData[{Cell[
BoxData[{RowBox[{"T"," ","="," ","1"}],"\n",RowBox[
{"C1"," ","="," ","0.000014"}],"\n",RowBox[{"C2"," ","="," ","0.000033"}],"\n",RowBox[
{"I1"," ","="," ","4.64"}],"\n",RowBox[{"I2"," ","=","6.08"}],"\n",RowBox[{"R1"," ","=","0.098"}],"\n",RowBox[
{"R2"," ","="," ","0.15"}],RowBox[{"\n","\n"}],RowBox[{"{",RowBox[{RowBox[{"{",RowBox[
{"0",",","1",",","0",",","0"}],"}"}],",",RowBox[{"{",RowBox[{RowBox[{RowBox[{"-","T"}],"*",RowBox[
{"T","/",RowBox[{"(",RowBox[{"C1","*"," ","I1"}],")"}]}]}],",",RowBox[{RowBox[{"-","R1"}],"*",RowBox[
{"T","/","I1"}]}],",","0",",","0"}],"}"}],","," ",RowBox[{"{",RowBox[{"0",",","0",",","0",",","1"}],"}"}],","," ",RowBox[
{"{",RowBox[{"0",",","0",",",RowBox[{RowBox[{"-","T"}],"*",RowBox[{"T","/",RowBox[
{"(",RowBox[{"C2","*"," ","I2"}],")"}]}]}],",",RowBox[{RowBox[{"-","R2"}],"*",RowBox[
{"T","/","I2"}]}]}],"}"}]}],"}"}]}],"Input",CellLabel -> "In[212]:= ",ExpressionUUID -> "7d454006-b1a4-4f85-badc-38efb5f65c38"],Cell[
BoxData[
"1",StandardForm],"Output",CellLabel -> "Out[212]= ",ExpressionUUID -> "7a52c9b0-9a9a-4de1-b19f-afdbd465ee3f"],Cell[
BoxData[
"0.000014`",StandardForm],"Output",CellLabel -> "Out[213]= ",ExpressionUUID -> "ba2e828e-0ef3-40d2-b318-e02fc1a23251"],Cell[
BoxData[
"0.000033`",StandardForm],"Output",CellLabel -> "Out[214]= ",ExpressionUUID -> "39e77827-b11a-467a-942f-daa5a022b426"],Cell[
BoxData[
"4.64`",StandardForm],"Output",CellLabel -> "Out[215]= ",ExpressionUUID -> "f6311665-cd22-4df0-a906-7391b9487830"],Cell[
BoxData[
"6.08`",StandardForm],"Output",CellLabel -> "Out[216]= ",ExpressionUUID -> "d5084421-45fc-46f3-a3cd-6f73ada377a5"],Cell[
BoxData[
"0.098`",StandardForm],"Output",CellLabel -> "Out[217]= ",ExpressionUUID -> "06bcc6a9-6835-40ef-b52a-6278d5fa91d5"],Cell[
BoxData[
"0.15`",StandardForm],"Output",CellLabel -> "Out[218]= ",ExpressionUUID -> "ac55a7f7-4137-495f-b46e-4ba16d4a7b01"],Cell[
BoxData[
RowBox[{"{",RowBox[{RowBox[{"{",RowBox[{"0",",","1",",","0",",","0"}],"}"}],",",RowBox[
{"{",RowBox[{RowBox[{"-","15394.088669950741`"}],",",RowBox[{"-","0.021120689655172414`"}],",","0",",","0"}],"}"}],",",RowBox[
{"{",RowBox[{"0",",","0",",","0",",","1"}],"}"}],",",RowBox[{"{",RowBox[{"0",",","0",",",RowBox[
{"-","4984.051036682615`"}],",",RowBox[{"-","0.024671052631578948`"}]}],"}"}]}],"}"}],
StandardForm],"Output",CellLabel -> "Out[219]= ",ExpressionUUID -> "1b24f2c1-289a-4fde-a521-71e5d0592f66"]},
Open],ExpressionUUID -> "000c2faf-7610-4486-9787-9c7ccc8e053f"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"MatrixForm","[",RowBox[{"{",RowBox[{RowBox[{"{",RowBox[{RowBox[
{"0"," ","-"," ","\[Lambda]"}],",","1",",","0",",","0"}],"}"}],",",RowBox[{"{",RowBox[
{RowBox[{"-",FractionBox[SuperscriptBox["T","2"],RowBox[{"C1"," ","I1"}]]}],",",RowBox[
{RowBox[{"-",FractionBox[RowBox[{"R1"," ","T"}],"I1"]}]," ","-"," ","\[Lambda]"}],",","0",",","0"}],"}"}],",",RowBox[
{"{",RowBox[{"0",",","0",",",RowBox[{"0"," ","-"," ","\[Lambda]"}],",","1"}],"}"}],",",RowBox[
{"{",RowBox[{"0",",","0",",",RowBox[{"-",FractionBox[SuperscriptBox["T","2"],RowBox[
{"C2"," ","I2"}]]}],",",RowBox[{RowBox[{"-",FractionBox[RowBox[{"R2"," ","T"}],"I2"]}]," ","-"," ","\[Lambda]"}]}],"}"}]}],"}"}],"]"}]],
"Input",NumberMarks -> False,CellLabel -> "In[221]:= ",ExpressionUUID -> "51525281-7458-4df1-840b-bc9cb8b3e682"],Cell[
BoxData[
TagBox[RowBox[{"(","\[NoBreak]",GridBox[{{RowBox[{"-","\[Lambda]"}],"1","0","0"},{RowBox[
{"-","15394.088669950741`"}],RowBox[{RowBox[{"-","0.021120689655172414`"}],"-","\[Lambda]"}],"0","0"},{"0","0",RowBox[
{"-","\[Lambda]"}],"1"},{"0","0",RowBox[{"-","4984.051036682615`"}],RowBox[{RowBox[
{"-","0.024671052631578948`"}],"-","\[Lambda]"}]}},RowSpacings -> 1,ColumnSpacings -> 1,
RowAlignments -> Baseline,ColumnAlignments -> Center],"\[NoBreak]",")"}],Function[
BoxForm`e$,MatrixForm[BoxForm`e$]]],StandardForm],"Output",CellLabel -> "Out[221]//MatrixForm= ",
ExpressionUUID -> "8cae3d01-e92f-4e6c-80e5-ccc23212662a"]},Open],ExpressionUUID -> "5642b977-561d-4504-b3ba-6e75747c2db2"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"Det","[",RowBox[{"{",RowBox[{RowBox[{"{",RowBox[{RowBox[{"-","\[Lambda]"}],",","1",",","0",",","0"}],"}"}],",",RowBox[
{"{",RowBox[{RowBox[{"-",FractionBox[SuperscriptBox["T","2"],RowBox[{"C1"," ","I1"}]]}],",",RowBox[
{RowBox[{"-",FractionBox[RowBox[{"R1"," ","T"}],"I1"]}],"-","\[Lambda]"}],",","0",",","0"}],"}"}],",",RowBox[
{"{",RowBox[{"0",",","0",",",RowBox[{"-","\[Lambda]"}],",","1"}],"}"}],",",RowBox[
{"{",RowBox[{"0",",","0",",",RowBox[{"-",FractionBox[SuperscriptBox["T","2"],RowBox[
{"C2"," ","I2"}]]}],",",RowBox[{RowBox[{"-",FractionBox[RowBox[{"R2"," ","T"}],"I2"]}],"-","\[Lambda]"}]}],"}"}]}],"}"}],"]"}]],
"Input",NumberMarks -> False,CellLabel -> "In[227]:= ",ExpressionUUID -> "d7b648eb-8cee-439c-a098-e74fe5516f41"],Cell[
BoxData[
RowBox[{"7.672492359425208`*^7","+",RowBox[{"485.0549669628617`"," ","\[Lambda]"}],"+",RowBox[
{"20378.140227703`"," ",SuperscriptBox["\[Lambda]","2"]}],"+",RowBox[{"0.04579174228675136`"," ",SuperscriptBox[
"\[Lambda]","3"]}],"+",SuperscriptBox["\[Lambda]","4"]}],StandardForm],"Output",CellLabel -> "Out[227]= ",
ExpressionUUID -> "d8d54046-911a-408c-b160-5a1650934774"]},Open],ExpressionUUID -> "7ede5bd3-d850-42e2-a42e-fe6226099190"],Cell[
CellGroupData[
{Cell[
"\<7.672492359425208*^7 + 485.0549669628617*\[Lambda] + 20378.140227703*\[Lambda]^2 + 0.04579174228675136*\[Lambda]^3 + \[Lambda]^4\>",
"WolframAlphaLong",CellLabel -> "In[228]:= ",ExpressionUUID -> "ae1932bd-0006-4814-bcf3-bc616ca95fb5"],Cell[
BoxData[
NamespaceBox["WolframAlphaQueryResults",DynamicModuleBox[{Set[Typeset`q$$,"7.672492359425208*^7 + 485.0549669628617*\[Lambda] + 20378.140227703*\[Lambda]^2 + 0.04579174228675136*\[Lambda]^3 + \[Lambda]^4"],Set[
Typeset`opts$$,{AppearanceElements -> {"Warnings","Assumptions","Brand","Pods","PodMenus","Unsuccessful","Sources"}}],Set[
Typeset`elements$$,{"Warnings","Assumptions","Brand","Pods","PodMenus","Unsuccessful","Sources"}],Set[
Typeset`pod1$$,XMLElement["pod",{"title" -> "Input interpretation","scanner" -> "Identity","id" -> "Input","position" -> "100","error" -> "false","numsubpods" -> "1"},
{XMLElement["subpod",{"title" -> ""},{XMLElement["minput",{},{"7.672492359425208 10^7 + 485.0549669628617 \[Lambda] + 20378.140227703 \[Lambda]^2 + 0.04579174228675136 \[Lambda]^3 + \[Lambda]^4"}],XMLElement[
"cell",{"compressed" -> False,"string" -> True},{Cell[
BoxData[FormBox[TagBox[RowBox[
{TagBox[RowBox[{"7.672492359425208`16.88483646461626"," ",SuperscriptBox["10","7"]}],
TagBoxWrapper["StringBoxes" -> RowBox[{"\"7.672492359425208\"","\[Times]",SuperscriptBox[
"\"10\"","7"]}],RuleDelayed["SRString",With[{Set[CalculateUtilities`NumberUtilities`Private`mantissa$,
newstringify[RawBoxes[Parenthesize[CalculateReal[7.672492359425208`20.,"NumDigits" -> 16],
TraditionalForm,Times]]]]},AlphaStringTemplate[If[UnsameQ[CalculateUtilities`NumberUtilities`Private`mantissa$,
"1"],Localize["`1` times `2` to the `3`",70387],Localize["`2` to the `3`",70388]],
StringReplace[CalculateUtilities`NumberUtilities`Private`mantissa$,RuleDelayed[".",
$NumberPoint]],10,StringReplace["7",RuleDelayed[RegularExpression["^-"],Localize[
"negative ",70389]]]]]]],SyntaxForm -> Dot],"+",RowBox[{"485.0549669628617`16.68569095611982"," ","\[Lambda]"}],"+",RowBox[
{"20378.14022770299999999998527555611360639887`14.309064546417162"," ",SuperscriptBox[
"\[Lambda]","2"]}],"+",RowBox[{"0.04579174228675136`16.660687167902605"," ",SuperscriptBox[
"\[Lambda]","3"]}],"+",SuperscriptBox["\[Lambda]","4"]}],Function[PolynomialForm[
Slot[1],TraditionalOrder -> False]]],TraditionalForm]],"Output",{Background -> None,GraphicsBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics"},DefaultAxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsAxes"],DefaultFrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsFrame"],DefaultFrameTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsFrameTicks"],DefaultTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsTicks"]},Graphics3DBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics3D"}}},
NumberPoint -> ".",CellSize -> {550,Automatic},AutoStyleOptions -> {"HighlightFormattingErrors" -> False},
RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}],XMLElement[
"dataformats",{},{"plaintext,minput"}]}],XMLElement["expressiontypes",{"count" -> "1"},
{"\n   ",XMLElement["expressiontype",{"name" -> "Default"},{}],"\n  "}]}]],Set[Typeset`pod2$$,
XMLElement["pod",{"title" -> "Result","scanner" -> "Identity","id" -> "Result","position" -> "200","error" -> "false","numsubpods" -> "1","primary" -> "true"},
{XMLElement["subpod",{"title" -> "","primary" -> "true"},{XMLElement["cell",{"compressed" -> False,"string" -> True},
{Cell[
BoxData[FormBox[TagBox[RowBox[{SuperscriptBox["\[Lambda]","4"],"+",RowBox[
{"0.04579174228675136`16.01"," ",SuperscriptBox["\[Lambda]","3"]}],"+",RowBox[{"20378.14022770299999999998527555611360639887`14.01"," ",SuperscriptBox[
"\[Lambda]","2"]}],"+",RowBox[{"485.0549669628617`16.01"," ","\[Lambda]"}],"+","7.672492359425208`16.01*^7"}],
Identity],TraditionalForm]],"Output",{Background -> None,GraphicsBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics"},DefaultAxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsAxes"],DefaultFrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsFrame"],DefaultFrameTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsFrameTicks"],DefaultTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsTicks"]},Graphics3DBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics3D"}}},
NumberPoint -> ".",CellSize -> {550,Automatic},AutoStyleOptions -> {"HighlightFormattingErrors" -> False},
RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}],XMLElement[
"dataformats",{},{"plaintext,moutput,computabledata,formatteddata,formuladata"}]}],XMLElement[
"expressiontypes",{"count" -> "1"},{"\n   ",XMLElement["expressiontype",{"name" -> "Default"},
{}],"\n  "}]}]],Set[Typeset`pod3$$,XMLElement["pod",{"title" -> "Plots","scanner" -> "Plotter","id" -> "Plot","position" -> "300","error" -> "false","numsubpods" -> "2"},
{XMLElement["subpod",{"title" -> ""},{XMLElement["minput",{},{"Plot[7.672492359425208 10^7 + 485.0549669628617 \[Lambda] + 20378.140227703 \[Lambda]^2 + 0.04579174228675136 \[Lambda]^3 + \[Lambda]^4, {\[Lambda], -0.41, 38.}]"}],XMLElement[
"cell",{"compressed" -> True,"string" -> False},{Cell[
BoxData[FormBox[TagBox[FormBox[
StyleBox[DynamicModuleBox[{Set[CalculateUtilities`GraphicsUtilities`Private`max1227$$,
0.5`],Set[CalculateUtilities`GraphicsUtilities`Private`min1226$$,-0.5`],Set[CalculateUtilities`GraphicsUtilities`Private`more$$,
False],Set[Typeset`show$$,True],Set[Typeset`bookmarkList$$,{}],Set[Typeset`bookmarkMode$$,
"Menu"],Typeset`animator$$,Set[Typeset`animvar$$,1],Set[Typeset`name$$,"\"untitled\""],Set[
Typeset`specs$$,{{Hold[CalculateUtilities`GraphicsUtilities`Private`more$$],{False,True}},{{Hold[
CalculateUtilities`GraphicsUtilities`Private`min1226$$],-0.5`,"min"},-1,1},{{Hold[
CalculateUtilities`GraphicsUtilities`Private`max1227$$],0.5`,"max"},-1,1},{Hold[Style[
Overlay[{Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","PodInfoBackground"]]],Pane[
Column[{Grid[{{Manipulate`Place[1],Manipulate`Place[2]}}]}],ImageMargins -> {{20,30},{10,10}}]},
{1,2},2,Alignment -> {Left,Top}]]],Manipulate`Dump`ThisIsNotAControl}}],Set[Typeset`size$$,
Automatic],Set[Typeset`update$$,0],Set[Typeset`initDone$$,False],Set[Typeset`skipInitDone$$,
False],Set[CalculateUtilities`GraphicsUtilities`Private`more$1867261$$,False],Set[
CalculateUtilities`GraphicsUtilities`Private`min1226$1867266$$,0],Set[CalculateUtilities`GraphicsUtilities`Private`max1227$1867267$$,
0]},DynamicBox[Manipulate`ManipulateBoxes[2,TraditionalForm,RuleDelayed["Variables",
{Set[CalculateUtilities`GraphicsUtilities`Private`max1227$$,0.5`],Set[CalculateUtilities`GraphicsUtilities`Private`min1226$$,
-0.5`],Set[CalculateUtilities`GraphicsUtilities`Private`more$$,False]}],RuleDelayed[
"ControllerVariables",{Hold[CalculateUtilities`GraphicsUtilities`Private`more$$,CalculateUtilities`GraphicsUtilities`Private`more$1867261$$,
False],Hold[CalculateUtilities`GraphicsUtilities`Private`min1226$$,CalculateUtilities`GraphicsUtilities`Private`min1226$1867266$$,
0],Hold[CalculateUtilities`GraphicsUtilities`Private`max1227$$,CalculateUtilities`GraphicsUtilities`Private`max1227$1867267$$,
0]}],RuleDelayed["OtherVariables",{Typeset`show$$,Typeset`bookmarkList$$,Typeset`bookmarkMode$$,Typeset`animator$$,Typeset`animvar$$,Typeset`name$$,Typeset`specs$$,Typeset`size$$,Typeset`update$$,Typeset`initDone$$,Typeset`skipInitDone$$}],
RuleDelayed["Body",Quiet[Function[Null,CalculateUtilities`GraphicsUtilities`Private`post$1867238[
Plot[SlotSequence[1],AspectRatio -> If[TrueQ[CalculateUtilities`GraphicsUtilities`Private`aspect],
Automatic,Times[1,Power[GoldenRatio,-1]]]]],HoldAll][Plus[7.672492359425208`16.01*^7,
Times[485.0549669628617`16.01,\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,
Power[\[Lambda],2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],
4]],{\[Lambda],If[NumericQ[CalculateUtilities`GraphicsUtilities`Private`min1226$$],
Function[Piecewise[{{Plus[18.744018229214937`,Times[20.479200521193572`,Tan[Times[
1.5040801783846716`,Slot[1]]]]],Less[Slot[1],0]}},Plus[18.744018229214937`,Times[
20.479200521193576`,Tan[Times[1.5040801783846716`,Slot[1]]]]]]][CalculateUtilities`GraphicsUtilities`Private`min1226$$],
-0.4125197471222358`],If[And[NumericQ[CalculateUtilities`GraphicsUtilities`Private`min1226$$],
NumericQ[CalculateUtilities`GraphicsUtilities`Private`max1227$$]],Function[Piecewise[
{{Plus[18.744018229214937`,Times[20.479200521193572`,Tan[Times[1.5040801783846716`,
Slot[1]]]]],Less[Slot[1],0]}},Plus[18.744018229214937`,Times[20.479200521193576`,
Tan[Times[1.5040801783846716`,Slot[1]]]]]]][If[Equal[CalculateUtilities`GraphicsUtilities`Private`min1226$$,
CalculateUtilities`GraphicsUtilities`Private`max1227$$],Plus[CalculateUtilities`GraphicsUtilities`Private`min1226$$,
0.03831307595267435`],CalculateUtilities`GraphicsUtilities`Private`max1227$$]],37.900556205552114`]},
LabelStyle -> {FontFamily -> "Bitstream Charter"},WorkingPrecision -> MachinePrecision,
PlotRange -> {Full,Automatic},LabelStyle -> {},Ticks -> Automatic,ImageSize -> Scaled[
0.4`],AxesLabel -> {RawBoxes[FormBox["\[Lambda]",TraditionalForm]],RawBoxes[FormBox[
"y",TraditionalForm]]},AxesLabel -> {RawBoxes[FormBox["\[Lambda]",TraditionalForm]],None}]]],
RuleDelayed["Specifications",{{CalculateUtilities`GraphicsUtilities`Private`more$$,{False,True},ControlType -> None},{{CalculateUtilities`GraphicsUtilities`Private`min1226$$,-0.5`,"min"},-1,1,ImageSize -> Tiny,ControlPlacement -> 1},{{CalculateUtilities`GraphicsUtilities`Private`max1227$$,0.5`,"max"},-1,1,ImageSize -> Tiny,ControlPlacement -> 2},Style[
Overlay[{Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","PodInfoBackground"]]],Pane[
Column[{Grid[{{Manipulate`Place[1],Manipulate`Place[2]}}]}],ImageMargins -> {{20,30},{10,10}}]},
{1,2},2,Alignment -> {Left,Top}]]}],RuleDelayed["Options",{ControlPlacement -> Bottom,FrameMargins -> {{0,0},{0,10}},Paneled -> False,AppearanceElements -> {},LabelStyle -> {"DialogStyle",FontColor -> GrayLevel[
0.25`]}}],RuleDelayed["DefaultOptions",{}]],SingleEvaluation -> True],RuleDelayed[
Initialization,CompoundExpression[{ReleaseHold[Hold[CompoundExpression[SetDelayed[
CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,
Blank[]]],Module[{CalculateUtilities`GraphicsUtilities`Private`res,CalculateUtilities`GraphicsUtilities`Private`unitformat},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`res,ReplaceAll[
ReplaceAll[Part[DeleteCases[Replace[ReplaceAll[CalculateUtilities`GraphicsUtilities`Private`ticks,
Alternatives[Style,UnitNumberForm,NumberForm] -> Function[Slot[1]]],RuleDelayed[Pattern[
CalculateUtilities`GraphicsUtilities`Private`t,{PatternTest[BlankSequence[],NumberQ]}],
Thread[{CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`t}]]],
{Blank[],"",BlankNullSequence[]}],All,Span[1,2]],RuleDelayed[Superscript[Pattern[
CalculateUtilities`GraphicsUtilities`Private`b,Blank[Integer]],Pattern[CalculateUtilities`GraphicsUtilities`Private`p,
Blank[Integer]]],Power[CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`p]]],
RuleDelayed[Row[{Pattern[CalculateUtilities`GraphicsUtilities`Private`a,BlankSequence[]]},
"\[Times]"],Times[CalculateUtilities`GraphicsUtilities`Private`a]]]],If[MatchQ[Part[
CalculateUtilities`GraphicsUtilities`Private`res,All,2],Condition[Pattern[CalculateUtilities`GraphicsUtilities`Private`quants,
{Alternatives[BlankSequence[ShortQuantity],BlankSequence[Quantity]]}],Equal[Length[
Union[Map[UnitObjectPart,CalculateUtilities`GraphicsUtilities`Private`quants]]],1]]],
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`unitformat,ToCDFQuantityFunction[
Part[CalculateUtilities`GraphicsUtilities`Private`res,1,2]]],CalculateUtilities`GraphicsUtilities`Private`unitformat -> Thread[
{Part[CalculateUtilities`GraphicsUtilities`Private`res,All,1],QuantityPart[Part[CalculateUtilities`GraphicsUtilities`Private`res,
All,2],UnitObjectPart[Part[CalculateUtilities`GraphicsUtilities`Private`res,1,2]]]}]],
CalculateUtilities`GraphicsUtilities`Private`res]]]],Set[Options[CalculateUtilities`GraphicsUtilities`Private`post$1867238],
{"ReturnInteractiveTypes" -> False,"Nearest" -> Automatic}],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`post$1867238[
Pattern[CalculateUtilities`GraphicsUtilities`Private`g,Blank[Graphics]],OptionsPattern[]],
Check[Module[{CalculateUtilities`GraphicsUtilities`Private`lines,CalculateUtilities`GraphicsUtilities`Private`pts,CalculateUtilities`GraphicsUtilities`Private`gg,CalculateUtilities`GraphicsUtilities`Private`type,CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`r,CalculateUtilities`GraphicsUtilities`Private`oldepilog,CalculateUtilities`GraphicsUtilities`Private`range,CalculateUtilities`GraphicsUtilities`Private`gridlines,CalculateUtilities`GraphicsUtilities`Private`oldgridlines,Set[
CalculateUtilities`GraphicsUtilities`Private`neareststyle,OptionValue["Nearest"]]},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`oldepilog,Replace[
ReplaceAll[Epilog,Options[CalculateUtilities`GraphicsUtilities`Private`g]],Epilog -> Sequence[]]],
Switch[ReplaceAll[{Frame,Axes},Options[CalculateUtilities`GraphicsUtilities`Private`g]],
{True,Blank[]},CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`type,
Frame],Set[{CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`r},
CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Frame,ReplaceAll[
FrameTicks,Options[CalculateUtilities`GraphicsUtilities`Private`g]]]]],{Blank[],True},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`type,Axes],Set[
{CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l},
CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Axes,ReplaceAll[
Ticks,Options[CalculateUtilities`GraphicsUtilities`Private`g]]]]],Blank[],Set[CalculateUtilities`GraphicsUtilities`Private`type,
None]],If[And[SameQ[CalculateUtilities`GraphicsUtilities`Private`type,Frame],Or[Not[
Or[SameQ[CalculateUtilities`GraphicsUtilities`Private`t,None],SameQ[CalculateUtilities`GraphicsUtilities`Private`b,
CalculateUtilities`GraphicsUtilities`Private`t]]],Not[Or[SameQ[CalculateUtilities`GraphicsUtilities`Private`r,
None],SameQ[CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`r]]]]],
Set[CalculateUtilities`GraphicsUtilities`Private`type,None]],If[TrueQ[OptionValue[
"ReturnInteractiveTypes"]],Which[Or[SameQ[CalculateUtilities`GraphicsUtilities`Private`type,
None],SameQ[CalculateUtilities`GraphicsUtilities`Private`b,None],SameQ[CalculateUtilities`GraphicsUtilities`Private`l,
None]],{},FreeQ[CalculateUtilities`GraphicsUtilities`Private`g,Alternatives[Line,
Point]],{},True,{"Tooltips","Coordinates"}],CompoundExpression[If[FreeQ[CalculateUtilities`GraphicsUtilities`Private`g,
Alternatives[Line,Point]],Return[CalculateUtilities`GraphicsUtilities`Private`g]],
Set[CalculateUtilities`GraphicsUtilities`Private`gg,Normal[CalculateUtilities`GraphicsUtilities`Private`g]],
Set[CalculateUtilities`GraphicsUtilities`Private`pts,Partition[Flatten[Cases[Part[
CalculateUtilities`GraphicsUtilities`Private`gg,1],RuleDelayed[Point[Pattern[CalculateUtilities`GraphicsUtilities`Private`a,
Blank[]]],CalculateUtilities`GraphicsUtilities`Private`a],Infinity]],2]],If[Less[
Length[CalculateUtilities`GraphicsUtilities`Private`pts],2],CompoundExpression[Set[
CalculateUtilities`GraphicsUtilities`Private`lines,Cases[Part[CalculateUtilities`GraphicsUtilities`Private`gg,
1],Blank[Line],Infinity]],If[SameQ[CalculateUtilities`GraphicsUtilities`Private`lines,
{}],Return[CalculateUtilities`GraphicsUtilities`Private`g]],Set[CalculateUtilities`GraphicsUtilities`Private`pts,
Flatten[Cases[CalculateUtilities`GraphicsUtilities`Private`lines,RuleDelayed[Line[
Pattern[CalculateUtilities`GraphicsUtilities`Private`a,Blank[]]],CalculateUtilities`GraphicsUtilities`Private`a],
Infinity],1]],If[SameQ[CalculateUtilities`GraphicsUtilities`Private`neareststyle,
Automatic],CompoundExpression[If[CalculateUtilities`GraphicsUtilities`Private`orderedLines[
CalculateUtilities`GraphicsUtilities`Private`lines],Set[CalculateUtilities`GraphicsUtilities`Private`neareststyle,
"1D"],Set[CalculateUtilities`GraphicsUtilities`Private`neareststyle,"2D"]],Null]]],
If[SameQ[CalculateUtilities`GraphicsUtilities`Private`neareststyle,Automatic],Set[
CalculateUtilities`GraphicsUtilities`Private`neareststyle,"2D"]]],Set[CalculateUtilities`GraphicsUtilities`Private`range,
Replace[ReplaceAll[PlotRange,Options[CalculateUtilities`GraphicsUtilities`Private`g]],
RuleDelayed[Except[{{PatternTest[Blank[],NumberQ],PatternTest[Blank[],NumberQ]},{PatternTest[
Blank[],NumberQ],PatternTest[Blank[],NumberQ]}}],{Through[{Min,Max}[Part[CalculateUtilities`GraphicsUtilities`Private`pts,
All,1]]],Through[{Min,Max}[Part[CalculateUtilities`GraphicsUtilities`Private`pts,
All,2]]]}]]],Set[CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
CalculateUtilities`GraphicsUtilities`Private`b,First[CalculateUtilities`GraphicsUtilities`Private`range],
Part[CalculateUtilities`GraphicsUtilities`Private`pts,All,1]]],Set[CalculateUtilities`GraphicsUtilities`Private`l,
CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l,
Last[CalculateUtilities`GraphicsUtilities`Private`range],Part[CalculateUtilities`GraphicsUtilities`Private`pts,
All,2]]],Set[CalculateUtilities`GraphicsUtilities`Private`oldgridlines,ReplaceAll[
GridLines,Options[CalculateUtilities`GraphicsUtilities`Private`g]]],Set[CalculateUtilities`GraphicsUtilities`Private`gridlines,
With[{Set[CalculateUtilities`GraphicsUtilities`Private`gray,GrayLevel[0.7`]]},Replace[
CalculateUtilities`GraphicsUtilities`Private`oldgridlines,{RuleDelayed[Pattern[CalculateUtilities`GraphicsUtilities`Private`a,
{Blank[List],Blank[List]}],Dynamic[Join[CalculateUtilities`GraphicsUtilities`Private`a,
Replace[MousePosition[{"Graphics",Graphics},None],{None -> {{},{}},RuleDelayed[{Pattern[
CalculateUtilities`GraphicsUtilities`Private`x,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`y,
Blank[]]},{{{CalculateUtilities`GraphicsUtilities`Private`x,CalculateUtilities`GraphicsUtilities`Private`gray}},{{CalculateUtilities`GraphicsUtilities`Private`y,CalculateUtilities`GraphicsUtilities`Private`gray}}}]}],
2]]],RuleDelayed[{Pattern[CalculateUtilities`GraphicsUtilities`Private`a,Blank[List]],Automatic},
With[{Set[CalculateUtilities`GraphicsUtilities`Private`divisions,{CalculateUtilities`GraphicsUtilities`Private`a,FindDivisions[
Last[CalculateUtilities`GraphicsUtilities`Private`range],7]}]},Dynamic[Join[CalculateUtilities`GraphicsUtilities`Private`divisions,
Replace[MousePosition[{"Graphics",Graphics},None],{None -> {{},{}},RuleDelayed[{Pattern[
CalculateUtilities`GraphicsUtilities`Private`x,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`y,
Blank[]]},{{{CalculateUtilities`GraphicsUtilities`Private`x,CalculateUtilities`GraphicsUtilities`Private`gray}},{{CalculateUtilities`GraphicsUtilities`Private`y,CalculateUtilities`GraphicsUtilities`Private`gray}}}]}],
2]]]],Blank[] -> Dynamic[Map[Function[{{Slot[1],CalculateUtilities`GraphicsUtilities`Private`gray}}],
MousePosition[{"Graphics",Graphics},None]]]}]]],If[Or[SameQ[CalculateUtilities`GraphicsUtilities`Private`type,
None],SameQ[CalculateUtilities`GraphicsUtilities`Private`b,None],SameQ[CalculateUtilities`GraphicsUtilities`Private`l,
None]],Show[CalculateUtilities`GraphicsUtilities`Private`g,GridLines -> CalculateUtilities`GraphicsUtilities`Private`gridlines,
If[MatchQ[CalculateUtilities`GraphicsUtilities`Private`oldgridlines,Alternatives[
None,GridLines]],Method -> {"GridLinesInFront" -> True},Apply[Sequence,{}]]],With[
{Set[CalculateUtilities`GraphicsUtilities`Private`nf,If[SameQ[CalculateUtilities`GraphicsUtilities`Private`neareststyle,
"1D"],With[{Set[CalculateUtilities`GraphicsUtilities`Private`n,Nearest[Part[CalculateUtilities`GraphicsUtilities`Private`pts,
All,1] -> CalculateUtilities`GraphicsUtilities`Private`pts]]},Function[CalculateUtilities`GraphicsUtilities`Private`n[
Part[Slot[1],1]]]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`n,Nearest[
Transpose[Times[Transpose[CalculateUtilities`GraphicsUtilities`Private`pts],Power[
Abs[Apply[Subtract,CalculateUtilities`GraphicsUtilities`Private`range,{1}]],-1]]] -> CalculateUtilities`GraphicsUtilities`Private`pts]],Set[
CalculateUtilities`GraphicsUtilities`Private`scale,Abs[Apply[Subtract,CalculateUtilities`GraphicsUtilities`Private`range,
{1}]]]},Function[CalculateUtilities`GraphicsUtilities`Private`n[Times[Slot[1],Power[
CalculateUtilities`GraphicsUtilities`Private`scale,-1]]]]]]],Set[CalculateUtilities`GraphicsUtilities`Private`left,
CalculateUtilities`GraphicsUtilities`Private`l],Set[CalculateUtilities`GraphicsUtilities`Private`bottom,
CalculateUtilities`GraphicsUtilities`Private`b]},Show[CalculateUtilities`GraphicsUtilities`Private`g,
GridLines -> CalculateUtilities`GraphicsUtilities`Private`gridlines,If[MatchQ[CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
Alternatives[None,GridLines]],Method -> {"GridLinesInFront" -> True},Apply[Sequence,
{}]],Epilog -> {CalculateUtilities`GraphicsUtilities`Private`oldepilog,Dynamic[DynamicModule[
{Set[CalculateUtilities`GraphicsUtilities`Private`pt,CalculateUtilities`GraphicsUtilities`Private`nf[
MousePosition[{"Graphics",Graphics},{0,0}]]],Set[CalculateUtilities`GraphicsUtilities`Private`scaled,
MousePosition[{"GraphicsScaled",Graphics},None]]},If[SameQ[CalculateUtilities`GraphicsUtilities`Private`scaled,
None],{},{Text[Style[Row[{CalculateUtilities`GraphicsUtilities`Private`bottom[Part[
CalculateUtilities`GraphicsUtilities`Private`pt,1,1]],CalculateUtilities`GraphicsUtilities`Private`left[
Part[CalculateUtilities`GraphicsUtilities`Private`pt,1,2]]},","],12],Part[CalculateUtilities`GraphicsUtilities`Private`pt,
1],{Times[1.5`,Sign[Plus[Part[CalculateUtilities`GraphicsUtilities`Private`scaled,
1],-0.5`]]],0},Background -> White],AbsolutePointSize[7],Point[CalculateUtilities`GraphicsUtilities`Private`pt],White,AbsolutePointSize[
5],Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]]],CalculateUtilities`GraphicsUtilities`Private`g]],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`post$1867238[Pattern[CalculateUtilities`GraphicsUtilities`Private`g,
Blank[]],BlankNullSequence[]],CalculateUtilities`GraphicsUtilities`Private`g],SetDelayed[
CalculateUtilities`GraphicsUtilities`Private`orderedLines[{Pattern[CalculateUtilities`GraphicsUtilities`Private`l,
BlankSequence[Line]]}],Module[{CalculateUtilities`GraphicsUtilities`Private`ordered,CalculateUtilities`GraphicsUtilities`Private`intervals},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`ordered,Apply[
And,Map[Function[OrderedQ[Part[Slot[1],1,All,1]]],Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]],
If[Not[TrueQ[CalculateUtilities`GraphicsUtilities`Private`ordered]],Return[False]],
Set[CalculateUtilities`GraphicsUtilities`Private`intervals,Part[{CalculateUtilities`GraphicsUtilities`Private`l},
All,1,{1,-1},1]],SameQ[Length[Apply[Interval,CalculateUtilities`GraphicsUtilities`Private`intervals]],
Length[CalculateUtilities`GraphicsUtilities`Private`intervals]]]]],Set[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[
Frame,Alternatives[Automatic,FrameTicks]],{Identity,Identity,Identity,Identity}],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Frame,
{Pattern[CalculateUtilities`GraphicsUtilities`Private`b,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`l,
Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`t,Blank[]],Pattern[
CalculateUtilities`GraphicsUtilities`Private`r,Blank[]]}],Map[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction,
{CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`r}]],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Frame,
{{Pattern[CalculateUtilities`GraphicsUtilities`Private`l,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`r,
Blank[]]},{Pattern[CalculateUtilities`GraphicsUtilities`Private`b,Blank[]],Pattern[
CalculateUtilities`GraphicsUtilities`Private`t,Blank[]]}}],Map[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction,
{CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`r}]],
Set[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Frame,Blank[]],
{None,None,None,None}],Set[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[
Axes,Alternatives[Automatic,Ticks]],{Identity,Identity}],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[
Axes,{Pattern[CalculateUtilities`GraphicsUtilities`Private`h,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`v,
Blank[]]}],Map[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction,{CalculateUtilities`GraphicsUtilities`Private`h,CalculateUtilities`GraphicsUtilities`Private`v}]],
Set[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Axes,Blank[]],
{None,None}],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,Blank[]]],ReplaceAll[ReplaceAll[
Part[DeleteCases[ReplaceAll[CalculateUtilities`GraphicsUtilities`Private`ticks,Alternatives[
Style,NumberForm] -> Function[Slot[1]]],{Blank[],"",BlankNullSequence[]}],All,Span[
1,2]],RuleDelayed[Superscript[Pattern[CalculateUtilities`GraphicsUtilities`Private`b,
Blank[Integer]],Pattern[CalculateUtilities`GraphicsUtilities`Private`p,Blank[Integer]]],
Power[CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`p]]],
RuleDelayed[Row[{Pattern[CalculateUtilities`GraphicsUtilities`Private`a,BlankSequence[]]},
"\[Times]"],Times[CalculateUtilities`GraphicsUtilities`Private`a]]]],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[
Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks$,Blank[]]],CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[
CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[CalculateUtilities`GraphicsUtilities`Private`ticks$]]],
Set[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[None],None],Set[
CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[False],None],Set[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[
True],None],Set[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[Automatic],
Identity],Set[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[All],Identity],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[Pattern[
CalculateUtilities`GraphicsUtilities`Private`func,Blank[]] -> Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,
Blank[]]],Replace[CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks],
RuleDelayed[Pattern[CalculateUtilities`GraphicsUtilities`Private`f,Except[None]],
Composition[CalculateUtilities`GraphicsUtilities`Private`func,CalculateUtilities`GraphicsUtilities`Private`f]]]],
Set[CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[{}],None],SetDelayed[
CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,
{Repeated[{Blank[Integer],Blank[String]}]}]],Which[Quiet[MatchQ[Apply[SameQ,Map[Function[
Part[DateList[Slot[1]],Span[2,All]]],CalculateUtilities`GraphicsUtilities`Private`ticks,
{2}],{1}],{Repeated[True]}]],DateString,Apply[And,StringMatchQ[Part[CalculateUtilities`GraphicsUtilities`Private`ticks,
All,2],NumberString]],CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[
Transpose[{Part[CalculateUtilities`GraphicsUtilities`Private`ticks,All,1],ToExpression[
Part[CalculateUtilities`GraphicsUtilities`Private`ticks,All,2]]}]],True,None]],SetDelayed[
CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,
{Repeated[{PatternTest[Blank[],NumericQ],PatternTest[Blank[],NumericQ]}]}]],Which[
MatchQ[Apply[Equal,CalculateUtilities`GraphicsUtilities`Private`ticks,{1}],{Repeated[
True]}],Identity,MatchQ[Apply[Function[Equal[Slot[1],Log[Slot[2]]]],CalculateUtilities`GraphicsUtilities`Private`ticks,
{1}],{Repeated[True]}],Exp,TrueQ[Quiet[Apply[Equal,Apply[Divide,Plus[Transpose[Rest[
CalculateUtilities`GraphicsUtilities`Private`ticks]],Times[-1,Part[CalculateUtilities`GraphicsUtilities`Private`ticks,
1]]]]]]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`slope,Apply[Divide,
Apply[Subtract,Part[CalculateUtilities`GraphicsUtilities`Private`ticks,{-1,1}]]]]},
Function[SetPrecision[Plus[Times[Plus[Slot[1],Times[-1,Part[CalculateUtilities`GraphicsUtilities`Private`ticks,
1,1]]],Power[CalculateUtilities`GraphicsUtilities`Private`slope,-1]],Part[CalculateUtilities`GraphicsUtilities`Private`ticks,
1,2]],3]]],True,None]],Set[CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[
Blank[]],None],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
Pattern[CalculateUtilities`GraphicsUtilities`Private`type,Blank[]],BlankNullSequence[]],
CalculateUtilities`GraphicsUtilities`Private`type],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
Identity,{Pattern[CalculateUtilities`GraphicsUtilities`Private`min,Blank[]],Pattern[
CalculateUtilities`GraphicsUtilities`Private`max,Blank[]]},Blank[]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`nf,
CalculateUtilities`GraphicsUtilities`Private`numberForm],Set[CalculateUtilities`GraphicsUtilities`Private`acc,
Floor[Plus[Max[Ceiling[FullSimplify[Plus[Log[10,Max[Abs[{CalculateUtilities`GraphicsUtilities`Private`min,CalculateUtilities`GraphicsUtilities`Private`max}]]],
Times[-1,Log[10,Times[Plus[CalculateUtilities`GraphicsUtilities`Private`max,Times[
-1,CalculateUtilities`GraphicsUtilities`Private`min]],Power[100,-1]]]]]]],3],Times[
-1,RealExponent[Max[Abs[{CalculateUtilities`GraphicsUtilities`Private`min,CalculateUtilities`GraphicsUtilities`Private`max}]]]]]]]},
Function[CalculateUtilities`GraphicsUtilities`Private`nf[Slot[1],CalculateUtilities`GraphicsUtilities`Private`acc]]]],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
Exp,{Pattern[CalculateUtilities`GraphicsUtilities`Private`min,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`max,
Blank[]]},Blank[]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`prec,Max[
Ceiling[FullSimplify[Plus[Log[10,Max[Abs[{CalculateUtilities`GraphicsUtilities`Private`min,CalculateUtilities`GraphicsUtilities`Private`max}]]],
Times[-1,Log[10,Times[Plus[CalculateUtilities`GraphicsUtilities`Private`max,Times[
-1,CalculateUtilities`GraphicsUtilities`Private`min]],Power[100,-1]]]]]]],3]]},Function[
Quiet[RawBoxes[ToBoxes[NumberForm[Exp[Slot[1]],CalculateUtilities`GraphicsUtilities`Private`prec]]]]]]],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
DateString,{Pattern[CalculateUtilities`GraphicsUtilities`Private`min,Blank[]],Pattern[
CalculateUtilities`GraphicsUtilities`Private`max,Blank[]]},Pattern[CalculateUtilities`GraphicsUtilities`Private`pts,
Blank[]]],Module[{CalculateUtilities`GraphicsUtilities`Private`dates,CalculateUtilities`GraphicsUtilities`Private`spec},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`dates,Map[DateList,
CalculateUtilities`GraphicsUtilities`Private`pts]],Set[CalculateUtilities`GraphicsUtilities`Private`spec,
Switch[Map[Length,Map[Union,Transpose[CalculateUtilities`GraphicsUtilities`Private`dates]]],
{Blank[],1,1,BlankSequence[]},{"Year"},{Blank[],Blank[],1,BlankSequence[]},{"MonthNameShort"," ","Year"},
Blank[],{"DayShort"," ","MonthNameShort"," ","Year"}]],If[Greater[Times[Plus[CalculateUtilities`GraphicsUtilities`Private`max,
Times[-1,CalculateUtilities`GraphicsUtilities`Private`min]],Power[31536000,-1]],25],
Set[CalculateUtilities`GraphicsUtilities`Private`spec,{"Year"}]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`s,
CalculateUtilities`GraphicsUtilities`Private`spec]},Function[DateString[Slot[1],CalculateUtilities`GraphicsUtilities`Private`s]]]]]],
Set[CalculateUtilities`GraphicsUtilities`Private`numberForm,Function[{CalculateUtilities`GraphicsUtilities`Private`a,CalculateUtilities`GraphicsUtilities`Private`acc},
Quiet[RawBoxes[ToBoxes[NumberForm[CalculateUtilities`GraphicsUtilities`Private`a,
Max[1,Ceiling[Plus[RealExponent[CalculateUtilities`GraphicsUtilities`Private`a],CalculateUtilities`GraphicsUtilities`Private`acc]]],
ExponentFunction -> Function[Null],NumberFormat -> Function[StringReplace[Slot[1],
StringExpression[Pattern[CalculateUtilities`GraphicsUtilities`Private`s,BlankSequence[]],
".",EndOfString] -> CalculateUtilities`GraphicsUtilities`Private`s]]]]]]]]]]],ReleaseHold[
Uncompress["6:eJztVm1v0zAQbinv7/APkPiM2Hj9ggR0MCYNKEn5Xi++pBauHWxnG/x58NlN0qxdpZgO0JR+ONWX5vHdc89d78GBjNJ+r9fTF635IDlNr+DpvjVDOctlIei741yB1kyK9AI+u25NDGYHOPkB1PsuW/Neqhkx/vwK3yc8KTgx8NUwzgwDPdlVJJ+yRNeekWKH9icTLhPC2U94uPXy+YvtZ489DMYyIsaAEvpJW8h8qoiGtIdAl6x5y4n45o/3yuOngvMYvhcgEtB3rHesCLUwUhCO+QTfer6ZuomJGSIoUfTMaXLyHLa9QBvFRDaGWY5vnE7WVltgojLtublVcrNOQT78q/hAxi4m73FJu7MjMCyMc0bfSVn9c+4GeH7dFl7Jo9XEYX5vOPJGDDsEvUzno9Z18oxUXeuin3N1VvNlo0GePmXq/6V9ps1yGNttw4DZga3xau0twz9tCy9z7Pq5uG9b89k7SsBVw6ES3EdJCz6PopnywEu0fbo6tw6PcaPiO0ZnSAUrnMjGWfaL64+7FXi9KcRYu8kGpCPqGRBBDtZFHbc7LGNmOCWKJBZ4fl2/bLKxrEMJuLN97ZmgzA4wT8i65QnNXrpQd2KS6Zc/Km4llxNNhrzvCQMZqLWiv4b1UZZcQccyMJIYL2jqNZjDKqkRUcGyH5QgcU4EQ0j2y37cN/9wsRJI1a5CdSnP4sCV5jg8iX5Z4H0QmZk2d+zA0RXctphNJI9q1UUsTRenzeaY7jeZbtzQHOihJISWJHygd5tCtyn81U1haQ/u1oRuTejWhG5N6NaE/3dNcBHjv9Jv2PO4hg=="]]},
Set[Typeset`initDone$$,True]]],RuleDelayed[DynamicModuleValues,{}],RuleDelayed[Deinitialization,
None],RuleDelayed[UntrackedVariables,{Typeset`size$$}],SynchronousInitialization -> True,
RuleDelayed[UnsavedVariables,{Typeset`initDone$$}],RuleDelayed[UndoTrackedVariables,
{Typeset`show$$,Typeset`bookmarkMode$$}]],"Manipulate",Deployed -> True,StripOnInput -> False],
TraditionalForm],Manipulate`InterpretManipulate[1]],TraditionalForm]],"Output",{Background -> None,GraphicsBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics"},DefaultAxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsAxes"],DefaultFrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsFrame"],DefaultFrameTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsFrameTicks"],DefaultTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsTicks"]},Graphics3DBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics3D"}}},
NumberPoint -> ".",CellSize -> {550,Automatic},AutoStyleOptions -> {"HighlightFormattingErrors" -> False},
RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}],XMLElement[
"dataformats",{},{"minput"}]}],XMLElement["subpod",{"title" -> ""},{XMLElement["minput",
{},{"Plot[7.672492359425208 10^7 + 485.0549669628617 \[Lambda] + 20378.140227703 \[Lambda]^2 + 0.04579174228675136 \[Lambda]^3 + \[Lambda]^4, {\[Lambda], -350., 350.}]"}],XMLElement[
"cell",{"compressed" -> True,"string" -> False},{Cell[
BoxData[FormBox[TagBox[FormBox[
StyleBox[DynamicModuleBox[{Set[CalculateUtilities`GraphicsUtilities`Private`max1229$$,
0.5`],Set[CalculateUtilities`GraphicsUtilities`Private`min1228$$,-0.5`],Set[CalculateUtilities`GraphicsUtilities`Private`more$$,
False],Set[Typeset`show$$,True],Set[Typeset`bookmarkList$$,{}],Set[Typeset`bookmarkMode$$,
"Menu"],Typeset`animator$$,Set[Typeset`animvar$$,1],Set[Typeset`name$$,"\"untitled\""],Set[
Typeset`specs$$,{{Hold[CalculateUtilities`GraphicsUtilities`Private`more$$],{False,True}},{{Hold[
CalculateUtilities`GraphicsUtilities`Private`min1228$$],-0.5`,"min"},-1,1},{{Hold[
CalculateUtilities`GraphicsUtilities`Private`max1229$$],0.5`,"max"},-1,1},{Hold[Style[
Overlay[{Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","PodInfoBackground"]]],Pane[
Column[{Grid[{{Manipulate`Place[1],Manipulate`Place[2]}}]}],ImageMargins -> {{20,30},{10,10}}]},
{1,2},2,Alignment -> {Left,Top}]]],Manipulate`Dump`ThisIsNotAControl}}],Set[Typeset`size$$,
Automatic],Set[Typeset`update$$,0],Set[Typeset`initDone$$,False],Set[Typeset`skipInitDone$$,
False],Set[CalculateUtilities`GraphicsUtilities`Private`more$1867358$$,False],Set[
CalculateUtilities`GraphicsUtilities`Private`min1228$1867359$$,0],Set[CalculateUtilities`GraphicsUtilities`Private`max1229$1867360$$,
0]},DynamicBox[Manipulate`ManipulateBoxes[2,TraditionalForm,RuleDelayed["Variables",
{Set[CalculateUtilities`GraphicsUtilities`Private`max1229$$,0.5`],Set[CalculateUtilities`GraphicsUtilities`Private`min1228$$,
-0.5`],Set[CalculateUtilities`GraphicsUtilities`Private`more$$,False]}],RuleDelayed[
"ControllerVariables",{Hold[CalculateUtilities`GraphicsUtilities`Private`more$$,CalculateUtilities`GraphicsUtilities`Private`more$1867358$$,
False],Hold[CalculateUtilities`GraphicsUtilities`Private`min1228$$,CalculateUtilities`GraphicsUtilities`Private`min1228$1867359$$,
0],Hold[CalculateUtilities`GraphicsUtilities`Private`max1229$$,CalculateUtilities`GraphicsUtilities`Private`max1229$1867360$$,
0]}],RuleDelayed["OtherVariables",{Typeset`show$$,Typeset`bookmarkList$$,Typeset`bookmarkMode$$,Typeset`animator$$,Typeset`animvar$$,Typeset`name$$,Typeset`specs$$,Typeset`size$$,Typeset`update$$,Typeset`initDone$$,Typeset`skipInitDone$$}],
RuleDelayed["Body",Quiet[Function[Null,CalculateUtilities`GraphicsUtilities`Private`post$1867337[
Plot[SlotSequence[1],AspectRatio -> If[TrueQ[CalculateUtilities`GraphicsUtilities`Private`aspect],
Automatic,Times[1,Power[GoldenRatio,-1]]]]],HoldAll][Plus[7.672492359425208`16.01*^7,
Times[485.0549669628617`16.01,\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,
Power[\[Lambda],2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],
4]],{\[Lambda],If[NumericQ[CalculateUtilities`GraphicsUtilities`Private`min1228$$],
Function[Piecewise[{{Plus[0.`,Times[373.8125448727598`,Tan[Times[1.5040801783846716`,
Slot[1]]]]],Less[Slot[1],0]}},Plus[0.`,Times[373.8125448727598`,Tan[Times[1.5040801783846716`,
Slot[1]]]]]]][CalculateUtilities`GraphicsUtilities`Private`min1228$$],-349.66961744798186`],If[
And[NumericQ[CalculateUtilities`GraphicsUtilities`Private`min1228$$],NumericQ[CalculateUtilities`GraphicsUtilities`Private`max1229$$]],
Function[Piecewise[{{Plus[0.`,Times[373.8125448727598`,Tan[Times[1.5040801783846716`,
Slot[1]]]]],Less[Slot[1],0]}},Plus[0.`,Times[373.8125448727598`,Tan[Times[1.5040801783846716`,
Slot[1]]]]]]][If[Equal[CalculateUtilities`GraphicsUtilities`Private`min1228$$,CalculateUtilities`GraphicsUtilities`Private`max1229$$],
Plus[CalculateUtilities`GraphicsUtilities`Private`min1228$$,0.6993392348959637`],
CalculateUtilities`GraphicsUtilities`Private`max1229$$]],349.66961744798186`]},LabelStyle -> {FontFamily -> "Bitstream Charter"},
WorkingPrecision -> MachinePrecision,PlotRange -> {Full,Automatic},LabelStyle -> {},
Ticks -> Automatic,ImageSize -> Scaled[0.4`],AxesLabel -> {RawBoxes[FormBox["\[Lambda]",
TraditionalForm]],RawBoxes[FormBox["y",TraditionalForm]]},AxesLabel -> {RawBoxes[
FormBox["\[Lambda]",TraditionalForm]],None}]]],RuleDelayed["Specifications",{{CalculateUtilities`GraphicsUtilities`Private`more$$,{False,True},ControlType -> None},{{CalculateUtilities`GraphicsUtilities`Private`min1228$$,-0.5`,"min"},-1,1,ImageSize -> Tiny,ControlPlacement -> 1},{{CalculateUtilities`GraphicsUtilities`Private`max1229$$,0.5`,"max"},-1,1,ImageSize -> Tiny,ControlPlacement -> 2},Style[
Overlay[{Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","PodInfoBackground"]]],Pane[
Column[{Grid[{{Manipulate`Place[1],Manipulate`Place[2]}}]}],ImageMargins -> {{20,30},{10,10}}]},
{1,2},2,Alignment -> {Left,Top}]]}],RuleDelayed["Options",{ControlPlacement -> Bottom,FrameMargins -> {{0,0},{0,10}},Paneled -> False,AppearanceElements -> {},LabelStyle -> {"DialogStyle",FontColor -> GrayLevel[
0.25`]}}],RuleDelayed["DefaultOptions",{}]],SingleEvaluation -> True],RuleDelayed[
Initialization,CompoundExpression[{ReleaseHold[Hold[CompoundExpression[SetDelayed[
CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,
Blank[]]],Module[{CalculateUtilities`GraphicsUtilities`Private`res,CalculateUtilities`GraphicsUtilities`Private`unitformat},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`res,ReplaceAll[
ReplaceAll[Part[DeleteCases[Replace[ReplaceAll[CalculateUtilities`GraphicsUtilities`Private`ticks,
Alternatives[Style,UnitNumberForm,NumberForm] -> Function[Slot[1]]],RuleDelayed[Pattern[
CalculateUtilities`GraphicsUtilities`Private`t,{PatternTest[BlankSequence[],NumberQ]}],
Thread[{CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`t}]]],
{Blank[],"",BlankNullSequence[]}],All,Span[1,2]],RuleDelayed[Superscript[Pattern[
CalculateUtilities`GraphicsUtilities`Private`b,Blank[Integer]],Pattern[CalculateUtilities`GraphicsUtilities`Private`p,
Blank[Integer]]],Power[CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`p]]],
RuleDelayed[Row[{Pattern[CalculateUtilities`GraphicsUtilities`Private`a,BlankSequence[]]},
"\[Times]"],Times[CalculateUtilities`GraphicsUtilities`Private`a]]]],If[MatchQ[Part[
CalculateUtilities`GraphicsUtilities`Private`res,All,2],Condition[Pattern[CalculateUtilities`GraphicsUtilities`Private`quants,
{Alternatives[BlankSequence[ShortQuantity],BlankSequence[Quantity]]}],Equal[Length[
Union[Map[UnitObjectPart,CalculateUtilities`GraphicsUtilities`Private`quants]]],1]]],
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`unitformat,ToCDFQuantityFunction[
Part[CalculateUtilities`GraphicsUtilities`Private`res,1,2]]],CalculateUtilities`GraphicsUtilities`Private`unitformat -> Thread[
{Part[CalculateUtilities`GraphicsUtilities`Private`res,All,1],QuantityPart[Part[CalculateUtilities`GraphicsUtilities`Private`res,
All,2],UnitObjectPart[Part[CalculateUtilities`GraphicsUtilities`Private`res,1,2]]]}]],
CalculateUtilities`GraphicsUtilities`Private`res]]]],Set[Options[CalculateUtilities`GraphicsUtilities`Private`post$1867337],
{"ReturnInteractiveTypes" -> False,"Nearest" -> Automatic}],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`post$1867337[
Pattern[CalculateUtilities`GraphicsUtilities`Private`g,Blank[Graphics]],OptionsPattern[]],
Check[Module[{CalculateUtilities`GraphicsUtilities`Private`lines,CalculateUtilities`GraphicsUtilities`Private`pts,CalculateUtilities`GraphicsUtilities`Private`gg,CalculateUtilities`GraphicsUtilities`Private`type,CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`r,CalculateUtilities`GraphicsUtilities`Private`oldepilog,CalculateUtilities`GraphicsUtilities`Private`range,CalculateUtilities`GraphicsUtilities`Private`gridlines,CalculateUtilities`GraphicsUtilities`Private`oldgridlines,Set[
CalculateUtilities`GraphicsUtilities`Private`neareststyle,OptionValue["Nearest"]]},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`oldepilog,Replace[
ReplaceAll[Epilog,Options[CalculateUtilities`GraphicsUtilities`Private`g]],Epilog -> Sequence[]]],
Switch[ReplaceAll[{Frame,Axes},Options[CalculateUtilities`GraphicsUtilities`Private`g]],
{True,Blank[]},CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`type,
Frame],Set[{CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`r},
CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Frame,ReplaceAll[
FrameTicks,Options[CalculateUtilities`GraphicsUtilities`Private`g]]]]],{Blank[],True},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`type,Axes],Set[
{CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l},
CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Axes,ReplaceAll[
Ticks,Options[CalculateUtilities`GraphicsUtilities`Private`g]]]]],Blank[],Set[CalculateUtilities`GraphicsUtilities`Private`type,
None]],If[And[SameQ[CalculateUtilities`GraphicsUtilities`Private`type,Frame],Or[Not[
Or[SameQ[CalculateUtilities`GraphicsUtilities`Private`t,None],SameQ[CalculateUtilities`GraphicsUtilities`Private`b,
CalculateUtilities`GraphicsUtilities`Private`t]]],Not[Or[SameQ[CalculateUtilities`GraphicsUtilities`Private`r,
None],SameQ[CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`r]]]]],
Set[CalculateUtilities`GraphicsUtilities`Private`type,None]],If[TrueQ[OptionValue[
"ReturnInteractiveTypes"]],Which[Or[SameQ[CalculateUtilities`GraphicsUtilities`Private`type,
None],SameQ[CalculateUtilities`GraphicsUtilities`Private`b,None],SameQ[CalculateUtilities`GraphicsUtilities`Private`l,
None]],{},FreeQ[CalculateUtilities`GraphicsUtilities`Private`g,Alternatives[Line,
Point]],{},True,{"Tooltips","Coordinates"}],CompoundExpression[If[FreeQ[CalculateUtilities`GraphicsUtilities`Private`g,
Alternatives[Line,Point]],Return[CalculateUtilities`GraphicsUtilities`Private`g]],
Set[CalculateUtilities`GraphicsUtilities`Private`gg,Normal[CalculateUtilities`GraphicsUtilities`Private`g]],
Set[CalculateUtilities`GraphicsUtilities`Private`pts,Partition[Flatten[Cases[Part[
CalculateUtilities`GraphicsUtilities`Private`gg,1],RuleDelayed[Point[Pattern[CalculateUtilities`GraphicsUtilities`Private`a,
Blank[]]],CalculateUtilities`GraphicsUtilities`Private`a],Infinity]],2]],If[Less[
Length[CalculateUtilities`GraphicsUtilities`Private`pts],2],CompoundExpression[Set[
CalculateUtilities`GraphicsUtilities`Private`lines,Cases[Part[CalculateUtilities`GraphicsUtilities`Private`gg,
1],Blank[Line],Infinity]],If[SameQ[CalculateUtilities`GraphicsUtilities`Private`lines,
{}],Return[CalculateUtilities`GraphicsUtilities`Private`g]],Set[CalculateUtilities`GraphicsUtilities`Private`pts,
Flatten[Cases[CalculateUtilities`GraphicsUtilities`Private`lines,RuleDelayed[Line[
Pattern[CalculateUtilities`GraphicsUtilities`Private`a,Blank[]]],CalculateUtilities`GraphicsUtilities`Private`a],
Infinity],1]],If[SameQ[CalculateUtilities`GraphicsUtilities`Private`neareststyle,
Automatic],CompoundExpression[If[CalculateUtilities`GraphicsUtilities`Private`orderedLines[
CalculateUtilities`GraphicsUtilities`Private`lines],Set[CalculateUtilities`GraphicsUtilities`Private`neareststyle,
"1D"],Set[CalculateUtilities`GraphicsUtilities`Private`neareststyle,"2D"]],Null]]],
If[SameQ[CalculateUtilities`GraphicsUtilities`Private`neareststyle,Automatic],Set[
CalculateUtilities`GraphicsUtilities`Private`neareststyle,"2D"]]],Set[CalculateUtilities`GraphicsUtilities`Private`range,
Replace[ReplaceAll[PlotRange,Options[CalculateUtilities`GraphicsUtilities`Private`g]],
RuleDelayed[Except[{{PatternTest[Blank[],NumberQ],PatternTest[Blank[],NumberQ]},{PatternTest[
Blank[],NumberQ],PatternTest[Blank[],NumberQ]}}],{Through[{Min,Max}[Part[CalculateUtilities`GraphicsUtilities`Private`pts,
All,1]]],Through[{Min,Max}[Part[CalculateUtilities`GraphicsUtilities`Private`pts,
All,2]]]}]]],Set[CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
CalculateUtilities`GraphicsUtilities`Private`b,First[CalculateUtilities`GraphicsUtilities`Private`range],
Part[CalculateUtilities`GraphicsUtilities`Private`pts,All,1]]],Set[CalculateUtilities`GraphicsUtilities`Private`l,
CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[CalculateUtilities`GraphicsUtilities`Private`l,
Last[CalculateUtilities`GraphicsUtilities`Private`range],Part[CalculateUtilities`GraphicsUtilities`Private`pts,
All,2]]],Set[CalculateUtilities`GraphicsUtilities`Private`oldgridlines,ReplaceAll[
GridLines,Options[CalculateUtilities`GraphicsUtilities`Private`g]]],Set[CalculateUtilities`GraphicsUtilities`Private`gridlines,
With[{Set[CalculateUtilities`GraphicsUtilities`Private`gray,GrayLevel[0.7`]]},Replace[
CalculateUtilities`GraphicsUtilities`Private`oldgridlines,{RuleDelayed[Pattern[CalculateUtilities`GraphicsUtilities`Private`a,
{Blank[List],Blank[List]}],Dynamic[Join[CalculateUtilities`GraphicsUtilities`Private`a,
Replace[MousePosition[{"Graphics",Graphics},None],{None -> {{},{}},RuleDelayed[{Pattern[
CalculateUtilities`GraphicsUtilities`Private`x,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`y,
Blank[]]},{{{CalculateUtilities`GraphicsUtilities`Private`x,CalculateUtilities`GraphicsUtilities`Private`gray}},{{CalculateUtilities`GraphicsUtilities`Private`y,CalculateUtilities`GraphicsUtilities`Private`gray}}}]}],
2]]],RuleDelayed[{Pattern[CalculateUtilities`GraphicsUtilities`Private`a,Blank[List]],Automatic},
With[{Set[CalculateUtilities`GraphicsUtilities`Private`divisions,{CalculateUtilities`GraphicsUtilities`Private`a,FindDivisions[
Last[CalculateUtilities`GraphicsUtilities`Private`range],7]}]},Dynamic[Join[CalculateUtilities`GraphicsUtilities`Private`divisions,
Replace[MousePosition[{"Graphics",Graphics},None],{None -> {{},{}},RuleDelayed[{Pattern[
CalculateUtilities`GraphicsUtilities`Private`x,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`y,
Blank[]]},{{{CalculateUtilities`GraphicsUtilities`Private`x,CalculateUtilities`GraphicsUtilities`Private`gray}},{{CalculateUtilities`GraphicsUtilities`Private`y,CalculateUtilities`GraphicsUtilities`Private`gray}}}]}],
2]]]],Blank[] -> Dynamic[Map[Function[{{Slot[1],CalculateUtilities`GraphicsUtilities`Private`gray}}],
MousePosition[{"Graphics",Graphics},None]]]}]]],If[Or[SameQ[CalculateUtilities`GraphicsUtilities`Private`type,
None],SameQ[CalculateUtilities`GraphicsUtilities`Private`b,None],SameQ[CalculateUtilities`GraphicsUtilities`Private`l,
None]],Show[CalculateUtilities`GraphicsUtilities`Private`g,GridLines -> CalculateUtilities`GraphicsUtilities`Private`gridlines,
If[MatchQ[CalculateUtilities`GraphicsUtilities`Private`oldgridlines,Alternatives[
None,GridLines]],Method -> {"GridLinesInFront" -> True},Apply[Sequence,{}]]],With[
{Set[CalculateUtilities`GraphicsUtilities`Private`nf,If[SameQ[CalculateUtilities`GraphicsUtilities`Private`neareststyle,
"1D"],With[{Set[CalculateUtilities`GraphicsUtilities`Private`n,Nearest[Part[CalculateUtilities`GraphicsUtilities`Private`pts,
All,1] -> CalculateUtilities`GraphicsUtilities`Private`pts]]},Function[CalculateUtilities`GraphicsUtilities`Private`n[
Part[Slot[1],1]]]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`n,Nearest[
Transpose[Times[Transpose[CalculateUtilities`GraphicsUtilities`Private`pts],Power[
Abs[Apply[Subtract,CalculateUtilities`GraphicsUtilities`Private`range,{1}]],-1]]] -> CalculateUtilities`GraphicsUtilities`Private`pts]],Set[
CalculateUtilities`GraphicsUtilities`Private`scale,Abs[Apply[Subtract,CalculateUtilities`GraphicsUtilities`Private`range,
{1}]]]},Function[CalculateUtilities`GraphicsUtilities`Private`n[Times[Slot[1],Power[
CalculateUtilities`GraphicsUtilities`Private`scale,-1]]]]]]],Set[CalculateUtilities`GraphicsUtilities`Private`left,
CalculateUtilities`GraphicsUtilities`Private`l],Set[CalculateUtilities`GraphicsUtilities`Private`bottom,
CalculateUtilities`GraphicsUtilities`Private`b]},Show[CalculateUtilities`GraphicsUtilities`Private`g,
GridLines -> CalculateUtilities`GraphicsUtilities`Private`gridlines,If[MatchQ[CalculateUtilities`GraphicsUtilities`Private`oldgridlines,
Alternatives[None,GridLines]],Method -> {"GridLinesInFront" -> True},Apply[Sequence,
{}]],Epilog -> {CalculateUtilities`GraphicsUtilities`Private`oldepilog,Dynamic[DynamicModule[
{Set[CalculateUtilities`GraphicsUtilities`Private`pt,CalculateUtilities`GraphicsUtilities`Private`nf[
MousePosition[{"Graphics",Graphics},{0,0}]]],Set[CalculateUtilities`GraphicsUtilities`Private`scaled,
MousePosition[{"GraphicsScaled",Graphics},None]]},If[SameQ[CalculateUtilities`GraphicsUtilities`Private`scaled,
None],{},{Text[Style[Row[{CalculateUtilities`GraphicsUtilities`Private`bottom[Part[
CalculateUtilities`GraphicsUtilities`Private`pt,1,1]],CalculateUtilities`GraphicsUtilities`Private`left[
Part[CalculateUtilities`GraphicsUtilities`Private`pt,1,2]]},","],12],Part[CalculateUtilities`GraphicsUtilities`Private`pt,
1],{Times[1.5`,Sign[Plus[Part[CalculateUtilities`GraphicsUtilities`Private`scaled,
1],-0.5`]]],0},Background -> White],AbsolutePointSize[7],Point[CalculateUtilities`GraphicsUtilities`Private`pt],White,AbsolutePointSize[
5],Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]]]}]]]]]]],CalculateUtilities`GraphicsUtilities`Private`g]],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`post$1867337[Pattern[CalculateUtilities`GraphicsUtilities`Private`g,
Blank[]],BlankNullSequence[]],CalculateUtilities`GraphicsUtilities`Private`g],SetDelayed[
CalculateUtilities`GraphicsUtilities`Private`orderedLines[{Pattern[CalculateUtilities`GraphicsUtilities`Private`l,
BlankSequence[Line]]}],Module[{CalculateUtilities`GraphicsUtilities`Private`ordered,CalculateUtilities`GraphicsUtilities`Private`intervals},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`ordered,Apply[
And,Map[Function[OrderedQ[Part[Slot[1],1,All,1]]],Hold[CalculateUtilities`GraphicsUtilities`Private`l]]]],
If[Not[TrueQ[CalculateUtilities`GraphicsUtilities`Private`ordered]],Return[False]],
Set[CalculateUtilities`GraphicsUtilities`Private`intervals,Part[{CalculateUtilities`GraphicsUtilities`Private`l},
All,1,{1,-1},1]],SameQ[Length[Apply[Interval,CalculateUtilities`GraphicsUtilities`Private`intervals]],
Length[CalculateUtilities`GraphicsUtilities`Private`intervals]]]]],Set[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[
Frame,Alternatives[Automatic,FrameTicks]],{Identity,Identity,Identity,Identity}],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Frame,
{Pattern[CalculateUtilities`GraphicsUtilities`Private`b,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`l,
Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`t,Blank[]],Pattern[
CalculateUtilities`GraphicsUtilities`Private`r,Blank[]]}],Map[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction,
{CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`r}]],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Frame,
{{Pattern[CalculateUtilities`GraphicsUtilities`Private`l,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`r,
Blank[]]},{Pattern[CalculateUtilities`GraphicsUtilities`Private`b,Blank[]],Pattern[
CalculateUtilities`GraphicsUtilities`Private`t,Blank[]]}}],Map[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction,
{CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`l,CalculateUtilities`GraphicsUtilities`Private`t,CalculateUtilities`GraphicsUtilities`Private`r}]],
Set[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Frame,Blank[]],
{None,None,None,None}],Set[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[
Axes,Alternatives[Automatic,Ticks]],{Identity,Identity}],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[
Axes,{Pattern[CalculateUtilities`GraphicsUtilities`Private`h,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`v,
Blank[]]}],Map[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction,{CalculateUtilities`GraphicsUtilities`Private`h,CalculateUtilities`GraphicsUtilities`Private`v}]],
Set[CalculateUtilities`GraphicsUtilities`Private`ScaleCoordinatesToTicks[Axes,Blank[]],
{None,None}],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`CDFCleanTicks[
Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,Blank[]]],ReplaceAll[ReplaceAll[
Part[DeleteCases[ReplaceAll[CalculateUtilities`GraphicsUtilities`Private`ticks,Alternatives[
Style,NumberForm] -> Function[Slot[1]]],{Blank[],"",BlankNullSequence[]}],All,Span[
1,2]],RuleDelayed[Superscript[Pattern[CalculateUtilities`GraphicsUtilities`Private`b,
Blank[Integer]],Pattern[CalculateUtilities`GraphicsUtilities`Private`p,Blank[Integer]]],
Power[CalculateUtilities`GraphicsUtilities`Private`b,CalculateUtilities`GraphicsUtilities`Private`p]]],
RuleDelayed[Row[{Pattern[CalculateUtilities`GraphicsUtilities`Private`a,BlankSequence[]]},
"\[Times]"],Times[CalculateUtilities`GraphicsUtilities`Private`a]]]],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[
Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks$,Blank[]]],CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[
CalculateUtilities`GraphicsUtilities`Private`WACleanTicks[CalculateUtilities`GraphicsUtilities`Private`ticks$]]],
Set[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[None],None],Set[
CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[False],None],Set[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[
True],None],Set[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[Automatic],
Identity],Set[CalculateUtilities`GraphicsUtilities`Private`TicksToFunction[All],Identity],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[Pattern[
CalculateUtilities`GraphicsUtilities`Private`func,Blank[]] -> Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,
Blank[]]],Replace[CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[CalculateUtilities`GraphicsUtilities`Private`ticks],
RuleDelayed[Pattern[CalculateUtilities`GraphicsUtilities`Private`f,Except[None]],
Composition[CalculateUtilities`GraphicsUtilities`Private`func,CalculateUtilities`GraphicsUtilities`Private`f]]]],
Set[CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[{}],None],SetDelayed[
CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,
{Repeated[{Blank[Integer],Blank[String]}]}]],Which[Quiet[MatchQ[Apply[SameQ,Map[Function[
Part[DateList[Slot[1]],Span[2,All]]],CalculateUtilities`GraphicsUtilities`Private`ticks,
{2}],{1}],{Repeated[True]}]],DateString,Apply[And,StringMatchQ[Part[CalculateUtilities`GraphicsUtilities`Private`ticks,
All,2],NumberString]],CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[
Transpose[{Part[CalculateUtilities`GraphicsUtilities`Private`ticks,All,1],ToExpression[
Part[CalculateUtilities`GraphicsUtilities`Private`ticks,All,2]]}]],True,None]],SetDelayed[
CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[Pattern[CalculateUtilities`GraphicsUtilities`Private`ticks,
{Repeated[{PatternTest[Blank[],NumericQ],PatternTest[Blank[],NumericQ]}]}]],Which[
MatchQ[Apply[Equal,CalculateUtilities`GraphicsUtilities`Private`ticks,{1}],{Repeated[
True]}],Identity,MatchQ[Apply[Function[Equal[Slot[1],Log[Slot[2]]]],CalculateUtilities`GraphicsUtilities`Private`ticks,
{1}],{Repeated[True]}],Exp,TrueQ[Quiet[Apply[Equal,Apply[Divide,Plus[Transpose[Rest[
CalculateUtilities`GraphicsUtilities`Private`ticks]],Times[-1,Part[CalculateUtilities`GraphicsUtilities`Private`ticks,
1]]]]]]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`slope,Apply[Divide,
Apply[Subtract,Part[CalculateUtilities`GraphicsUtilities`Private`ticks,{-1,1}]]]]},
Function[SetPrecision[Plus[Times[Plus[Slot[1],Times[-1,Part[CalculateUtilities`GraphicsUtilities`Private`ticks,
1,1]]],Power[CalculateUtilities`GraphicsUtilities`Private`slope,-1]],Part[CalculateUtilities`GraphicsUtilities`Private`ticks,
1,2]],3]]],True,None]],Set[CalculateUtilities`GraphicsUtilities`Private`iTicksToFunction[
Blank[]],None],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
Pattern[CalculateUtilities`GraphicsUtilities`Private`type,Blank[]],BlankNullSequence[]],
CalculateUtilities`GraphicsUtilities`Private`type],SetDelayed[CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
Identity,{Pattern[CalculateUtilities`GraphicsUtilities`Private`min,Blank[]],Pattern[
CalculateUtilities`GraphicsUtilities`Private`max,Blank[]]},Blank[]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`nf,
CalculateUtilities`GraphicsUtilities`Private`numberForm],Set[CalculateUtilities`GraphicsUtilities`Private`acc,
Floor[Plus[Max[Ceiling[FullSimplify[Plus[Log[10,Max[Abs[{CalculateUtilities`GraphicsUtilities`Private`min,CalculateUtilities`GraphicsUtilities`Private`max}]]],
Times[-1,Log[10,Times[Plus[CalculateUtilities`GraphicsUtilities`Private`max,Times[
-1,CalculateUtilities`GraphicsUtilities`Private`min]],Power[100,-1]]]]]]],3],Times[
-1,RealExponent[Max[Abs[{CalculateUtilities`GraphicsUtilities`Private`min,CalculateUtilities`GraphicsUtilities`Private`max}]]]]]]]},
Function[CalculateUtilities`GraphicsUtilities`Private`nf[Slot[1],CalculateUtilities`GraphicsUtilities`Private`acc]]]],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
Exp,{Pattern[CalculateUtilities`GraphicsUtilities`Private`min,Blank[]],Pattern[CalculateUtilities`GraphicsUtilities`Private`max,
Blank[]]},Blank[]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`prec,Max[
Ceiling[FullSimplify[Plus[Log[10,Max[Abs[{CalculateUtilities`GraphicsUtilities`Private`min,CalculateUtilities`GraphicsUtilities`Private`max}]]],
Times[-1,Log[10,Times[Plus[CalculateUtilities`GraphicsUtilities`Private`max,Times[
-1,CalculateUtilities`GraphicsUtilities`Private`min]],Power[100,-1]]]]]]],3]]},Function[
Quiet[RawBoxes[ToBoxes[NumberForm[Exp[Slot[1]],CalculateUtilities`GraphicsUtilities`Private`prec]]]]]]],
SetDelayed[CalculateUtilities`GraphicsUtilities`Private`RefineCoordinateFunction[
DateString,{Pattern[CalculateUtilities`GraphicsUtilities`Private`min,Blank[]],Pattern[
CalculateUtilities`GraphicsUtilities`Private`max,Blank[]]},Pattern[CalculateUtilities`GraphicsUtilities`Private`pts,
Blank[]]],Module[{CalculateUtilities`GraphicsUtilities`Private`dates,CalculateUtilities`GraphicsUtilities`Private`spec},
CompoundExpression[Set[CalculateUtilities`GraphicsUtilities`Private`dates,Map[DateList,
CalculateUtilities`GraphicsUtilities`Private`pts]],Set[CalculateUtilities`GraphicsUtilities`Private`spec,
Switch[Map[Length,Map[Union,Transpose[CalculateUtilities`GraphicsUtilities`Private`dates]]],
{Blank[],1,1,BlankSequence[]},{"Year"},{Blank[],Blank[],1,BlankSequence[]},{"MonthNameShort"," ","Year"},
Blank[],{"DayShort"," ","MonthNameShort"," ","Year"}]],If[Greater[Times[Plus[CalculateUtilities`GraphicsUtilities`Private`max,
Times[-1,CalculateUtilities`GraphicsUtilities`Private`min]],Power[31536000,-1]],25],
Set[CalculateUtilities`GraphicsUtilities`Private`spec,{"Year"}]],With[{Set[CalculateUtilities`GraphicsUtilities`Private`s,
CalculateUtilities`GraphicsUtilities`Private`spec]},Function[DateString[Slot[1],CalculateUtilities`GraphicsUtilities`Private`s]]]]]],
Set[CalculateUtilities`GraphicsUtilities`Private`numberForm,Function[{CalculateUtilities`GraphicsUtilities`Private`a,CalculateUtilities`GraphicsUtilities`Private`acc},
Quiet[RawBoxes[ToBoxes[NumberForm[CalculateUtilities`GraphicsUtilities`Private`a,
Max[1,Ceiling[Plus[RealExponent[CalculateUtilities`GraphicsUtilities`Private`a],CalculateUtilities`GraphicsUtilities`Private`acc]]],
ExponentFunction -> Function[Null],NumberFormat -> Function[StringReplace[Slot[1],
StringExpression[Pattern[CalculateUtilities`GraphicsUtilities`Private`s,BlankSequence[]],
".",EndOfString] -> CalculateUtilities`GraphicsUtilities`Private`s]]]]]]]]]]],ReleaseHold[
Uncompress["6:eJztVm1v0zAQbinv7/APkPiMNDYxviABHYxJA0pSvvcWO42Fawfb2QZ/Hnx2kzRrVymmAzSlH071pXl899xz13tyJKO03+v19FVrPkhO0ht4emzNUM5yWQjy7jRXVGsmRXoFn922JqZmj3L4QYn3XbfmvVQzMP78Ct8HnhQcDP1qGGeGUT3ZV5BnLNG1Z6TYsf3JhMsEOPtJn269fLG7vbPrYTCWERhDldDbbSHzTIGmaQ+BrlnzloP45o+PyuOngvOYfi+oSKh+YL1jBcTCSAEc8wm+9XIzdRcTMyAIKHLhNDl5DtteoI1iYjqmsxzfOJ+srbbAoKbac3Ov5Gadgnz4N/GBjF1M3uOSdmdHYFgYl4y+s7L659wN8Py6LbySJ6uJw/zecOQNDDumepnOZ63r5BmputZFP+fqoubLRoM8f8rU/0uHTJvlMJ63DYPOjmyNV2tvGX6nLbzMsevn4r5vzWfvKAFXDYdKcB8lKfg8imbKAy/R9unq3Do8xp2K7xidIRWscCIbZ9kvrj8eVuD1phBj7SYbkI6oZ0BEc2pdxHG7x6bMDDNQkFjg+XX9ssnGsg4l4M72tWeCMDvAPCHrlic0B+lC3cEk2Zc/Km4llzNNhrwfCEOnVK0V/S2sj7LkCjKWgZHEeEFTr8EcVkmNQAXLflCCxDkIhpDsl/24b/7hYiWQqn2F6lKexYErzWl4Ev2ywIdUTE3W3LEDR1dw22I2kTypVRexNF2cNptjut9kunFDc6CHkhBakvCB3m0K3abwVzeFpT24WxO6NaFbE7o1oVsT/t81wUWM/0q/AS2MuL4="]]},
Set[Typeset`initDone$$,True]]],RuleDelayed[DynamicModuleValues,{}],RuleDelayed[Deinitialization,
None],RuleDelayed[UntrackedVariables,{Typeset`size$$}],SynchronousInitialization -> True,
RuleDelayed[UnsavedVariables,{Typeset`initDone$$}],RuleDelayed[UndoTrackedVariables,
{Typeset`show$$,Typeset`bookmarkMode$$}]],"Manipulate",Deployed -> True,StripOnInput -> False],
TraditionalForm],Manipulate`InterpretManipulate[1]],TraditionalForm]],"Output",{Background -> None,GraphicsBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics"},DefaultAxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsAxes"],DefaultFrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsFrame"],DefaultFrameTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsFrameTicks"],DefaultTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsTicks"]},Graphics3DBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics3D"}}},
NumberPoint -> ".",CellSize -> {550,Automatic},AutoStyleOptions -> {"HighlightFormattingErrors" -> False},
RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}],XMLElement[
"dataformats",{},{"minput"}]}],XMLElement["expressiontypes",{"count" -> "2"},{"\n   ",XMLElement[
"expressiontype",{"name" -> "Default"},{}],"\n   ",XMLElement["expressiontype",{"name" -> "Default"},
{}],"\n  "}]}]],Set[Typeset`pod4$$,XMLElement["pod",{"title" -> "Alternate forms","scanner" -> "Simplification","id" -> "AlternateForm","position" -> "400","error" -> "false","numsubpods" -> "2"},
{XMLElement["subpod",{"title" -> ""},{XMLElement["minput",{},{"FullSimplify[7.672492359425208 10^7 + 485.0549669628617 \[Lambda] + 20378.140227703 \[Lambda]^2 + 0.04579174228675136 \[Lambda]^3 + \[Lambda]^4]"}],XMLElement[
"cell",{"compressed" -> False,"string" -> True},{Cell[
BoxData[FormBox[TagBox[RowBox[
{RowBox[{"\[Lambda]"," ",RowBox[{"(",RowBox[{RowBox[{"\[Lambda]"," ",RowBox[{"(",RowBox[
{RowBox[{"\[Lambda]"," ",RowBox[{"(",RowBox[{"\[Lambda]","+","0.04579174228675136`14.01"}],")"}]}],"+","20378.14022770299999999998527555611360639887`14.01"}],")"}]}],"+","485.0549669628617`14.01"}],")"}]}],"+","7.672492359425208`16.01*^7"}],
Identity],TraditionalForm]],"Output",{Background -> None,GraphicsBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics"},DefaultAxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsAxes"],DefaultFrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsFrame"],DefaultFrameTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsFrameTicks"],DefaultTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsTicks"]},Graphics3DBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics3D"}}},
NumberPoint -> ".",CellSize -> {550,Automatic},AutoStyleOptions -> {"HighlightFormattingErrors" -> False},
RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}],XMLElement[
"dataformats",{},{"plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}],XMLElement[
"subpod",{"title" -> ""},{XMLElement["minput",{},{"Factor[7.672492359425208 10^7 + 485.0549669628617 \[Lambda] + 20378.140227703 \[Lambda]^2 + 0.04579174228675136 \[Lambda]^3 + \[Lambda]^4]"}],XMLElement[
"cell",{"compressed" -> False,"string" -> True},{Cell[
BoxData[FormBox[RowBox[{"1.`14.01"," ",RowBox[
{"(",RowBox[{RowBox[{"1.`14.01"," ",SuperscriptBox["\[Lambda]","2"]}],"+",RowBox[
{"0.02112068965517240048956892906062421389`8.744781682427961"," ","\[Lambda]"}],"+","15394.0886699507375224657`12.500080672736853"}],")"}]," ",RowBox[
{"(",RowBox[{RowBox[{"1.`14.01"," ",SuperscriptBox["\[Lambda]","2"]}],"+",RowBox[
{"0.02467105263157895120307294689609989291`9.056512123541287"," ","\[Lambda]"}],"+","4984.0510366826163479929`12.499430078457035"}],")"}]}],
TraditionalForm]],"Output",{Background -> None,GraphicsBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics"},DefaultAxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsAxes"],DefaultFrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsFrame"],DefaultFrameTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsFrameTicks"],DefaultTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsTicks"]},Graphics3DBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics3D"}}},
NumberPoint -> ".",CellSize -> {550,Automatic},AutoStyleOptions -> {"HighlightFormattingErrors" -> False},
RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}],XMLElement[
"dataformats",{},{"plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}],XMLElement[
"expressiontypes",{"count" -> "2"},{"\n   ",XMLElement["expressiontype",{"name" -> "Default"},
{}],"\n   ",XMLElement["expressiontype",{"name" -> "Default"},{}],"\n  "}]}]],Set[
Typeset`pod5$$,XMLElement["pod",{"title" -> "Complex roots","scanner" -> "Reduce","id" -> "ComplexSolution","position" -> "500","error" -> "false","numsubpods" -> "4","primary" -> "true"},
{XMLElement["subpod",{"title" -> ""},{XMLElement["minput",{},{"Simplify[Select[Solve[7.672492359425208 10^7 + 485.0549669628617 \[Lambda] + 20378.140227703 \[Lambda]^2 + 0.04579174228675136 \[Lambda]^3 + \[Lambda]^4 == 0, \[Lambda]],  !Element[\[Lambda] /. #1, Reals] & ]]"}],XMLElement[
"cell",{"compressed" -> False,"string" -> True},{Cell[
BoxData[FormBox[RowBox[{"\[Lambda]","\[LongEqual]",TagBox[
TagBox[RowBox[{RowBox[{"-","0.0123355263157894756`5.449393565067554"}],"-",RowBox[
{"70.5978107629224354014`9.20702711474368"," ","\[ImaginaryI]"}]}],HoldForm],Identity]}],
TraditionalForm]],"Output",{Background -> None,GraphicsBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics"},DefaultAxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsAxes"],DefaultFrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsFrame"],DefaultFrameTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsFrameTicks"],DefaultTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsTicks"]},Graphics3DBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics3D"}}},
NumberPoint -> ".",CellSize -> {550,Automatic},AutoStyleOptions -> {"HighlightFormattingErrors" -> False},
RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}],XMLElement[
"dataformats",{},{"plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}],XMLElement[
"subpod",{"title" -> ""},{XMLElement["minput",{},{"Simplify[Select[Solve[7.672492359425208 10^7 + 485.0549669628617 \[Lambda] + 20378.140227703 \[Lambda]^2 + 0.04579174228675136 \[Lambda]^3 + \[Lambda]^4 == 0, \[Lambda]],  !Element[\[Lambda] /. #1, Reals] & ]]"}],XMLElement[
"cell",{"compressed" -> False,"string" -> True},{Cell[
BoxData[FormBox[RowBox[{"\[Lambda]","\[LongEqual]",TagBox[
TagBox[RowBox[{RowBox[{"-","0.0123355263157894756`5.449393565067554"}],"+",RowBox[
{"70.5978107629224354014`9.20702711474368"," ","\[ImaginaryI]"}]}],HoldForm],Identity]}],
TraditionalForm]],"Output",{Background -> None,GraphicsBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics"},DefaultAxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsAxes"],DefaultFrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsFrame"],DefaultFrameTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsFrameTicks"],DefaultTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsTicks"]},Graphics3DBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics3D"}}},
NumberPoint -> ".",CellSize -> {550,Automatic},AutoStyleOptions -> {"HighlightFormattingErrors" -> False},
RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}],XMLElement[
"dataformats",{},{"plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}],XMLElement[
"subpod",{"title" -> ""},{XMLElement["minput",{},{"Simplify[Select[Solve[7.672492359425208 10^7 + 485.0549669628617 \[Lambda] + 20378.140227703 \[Lambda]^2 + 0.04579174228675136 \[Lambda]^3 + \[Lambda]^4 == 0, \[Lambda]],  !Element[\[Lambda] /. #1, Reals] & ]]"}],XMLElement[
"cell",{"compressed" -> False,"string" -> True},{Cell[
BoxData[FormBox[RowBox[{"\[Lambda]","\[LongEqual]",TagBox[
TagBox[RowBox[{RowBox[{"-","0.0105603448275862002`4.825297787850145"}],"-",RowBox[
{"124.0729162969495718016`8.89529667868685"," ","\[ImaginaryI]"}]}],HoldForm],Identity]}],
TraditionalForm]],"Output",{Background -> None,GraphicsBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics"},DefaultAxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsAxes"],DefaultFrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsFrame"],DefaultFrameTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsFrameTicks"],DefaultTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsTicks"]},Graphics3DBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics3D"}}},
NumberPoint -> ".",CellSize -> {550,Automatic},AutoStyleOptions -> {"HighlightFormattingErrors" -> False},
RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}],XMLElement[
"dataformats",{},{"plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}],XMLElement[
"subpod",{"title" -> ""},{XMLElement["minput",{},{"Simplify[Select[Solve[7.672492359425208 10^7 + 485.0549669628617 \[Lambda] + 20378.140227703 \[Lambda]^2 + 0.04579174228675136 \[Lambda]^3 + \[Lambda]^4 == 0, \[Lambda]],  !Element[\[Lambda] /. #1, Reals] & ]]"}],XMLElement[
"cell",{"compressed" -> False,"string" -> True},{Cell[
BoxData[FormBox[RowBox[{"\[Lambda]","\[LongEqual]",TagBox[
TagBox[RowBox[{RowBox[{"-","0.0105603448275862002`4.825297787850145"}],"+",RowBox[
{"124.0729162969495718016`8.89529667868685"," ","\[ImaginaryI]"}]}],HoldForm],Identity]}],
TraditionalForm]],"Output",{Background -> None,GraphicsBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics"},DefaultAxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsAxes"],DefaultFrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsFrame"],DefaultFrameTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsFrameTicks"],DefaultTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsTicks"]},Graphics3DBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics3D"}}},
NumberPoint -> ".",CellSize -> {550,Automatic},AutoStyleOptions -> {"HighlightFormattingErrors" -> False},
RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}],XMLElement[
"dataformats",{},{"plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}],XMLElement[
"expressiontypes",{"count" -> "4"},{"\n   ",XMLElement["expressiontype",{"name" -> "Default"},
{}],"\n   ",XMLElement["expressiontype",{"name" -> "Default"},{}],"\n   ",XMLElement[
"expressiontype",{"name" -> "Default"},{}],"\n   ",XMLElement["expressiontype",{"name" -> "Default"},
{}],"\n  "}],XMLElement["states",{"count" -> "1"},{XMLElement["statelist",{"count" -> "3","value" -> "Cartesian form","delimiters" -> ""},
{XMLElement["state",{"name" -> "Cartesian form","input" -> "ComplexSolution__Cartesian form"},
{}],XMLElement["state",{"name" -> "Trigonometric form","input" -> "ComplexSolution__Trigonometric form"},
{}],XMLElement["state",{"name" -> "Exponential form","input" -> "ComplexSolution__Exponential form"},
{}]}]}]}]],Set[Typeset`pod6$$,XMLElement["pod",{"title" -> "Roots in the complex plane","scanner" -> "Reduce","id" -> "RootsInTheComplexPlane","position" -> "600","error" -> "false","numsubpods" -> "1"},
{XMLElement["subpod",{"title" -> ""},{XMLElement["cell",{"compressed" -> False,"string" -> True},
{Cell[
BoxData[FormBox[GraphicsBox[{{GrayLevel[0.8`],AbsoluteThickness[1],{},{}},{RGBColor[
1,0,0],PointSize[Medium],PointBox[{{-0.012335526315789476`,-70.59781076292244`},{-0.012335526315789476`,70.59781076292244`},{-0.0105603448275862`,-124.07291629694957`},{-0.0105603448275862`,124.07291629694957`}}]}},
{GridLines -> Dynamic[Map[Function[{{Slot[1],GrayLevel[0.7`]}}],MousePosition[{"Graphics",Graphics},
None]]],Method -> {"GridLinesInFront" -> True},Epilog -> CompressedData["1:eJztV71PFEEUX+EQg6hIYmlhaWLQxMLy8FDU6MFxi9FQIHN772DC3Mw5MysHiaWJ9HTGxMoEYmJpYXH8AfRakhhjg52FhVHn4272AxFuJVZsLrM38+a9+c3vfdy7CxVWrh3zPE/k1HAPC2lnA2q4sUxRHQcF1qz16rUzapheboAAOTfN1DKIWo8WnIo2F1k1JGCXnUUz0yZ8kOKyeo8hEoQESbgvMcESg5i7xVFjAQciWilx/ERtmWtYSBbXCTWMhzSQmNHYsoY2AYiDkAmpwXCbkaqd9UfbIohlDTi3G3BnxldmtjfW0LlN/n528ttI71ZrH3k+Jc+vb7FPxeFN/nH1pf6k9dPy/F/RXFv7UJodW23xdz+GnxdeT23uIx9NydcGZp6uv3rW4i/enl/fyD1K66flbf0+7XxcVy53vPqESWx84HaU2BLwlMGdn627b75U8vzh552v9KIcxb/UE0VOkYUCSkxg47WErq/d3YkMEZ8k92H19syQjLWr3caaCBCB6sGwnY7B8Y1eAqHZOMEo2OTRundqEVM+qsNUVoCRbS8RKccTMxdF09CUsZPlcidDNbIyW0ql6x7Z1uPo3bXsdMVItxdC4krXKkFg4enbTIUYZIS2jJZsYXL53qlUuU5ZmwjrFeDjjNczoI14K6ImjpjSJ42B2k7nI0ZKJGwDGdTQAJGbzYbyGv1/PCWqnBhSXzoQknUy7lIbXSEhKe3BBHlI7hEjJnF8yRUVZWgQFMCeJcOVX5MiQ05PYVQ1WjiLmt0SkhI47Z45YZNEoyoQRBd9eBwCDcDXOEbESc0JrU7W7NFZ7O++HtYzeysTCIhn+uGztlyUHSXlUVIeJWX2pPQOMSk1BQbsJTyYoO6fzP6pcXadF/fM8z0fuxuep6nQTgLJ2GAYMO3ztluxzsrFnU7aAgoW5zkLadWAfLCAZTuszqrhekUwEkrVPmEqfbwCuN9lpu0V1XoWpg52WN8hHWb+9XBUNS0gIqZExfu830CFzUs="],PlotRangePadding -> 0,PlotRangeClipping -> True,PlotRange -> {{-0.012601803539019968`,-0.010294067604355708`},{-161.29479118603444`,161.29479118603444`}},Frame -> True,FrameTicks -> Automatic,FrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1],ImageSize -> {{264.`},{264.`}},AspectRatio -> 1.2`,Axes -> True,AxesOrigin -> {0,0},AxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1],AxesLabel -> None,FrameLabel -> {{FormBox[
"\"Im(\[Lambda])\"",TraditionalForm],None},{FormBox["\"Re(\[Lambda])\"",TraditionalForm],None}},RotateLabel -> False}],
TraditionalForm]],"Output",{Background -> None,GraphicsBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics"},DefaultAxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsAxes"],DefaultFrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsFrame"],DefaultFrameTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsFrameTicks"],DefaultTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsTicks"]},Graphics3DBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics3D"}}},
NumberPoint -> ".",CellSize -> {550,Automatic},AutoStyleOptions -> {"HighlightFormattingErrors" -> False},
RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}],XMLElement[
"dataformats",{},{"computabledata,formatteddata"}]}],XMLElement["expressiontypes",
{"count" -> "1"},{"\n   ",XMLElement["expressiontype",{"name" -> "Default"},{}],"\n  "}]}]],Set[
Typeset`pod7$$,XMLElement["pod",{"title" -> "Polynomial discriminant","scanner" -> "Expression","id" -> "PolynomialDiscriminant","position" -> "700","error" -> "false","numsubpods" -> "1"},
{XMLElement["subpod",{"title" -> ""},{XMLElement["minput",{},{"Discriminant[7.672492359425208 10^7 + 485.0549669628617 \[Lambda] + 20378.140227703 \[Lambda]^2 + 0.04579174228675136 \[Lambda]^3 + \[Lambda]^4, \[Lambda]]"}],XMLElement[
"cell",{"compressed" -> False,"string" -> True},{Cell[
BoxData[FormBox[RowBox[{"\[CapitalDelta]","\[LongEqual]",TagBox[
"1.4416692549736907096676923`14.01*^25",Identity]}],TraditionalForm]],"Output",{Background -> None,GraphicsBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics"},DefaultAxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsAxes"],DefaultFrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsFrame"],DefaultFrameTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsFrameTicks"],DefaultTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsTicks"]},Graphics3DBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics3D"}}},
NumberPoint -> ".",CellSize -> {550,Automatic},AutoStyleOptions -> {"HighlightFormattingErrors" -> False},
RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}],XMLElement[
"dataformats",{},{"plaintext,minput,computabledata,formatteddata,formuladata"}]}],XMLElement[
"expressiontypes",{"count" -> "1"},{"\n   ",XMLElement["expressiontype",{"name" -> "Default"},
{}],"\n  "}]}]],Set[Typeset`pod8$$,XMLElement["pod",{"title" -> "Derivative","scanner" -> "Derivative","id" -> "Derivative","position" -> "800","error" -> "false","numsubpods" -> "1"},
{XMLElement["subpod",{"title" -> ""},{XMLElement["minput",{},{"D[7.672492359425208 10^7 + 485.0549669628617 \[Lambda] + 20378.140227703 \[Lambda]^2 + 0.04579174228675136 \[Lambda]^3 + \[Lambda]^4, \[Lambda]]"}],XMLElement[
"cell",{"compressed" -> False,"string" -> True},{Cell[
BoxData[FormBox[RowBox[{RowBox[
{TagBox[FractionBox["\[DifferentialD]",RowBox[{"\"\[DifferentialD]\"","\[InvisibleSpace]","\[Lambda]"}]],
TagBoxWrapper["StringBoxes" -> RowBox[{"d/d","\[InvisibleSpace]","\[Lambda]"}]]],"\[InvisibleSpace]",RowBox[
{"(",RowBox[{SuperscriptBox["\[Lambda]","4"],"+",RowBox[{"0.04579174228675136`16.01"," ",SuperscriptBox[
"\[Lambda]","3"]}],"+",RowBox[{"20378.14022770299999999998527555611360639887`14.01"," ",SuperscriptBox[
"\[Lambda]","2"]}],"+",RowBox[{"485.0549669628617`16.01"," ","\[Lambda]"}],"+","7.672492359425208`16.01*^7"}],")"}]}],"\[LongEqual]",TagBox[
RowBox[{RowBox[{"4"," ",SuperscriptBox["\[Lambda]","3"]}],"+",RowBox[{"0.13737522686025408`16.01"," ",SuperscriptBox[
"\[Lambda]","2"]}],"+",RowBox[{"40756.280455406`14.01"," ","\[Lambda]"}],"+","485.0549669628617`16.01"}],
Identity]}],TraditionalForm]],"Output",{Background -> None,GraphicsBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics"},DefaultAxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsAxes"],DefaultFrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsFrame"],DefaultFrameTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsFrameTicks"],DefaultTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsTicks"]},Graphics3DBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics3D"}}},
NumberPoint -> ".",CellSize -> {550,Automatic},AutoStyleOptions -> {"HighlightFormattingErrors" -> False},
RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}],XMLElement[
"dataformats",{},{"plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}],XMLElement[
"expressiontypes",{"count" -> "1"},{"\n   ",XMLElement["expressiontype",{"name" -> "Default"},
{}],"\n  "}]}]],Set[Typeset`pod9$$,XMLElement["pod",{"title" -> "Indefinite integral","scanner" -> "Integral","id" -> "IndefiniteIntegral","position" -> "900","error" -> "false","numsubpods" -> "1","primary" -> "true"},
{XMLElement["subpod",{"title" -> "","primary" -> "true"},{XMLElement["minput",{},
{"Integrate[7.672492359425208 10^7 + 485.0549669628617 \[Lambda] + 20378.140227703 \[Lambda]^2 + 0.04579174228675136 \[Lambda]^3 + \[Lambda]^4, \[Lambda]]"}],XMLElement[
"cell",{"compressed" -> False,"string" -> True},{Cell[
BoxData[FormBox[RowBox[{TagBox[
RowBox[{"\[Integral]",RowBox[{RowBox[{"(",RowBox[{"7.672492359425208`16.01*^7","+",RowBox[
{"485.0549669628617`16.01"," ","\[Lambda]"}],"+",RowBox[{"20378.14022770299999999998527555611360639887`14.01"," ",SuperscriptBox[
"\[Lambda]","2"]}],"+",RowBox[{"0.04579174228675136`16.01"," ",SuperscriptBox["\[Lambda]",
"3"]}],"+",SuperscriptBox["\[Lambda]","4"]}],")"}],RowBox[{"\[DifferentialD]","\[Lambda]"}]}]}],
HoldForm],"\[LongEqual]",StyleBox[RowBox[{StyleBox[RowBox[{RowBox[{"0.2`14.01"," ",SuperscriptBox[
"\[Lambda]","5"]}],"+",RowBox[{"0.01144793557168784`14.01"," ",SuperscriptBox["\[Lambda]",
"4"]}],"+",RowBox[{"6792.71340923433333333332842518537120213296`14.01"," ",SuperscriptBox[
"\[Lambda]","3"]}],"+",RowBox[{"242.52748348143085`14.01"," ",SuperscriptBox["\[Lambda]",
"2"]}],"+",RowBox[{"7.672492359425208`14.01*^7"," ","\[Lambda]"}]}],{GrayLevel[0],LinebreakAdjustments -> {1,100,1,0,100},LineIndent -> 0}],"+",StyleBox[
"\"constant\"",{Magnification -> Times[0.9`,Inherited],FontFamily -> "Roboto",FontSize -> Inherited,LinebreakAdjustments -> {1,100,1,0,100},LineIndent -> 0}]}],
{GrayLevel[0.6`],LinebreakAdjustments -> {1,100,1,0,100},LineIndent -> 0}]}],TraditionalForm]],
"Output",{Background -> None,GraphicsBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics"},DefaultAxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsAxes"],DefaultFrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsFrame"],DefaultFrameTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsFrameTicks"],DefaultTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsTicks"]},Graphics3DBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics3D"}}},
NumberPoint -> ".",CellSize -> {550,Automatic},AutoStyleOptions -> {"HighlightFormattingErrors" -> False},
RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}],XMLElement[
"dataformats",{},{"plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}],XMLElement[
"expressiontypes",{"count" -> "1"},{"\n   ",XMLElement["expressiontype",{"name" -> "Default"},
{}],"\n  "}]}]],Set[Typeset`pod10$$,XMLElement["pod",{"title" -> "Local minimum","scanner" -> "GlobalExtrema","id" -> "LocalMinimum","position" -> "1000","error" -> "false","numsubpods" -> "1"},
{XMLElement["subpod",{"title" -> ""},{XMLElement["minput",{},{"NMinimize[7.672492359425208 10^7 + 485.0549669628617 \[Lambda] + 20378.140227703 \[Lambda]^2 + 0.04579174228675136 \[Lambda]^3 + \[Lambda]^4, \[Lambda]]"}],XMLElement[
"cell",{"compressed" -> False,"string" -> True},{Cell[
BoxData[FormBox[RowBox[{RowBox[
{RowBox[{"min","\[NoBreak]",RowBox[{"{",RowBox[{SuperscriptBox["\[Lambda]","4"],"+",RowBox[
{"0.04579174228675136`16.01"," ",SuperscriptBox["\[Lambda]","3"]}],"+",RowBox[{"20378.14022770299999999998527555611360639887`14.01"," ",SuperscriptBox[
"\[Lambda]","2"]}],"+",RowBox[{"485.0549669628617`16.01"," ","\[Lambda]"}],"+","7.672492359425208`16.01*^7"}],"}"}]}],"\[TildeTilde]","7.67249207078463162355050802`16.00999824291846*^7"}],StyleBox[
"\" at \"",{GrayLevel[0.6`],LinebreakAdjustments -> {1,100,1,0,100},LineIndent -> 0}],RowBox[
{TagBox["\[Lambda]",HoldForm],"\[TildeTilde]",RowBox[{"-","0.01190135542935006132680975099447095999`15.954589770191005"}]}]}],
TraditionalForm]],"Output",{Background -> None,GraphicsBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics"},DefaultAxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsAxes"],DefaultFrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsFrame"],DefaultFrameTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsFrameTicks"],DefaultTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsTicks"]},Graphics3DBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics3D"}}},
NumberPoint -> ".",CellSize -> {550,Automatic},AutoStyleOptions -> {"HighlightFormattingErrors" -> False},
RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}],XMLElement[
"dataformats",{},{"plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}],XMLElement[
"expressiontypes",{"count" -> "1"},{"\n   ",XMLElement["expressiontype",{"name" -> "Default"},
{}],"\n  "}]}]],Set[Typeset`pod11$$,XMLElement["pod",{"title" -> "Differential geometric curves","scanner" -> "Plotter","id" -> "DifferentialGeometricCurves","position" -> "1100","error" -> "false","numsubpods" -> "1"},
{XMLElement["subpod",{"title" -> ""},{XMLElement["cell",{"compressed" -> True,"string" -> False},
{Cell[
BoxData[FormBox[TagBox[FormBox[StyleBox[DynamicModuleBox[{Set[CalculateScan`PlotterScanner`Private`ar$$,
1],Set[CalculateScan`PlotterScanner`Private`contraPedalCurveColor$$,RGBColor[0.7464574`,
0.2952580000000001`,0.2454606`]],Set[CalculateScan`PlotterScanner`Private`contraPedalCurveCountFactor$$,
0.3`],Set[CalculateScan`PlotterScanner`Private`contraPedalCurveLastParamaters$$,{}],Set[
CalculateScan`PlotterScanner`Private`contraPedalCurveOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`contraPedalCurvePlotCurves$$,
{}],Set[CalculateScan`PlotterScanner`Private`contraPedalCurvePoints$$,"curve"],Set[
CalculateScan`PlotterScanner`Private`contraPedalCurveTF$$,False],Set[CalculateScan`PlotterScanner`Private`contraPedalCurveThickness$$,
-3.`],Set[CalculateScan`PlotterScanner`Private`dualCurveColor$$,RGBColor[0.2860602`,
0.4663408`,0.29410879999999995`]],Set[CalculateScan`PlotterScanner`Private`dualCurveCountFactor$$,
0.3`],Set[CalculateScan`PlotterScanner`Private`dualCurveLastParamaters$$,{}],Set[
CalculateScan`PlotterScanner`Private`dualCurveOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`dualCurvePlotCurves$$,
{}],Set[CalculateScan`PlotterScanner`Private`dualCurveTF$$,False],Set[CalculateScan`PlotterScanner`Private`dualCurveThickness$$,
-3.`],Set[CalculateScan`PlotterScanner`Private`dualPedalCurvePoints$$,"curve"],Set[
CalculateScan`PlotterScanner`Private`evoluteColor$$,RGBColor[0.813033`,0.766292`,
0.303458`]],Set[CalculateScan`PlotterScanner`Private`evoluteOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`evoluteTF$$,
False],Set[CalculateScan`PlotterScanner`Private`evoluteThickness$$,-3.`],Set[CalculateScan`PlotterScanner`Private`fy1$$,
0.982793723247329`],Set[CalculateScan`PlotterScanner`Private`fy2$$,0.982793723247329`],Set[
CalculateScan`PlotterScanner`Private`inverseCurveCircleRadiusFactor$$,0.4636476090008061`],Set[
CalculateScan`PlotterScanner`Private`inverseCurveColor$$,RGBColor[0.2860602`,0.4663408`,
0.29410879999999995`]],Set[CalculateScan`PlotterScanner`Private`inverseCurveCountFactor$$,
0.3`],Set[CalculateScan`PlotterScanner`Private`inverseCurveOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`inverseCurvePlotCurves$$,
{}],Set[CalculateScan`PlotterScanner`Private`inverseCurvePoints$$,"grid"],Set[CalculateScan`PlotterScanner`Private`inverseCurveTF$$,
False],Set[CalculateScan`PlotterScanner`Private`inverseCurveThickness$$,-3.`],Set[
CalculateScan`PlotterScanner`Private`inverseLastParamaters$$,{}],Set[CalculateScan`PlotterScanner`Private`involuteColor$$,
RGBColor[0.49978279999999997`,0.6025278`,0.2508104`]],Set[CalculateScan`PlotterScanner`Private`involuteCount$$,
60],Set[CalculateScan`PlotterScanner`Private`involuteOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`involutesLeftTF$$,
False],Set[CalculateScan`PlotterScanner`Private`involutesRightTF$$,True],Set[CalculateScan`PlotterScanner`Private`involuteTF$$,
False],Set[CalculateScan`PlotterScanner`Private`involuteThickness$$,-3.`],Set[CalculateScan`PlotterScanner`Private`isopticCurveAngle$$,
Times[Rational[1,3],Pi]],Set[CalculateScan`PlotterScanner`Private`isopticCurveColor$$,
RGBColor[0.8519382`,0.7451437999999999`,0.31752080000000005`]],Set[CalculateScan`PlotterScanner`Private`isopticCurveOpacity$$,
0.8`],Set[CalculateScan`PlotterScanner`Private`isopticCurvePlotCurves$$,{}],Set[CalculateScan`PlotterScanner`Private`isopticCurveTF$$,
False],Set[CalculateScan`PlotterScanner`Private`isopticCurveThickness$$,-3.`],Set[
CalculateScan`PlotterScanner`Private`isopticLastParamaters$$,{}],Set[CalculateUtilities`GraphicsUtilities`Private`more$$,
False],Set[CalculateScan`PlotterScanner`Private`negativePedalCurveColor$$,RGBColor[
0.7464574`,0.2952580000000001`,0.2454606`]],Set[CalculateScan`PlotterScanner`Private`negativePedalCurveCountFactor$$,
0.3`],Set[CalculateScan`PlotterScanner`Private`negativePedalCurveLastParamaters$$,
{}],Set[CalculateScan`PlotterScanner`Private`negativePedalCurveOpacity$$,0.8`],Set[
CalculateScan`PlotterScanner`Private`negativePedalCurvePlotCurves$$,{}],Set[CalculateScan`PlotterScanner`Private`negativePedalCurvePoints$$,
"curve"],Set[CalculateScan`PlotterScanner`Private`negativePedalCurveTF$$,False],Set[
CalculateScan`PlotterScanner`Private`negativePedalCurveThickness$$,-3.`],Set[CalculateScan`PlotterScanner`Private`normalColor$$,
RGBColor[0.237`,0.34`,0.575`]],Set[CalculateScan`PlotterScanner`Private`normalCount$$,
120],Set[CalculateScan`PlotterScanner`Private`normalLength$$,0.007368353319886826`],Set[
CalculateScan`PlotterScanner`Private`normalOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`normalTF$$,
True],Set[CalculateScan`PlotterScanner`Private`normalThickness$$,-3.`],Set[CalculateScan`PlotterScanner`Private`offsetCurveColor$$,
RGBColor[0.877875`,0.731045`,0.326896`]],Set[CalculateScan`PlotterScanner`Private`offsetCurveCount$$,
12],Set[CalculateScan`PlotterScanner`Private`offsetCurveDistance$$,0.007368353319886826`],Set[
CalculateScan`PlotterScanner`Private`offsetCurveLastParamaters$$,{}],Set[CalculateScan`PlotterScanner`Private`offsetCurveOpacity$$,
0.8`],Set[CalculateScan`PlotterScanner`Private`offsetCurvePlotCurves$$,{}],Set[CalculateScan`PlotterScanner`Private`offsetCurveTF$$,
False],Set[CalculateScan`PlotterScanner`Private`offsetCurveThickness$$,-3.`],Set[
CalculateScan`PlotterScanner`Private`orthotomicCurveAngle$$,Times[Rational[1,3],Pi]],Set[
CalculateScan`PlotterScanner`Private`orthotomicCurveColor$$,RGBColor[0.8519382`,0.7451437999999999`,
0.31752080000000005`]],Set[CalculateScan`PlotterScanner`Private`orthotomicCurveCountFactor$$,
0.3`],Set[CalculateScan`PlotterScanner`Private`orthotomicCurveOpacity$$,0.8`],Set[
CalculateScan`PlotterScanner`Private`orthotomicCurvePlotCurves$$,{}],Set[CalculateScan`PlotterScanner`Private`orthotomicCurvePoints$$,
"curve"],Set[CalculateScan`PlotterScanner`Private`orthotomicCurveTF$$,False],Set[
CalculateScan`PlotterScanner`Private`orthotomicCurveThickness$$,-3.`],Set[CalculateScan`PlotterScanner`Private`orthotomicLastParamaters$$,
{}],Set[CalculateScan`PlotterScanner`Private`osculatingCircleColor$$,RGBColor[0.2752426`,
0.4446824`,0.33950440000000004`]],Set[CalculateScan`PlotterScanner`Private`osculatingCircleCount$$,
60],Set[CalculateScan`PlotterScanner`Private`osculatingCircleLastParamaters$$,{}],Set[
CalculateScan`PlotterScanner`Private`osculatingCircleOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`osculatingCircleRadiiTF$$,
False],Set[CalculateScan`PlotterScanner`Private`osculatingCircles$$,{}],Set[CalculateScan`PlotterScanner`Private`osculatingCircleTF$$,
False],Set[CalculateScan`PlotterScanner`Private`osculatingCircleThickness$$,-3.`],Set[
CalculateScan`PlotterScanner`Private`pedalCurveColor$$,RGBColor[0.32894650000000003`,
0.5006225`,0.2625337`]],Set[CalculateScan`PlotterScanner`Private`pedalCurveCountFactor$$,
0.3`],Set[CalculateScan`PlotterScanner`Private`pedalCurveLastParamaters$$,{}],Set[
CalculateScan`PlotterScanner`Private`pedalCurveOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`pedalCurvePlotCurves$$,
{}],Set[CalculateScan`PlotterScanner`Private`pedalCurvePoints$$,"curve"],Set[CalculateScan`PlotterScanner`Private`pedalCurveTF$$,
False],Set[CalculateScan`PlotterScanner`Private`pedalCurveThickness$$,-3.`],Set[CalculateScan`PlotterScanner`Private`sa$$,
False],Set[CalculateScan`PlotterScanner`Private`sqPRQ$$,False],Set[CalculateScan`PlotterScanner`Private`st$$,
False],Set[CalculateScan`PlotterScanner`Private`symmxQ$$,False],Set[CalculateScan`PlotterScanner`Private`symmyQ$$,
True],Set[CalculateScan`PlotterScanner`Private`tangentColor$$,RGBColor[0.237736`,
0.340215`,0.575113`]],Set[CalculateScan`PlotterScanner`Private`tangentCount$$,60],Set[
CalculateScan`PlotterScanner`Private`tangentLength$$,0.007368353319886826`],Set[CalculateScan`PlotterScanner`Private`tangentOpacity$$,
0.8`],Set[CalculateScan`PlotterScanner`Private`tangentTF$$,False],Set[CalculateScan`PlotterScanner`Private`tangentThickness$$,
-3.`],Set[CalculateScan`PlotterScanner`Private`taylorParabolaColor$$,RGBColor[0.7189495000000001`,
0.719797`,0.283877`]],Set[CalculateScan`PlotterScanner`Private`taylorParabolaCount$$,
36],Set[CalculateScan`PlotterScanner`Private`taylorParabolaLastParamaters$$,{}],Set[
CalculateScan`PlotterScanner`Private`taylorParabolaOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`taylorParabolas$$,
{}],Set[CalculateScan`PlotterScanner`Private`taylorParabolaTF$$,False],Set[CalculateScan`PlotterScanner`Private`taylorParabolaThickness$$,
-3.`],Set[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveAngle$$,Times[Rational[
1,4],Pi]],Set[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveColor$$,RGBColor[
0.49978279999999997`,0.6025278`,0.2508104`]],Set[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveCount$$,
12],Set[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveDistance$$,0.007368353319886826`],Set[
CalculateScan`PlotterScanner`Private`tiltedOffsetCurveLastParamaters$$,{}],Set[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveOpacity$$,
0.8`],Set[CalculateScan`PlotterScanner`Private`tiltedOffsetCurvePlotCurves$$,{}],Set[
CalculateScan`PlotterScanner`Private`tiltedOffsetCurveTF$$,False],Set[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveThickness$$,
-3.`],Set[CalculateScan`PlotterScanner`Private`tiltedTangentAngle$$,Times[Rational[
1,4],Pi]],Set[CalculateScan`PlotterScanner`Private`tiltedTangentColor$$,RGBColor[
0.2622702`,0.40739780000000003`,0.41955020000000004`]],Set[CalculateScan`PlotterScanner`Private`tiltedTangentCount$$,
60],Set[CalculateScan`PlotterScanner`Private`tiltedTangentLength$$,0.007368353319886826`],Set[
CalculateScan`PlotterScanner`Private`tiltedTangentOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`tiltedTangentTF$$,
False],Set[CalculateScan`PlotterScanner`Private`tiltedTangentThickness$$,-3.`],Set[
CalculateScan`PlotterScanner`Private`x1$$,-0.7113535528391504`],Set[CalculateScan`PlotterScanner`Private`x2$$,
0.8499051798532513`],Set[Typeset`show$$,True],Set[Typeset`bookmarkList$$,{}],Set[
Typeset`bookmarkMode$$,"Menu"],Typeset`animator$$,Set[Typeset`animvar$$,1],Set[Typeset`name$$,
"\"untitled\""],Set[Typeset`specs$$,{{Hold[CalculateUtilities`GraphicsUtilities`Private`more$$],{False,True}},{{Hold[
CalculateScan`PlotterScanner`Private`x1$$],-0.7113535528391504`,Subscript[Style["\[Lambda]",
Italic],"min"]},-1.5393804002589986`,1.5393804002589986`},{{Hold[CalculateScan`PlotterScanner`Private`x2$$],0.8499051798532513`,Subscript[
Style["\[Lambda]",Italic],"max"]},-1.5393804002589986`,1.5393804002589986`},{{Hold[
CalculateScan`PlotterScanner`Private`symmxQ$$],False,"symmetric"},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`fy1$$],0.982793723247329`,Subscript["y","min"]},0,1.5393804002589986`},{{Hold[
CalculateScan`PlotterScanner`Private`fy2$$],0.982793723247329`,Subscript["y","max"]},0,1.5393804002589986`},{{Hold[
CalculateScan`PlotterScanner`Private`symmyQ$$],True,"symmetric"},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`sqPRQ$$],False,Dynamic[Style["same as horizontal-range",
If[CalculateScan`PlotterScanner`Private`symmxQ$$,Black,Gray]]]},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`sa$$],False,"show axes"},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`st$$],False,Dynamic[Style["show ticks",If[SameQ[
CalculateScan`PlotterScanner`Private`sa$$,True],Black,Gray]]]},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`ar$$],1,"aspect ratio"},Rational[1,4],4},{{Hold[
CalculateScan`PlotterScanner`Private`tangentTF$$],False,""},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`tangentCount$$],60,""},2,360,1},{{Hold[CalculateScan`PlotterScanner`Private`tangentLength$$],0.007368353319886826`,""},0,1.5393804002589986`},{{Hold[
CalculateScan`PlotterScanner`Private`tangentThickness$$],-3.`,""},-4,-0.5`},{{Hold[
CalculateScan`PlotterScanner`Private`tangentColor$$],RGBColor[0.237736`,0.340215`,
0.575113`],""},RGBColor[1,0,0]},{{Hold[CalculateScan`PlotterScanner`Private`tangentOpacity$$],0.8`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`normalTF$$],True,""},{True,False}},{{Hold[CalculateScan`PlotterScanner`Private`normalCount$$],120,""},2,360,1},{{Hold[
CalculateScan`PlotterScanner`Private`normalLength$$],0.007368353319886826`,""},0,1.5393804002589986`},{{Hold[
CalculateScan`PlotterScanner`Private`normalThickness$$],-3.`,""},-4,-0.5`},{{Hold[
CalculateScan`PlotterScanner`Private`normalColor$$],RGBColor[0.237`,0.34`,0.575`],""},RGBColor[
1,0,0]},{{Hold[CalculateScan`PlotterScanner`Private`normalOpacity$$],0.8`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`tiltedTangentTF$$],False,""},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`tiltedTangentAngle$$],Times[Rational[1,4],Pi],""},Times[
-1,Pi],Pi},{{Hold[CalculateScan`PlotterScanner`Private`tiltedTangentCount$$],60,""},2,360,1},{{Hold[
CalculateScan`PlotterScanner`Private`tiltedTangentLength$$],0.007368353319886826`,""},0,1.5393804002589986`},{{Hold[
CalculateScan`PlotterScanner`Private`tiltedTangentThickness$$],-3.`,""},-4,-0.5`},{{Hold[
CalculateScan`PlotterScanner`Private`tiltedTangentColor$$],RGBColor[0.2622702`,0.40739780000000003`,
0.41955020000000004`],""},RGBColor[1,0,0]},{{Hold[CalculateScan`PlotterScanner`Private`tiltedTangentOpacity$$],0.8`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`osculatingCircleTF$$],False,""},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`osculatingCircleCount$$],60,""},2,360,1},{{Hold[
CalculateScan`PlotterScanner`Private`osculatingCircleThickness$$],-3.`,""},-4,-0.5`},{{Hold[
CalculateScan`PlotterScanner`Private`osculatingCircleColor$$],RGBColor[0.2752426`,
0.4446824`,0.33950440000000004`],""},RGBColor[1,0,0]},{{Hold[CalculateScan`PlotterScanner`Private`osculatingCircleOpacity$$],0.8`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`osculatingCircleRadiiTF$$],False,""},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`taylorParabolaTF$$],False,""},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`taylorParabolaCount$$],36,""},2,120,1},{{Hold[
CalculateScan`PlotterScanner`Private`taylorParabolaThickness$$],-3.`,""},-4,-0.5`},{{Hold[
CalculateScan`PlotterScanner`Private`taylorParabolaColor$$],RGBColor[0.7189495000000001`,
0.719797`,0.283877`],""},RGBColor[1,0,0]},{{Hold[CalculateScan`PlotterScanner`Private`taylorParabolaOpacity$$],0.8`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`involuteTF$$],False,""},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`involuteCount$$],60,""},1,120,1},{{Hold[CalculateScan`PlotterScanner`Private`involuteThickness$$],-3.`,""},-4,-0.5`},{{Hold[
CalculateScan`PlotterScanner`Private`involuteColor$$],RGBColor[0.49978279999999997`,
0.6025278`,0.2508104`],""},RGBColor[1,0,0]},{{Hold[CalculateScan`PlotterScanner`Private`involuteOpacity$$],0.8`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`involutesLeftTF$$],False,""},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`involutesRightTF$$],True,""},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`evoluteTF$$],False,""},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`evoluteThickness$$],-3.`,""},-4,-0.5`},{{Hold[
CalculateScan`PlotterScanner`Private`evoluteColor$$],RGBColor[0.813033`,0.766292`,
0.303458`],""},RGBColor[1,0,0]},{{Hold[CalculateScan`PlotterScanner`Private`evoluteOpacity$$],0.8`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`offsetCurveTF$$],False,""},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`offsetCurveDistance$$],0.007368353319886826`,""},0,1.5393804002589986`},{{Hold[
CalculateScan`PlotterScanner`Private`offsetCurveCount$$],12,""},1,60,1},{{Hold[CalculateScan`PlotterScanner`Private`offsetCurveThickness$$],-3.`,""},-4,-0.5`},{{Hold[
CalculateScan`PlotterScanner`Private`offsetCurveColor$$],RGBColor[0.877875`,0.731045`,
0.326896`],""},RGBColor[1,0,0]},{{Hold[CalculateScan`PlotterScanner`Private`offsetCurveOpacity$$],0.8`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`tiltedOffsetCurveTF$$],False,""},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`tiltedOffsetCurveAngle$$],Times[Rational[1,4],
Pi],""},Times[-1,Pi],Pi},{{Hold[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveDistance$$],0.007368353319886826`,""},0,1.5393804002589986`},{{Hold[
CalculateScan`PlotterScanner`Private`tiltedOffsetCurveCount$$],12,""},1,60,1},{{Hold[
CalculateScan`PlotterScanner`Private`tiltedOffsetCurveThickness$$],-3.`,""},-4,-0.5`},{{Hold[
CalculateScan`PlotterScanner`Private`tiltedOffsetCurveColor$$],RGBColor[0.49978279999999997`,
0.6025278`,0.2508104`],""},RGBColor[1,0,0]},{{Hold[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveOpacity$$],0.8`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`pedalCurveTF$$],False,""},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`pedalCurveCountFactor$$],0.3`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`pedalCurveThickness$$],-3.`,""},-4,-0.5`},{{Hold[
CalculateScan`PlotterScanner`Private`pedalCurveColor$$],RGBColor[0.32894650000000003`,
0.5006225`,0.2625337`],""},RGBColor[1,0,0]},{{Hold[CalculateScan`PlotterScanner`Private`pedalCurveOpacity$$],0.8`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`pedalCurvePoints$$],"curve",""},{"grid","curve"}},{{Hold[
CalculateScan`PlotterScanner`Private`negativePedalCurveTF$$],False,""},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`negativePedalCurveCountFactor$$],0.3`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`negativePedalCurveThickness$$],-3.`,""},-4,-0.5`},{{Hold[
CalculateScan`PlotterScanner`Private`negativePedalCurveColor$$],RGBColor[0.7464574`,
0.2952580000000001`,0.2454606`],""},RGBColor[1,0,0]},{{Hold[CalculateScan`PlotterScanner`Private`negativePedalCurveOpacity$$],0.8`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`negativePedalCurvePoints$$],"curve",""},{"curve","grid"}},{{Hold[
CalculateScan`PlotterScanner`Private`contraPedalCurveTF$$],False,""},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`contraPedalCurveCountFactor$$],0.3`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`contraPedalCurveThickness$$],-3.`,""},-4,-0.5`},{{Hold[
CalculateScan`PlotterScanner`Private`contraPedalCurveColor$$],RGBColor[0.7464574`,
0.2952580000000001`,0.2454606`],""},RGBColor[1,0,0]},{{Hold[CalculateScan`PlotterScanner`Private`contraPedalCurveOpacity$$],0.8`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`contraPedalCurvePoints$$],"curve",""},{"curve","grid"}},{{Hold[
CalculateScan`PlotterScanner`Private`dualCurveTF$$],False,""},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`dualCurveCountFactor$$],0.3`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`dualCurveThickness$$],-3.`,""},-4,-0.5`},{{Hold[
CalculateScan`PlotterScanner`Private`dualCurveColor$$],RGBColor[0.2860602`,0.4663408`,
0.29410879999999995`],""},RGBColor[1,0,0]},{{Hold[CalculateScan`PlotterScanner`Private`dualCurveOpacity$$],0.8`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`dualPedalCurvePoints$$],"curve",""},{"curve","grid"}},{{Hold[
CalculateScan`PlotterScanner`Private`inverseCurveTF$$],False,""},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`inverseCurveCountFactor$$],0.3`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`inverseCurveThickness$$],-3.`,""},-4,-0.5`},{{Hold[
CalculateScan`PlotterScanner`Private`inverseCurveColor$$],RGBColor[0.2860602`,0.4663408`,
0.29410879999999995`],""},RGBColor[1,0,0]},{{Hold[CalculateScan`PlotterScanner`Private`inverseCurveOpacity$$],0.8`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`inverseCurvePoints$$],"grid",""},{"curve","grid"}},{{Hold[
CalculateScan`PlotterScanner`Private`inverseCurveCircleRadiusFactor$$],0.4636476090008061`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`isopticCurveTF$$],False,""},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`isopticCurveAngle$$],Times[Rational[1,3],Pi],""},0,Pi},{{Hold[
CalculateScan`PlotterScanner`Private`isopticCurveThickness$$],-3.`,""},-4,-0.5`},{{Hold[
CalculateScan`PlotterScanner`Private`isopticCurveColor$$],RGBColor[0.8519382`,0.7451437999999999`,
0.31752080000000005`],""},RGBColor[1,0,0]},{{Hold[CalculateScan`PlotterScanner`Private`isopticCurveOpacity$$],0.8`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`orthotomicCurveTF$$],False,""},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`orthotomicCurveAngle$$],Times[Rational[1,3],
Pi],""},0,Pi},{{Hold[CalculateScan`PlotterScanner`Private`orthotomicCurveCountFactor$$],0.3`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`orthotomicCurveThickness$$],-3.`,""},-4,-0.5`},{{Hold[
CalculateScan`PlotterScanner`Private`orthotomicCurveColor$$],RGBColor[0.8519382`,
0.7451437999999999`,0.31752080000000005`],""},RGBColor[1,0,0]},{{Hold[CalculateScan`PlotterScanner`Private`orthotomicCurveOpacity$$],0.8`,""},0,1},{{Hold[
CalculateScan`PlotterScanner`Private`orthotomicCurvePoints$$],"curve",""},{"curve","grid"}},{Hold[
Style[Overlay[{Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","PodInfoBackground"]]],Pane[
Column[{Row[{Invisible[Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","OrangePlus"]]]]," ",Column[
{"Horizontal plot range:",Row[{Manipulate`Place[1],"  ",Manipulate`Place[2],"  ",Manipulate`Place[
3]}]}]}],PaneSelector[{True -> Grid[{{Button[Row[{Dynamic[RawBoxes[FEPrivate`FrontEndResource[
"WABitmaps","OrangePlus"]]]," "}],Set[CalculateUtilities`GraphicsUtilities`Private`more$$,
False],Appearance -> None,BaseStyle -> {}],Button["Fewer controls",Set[CalculateUtilities`GraphicsUtilities`Private`more$$,
False],Appearance -> None,BaseStyle -> {}]},{"",Item[Column[{Column[{"Vertical plot range:",Row[
{Manipulate`Place[4],"  ",Manipulate`Place[5],"  ",Manipulate`Place[6]}],Manipulate`Place[
7]}],Column[{Row[{Manipulate`Place[8],"  ",Manipulate`Place[9]}],Row[{Manipulate`Place[
10],"   settings: ",Button["1",Set[CalculateScan`PlotterScanner`Private`ar$$,1],ImageSize -> Small,
Appearance -> "Palette",BaseStyle -> {}],"  ",Button["unscaled axes",Function[If[
LessEqual[Times[1,Power[4,-1]],Slot[1],4],Set[CalculateScan`PlotterScanner`Private`ar$$,
Slot[1]]]][Times[Abs[Apply[Subtract,CalculateScan`PlotterScanner`Private`pRY]],Power[
Abs[Apply[Subtract,CalculateScan`PlotterScanner`Private`pRX]],-1]]],ImageSize -> Small,
Appearance -> "Palette",BaseStyle -> {}]}]}],TabView[{Row[{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`tangentTF$$,
Style["\[Checkmark]",CalculateScan`PlotterScanner`Private`tangentColor$$,Bold]," "]],Tooltip[
" tangents             ",Style[" family of tangents at points along the curve ",GrayLevel[
0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show tangents",Manipulate`Place[11]},{"tangent count",Manipulate`Place[
12]},{"tangent length",Manipulate`Place[13]},{"tangent thickness",Manipulate`Place[
14]},{"tangent color",Manipulate`Place[15]},{"tangent opacity",Manipulate`Place[16]}},
Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[{" ",Dynamic[
If[CalculateScan`PlotterScanner`Private`normalTF$$,Style["\[Checkmark]",CalculateScan`PlotterScanner`Private`normalColor$$,
Bold]," "]],Tooltip[" normals              ",Style[" family of normals at points along the curve ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show normals",Manipulate`Place[
17]},{"normal count",Manipulate`Place[18]},{"normal length",Manipulate`Place[19]},{"normal thickness",Manipulate`Place[
20]},{"normal color",Manipulate`Place[21]},{"normal opacity",Manipulate`Place[22]}},
Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[{" ",Dynamic[
If[CalculateScan`PlotterScanner`Private`tiltedTangentTF$$,Style["\[Checkmark]",CalculateScan`PlotterScanner`Private`tiltedTangentColor$$,
Bold]," "]],Tooltip[" tilted tangents      ",Style[" family of tilted tangents at points along the curve ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show tilted tangents",Manipulate`Place[
23]},{"tilted tangent angle",Manipulate`Place[24]},{"tilted tangent count",Manipulate`Place[
25]},{"tilted tangent length",Manipulate`Place[26]},{"tilted tangent thickness",Manipulate`Place[
27]},{"tilted tangent color",Manipulate`Place[28]},{"tilted tangent opacity",Manipulate`Place[
29]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`osculatingCircleTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`osculatingCircleColor$$,Bold]," "]],Tooltip[
" osculating circles   ",Style[" family of osculating circles (circles that are tangent to the curve) at points along the curve",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Column[{Grid[{{"show osculating circles",Manipulate`Place[
30]},{"osculating circle count",Manipulate`Place[31]},{"osculating circle thickness",Manipulate`Place[
32]},{"osculating circle color",Manipulate`Place[33]},{"osculating circle opacity",Manipulate`Place[
34]},{"show circle radii",Manipulate`Place[35]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,True}}],Dynamic[
Style[If[And[CalculateScan`PlotterScanner`Private`osculatingCircleTF$$,Not[Less[0.98`,
CalculateScan`PlotterScanner`Private`ar$$,1.02`]]],"(note than circles appear as ellipses for unequally\nscaled horizontal and vertical axes)",
""]],RGBColor[0.6666666666666666`,0.6666666666666666`,0.6666666666666666`]]},Alignment -> Left],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`taylorParabolaTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`taylorParabolaColor$$,Bold]," "]],Tooltip[" Taylor parabolas     ",
Style[" family of second order Taylor approximations",GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Column[
{Grid[{{"show Taylor parabolas",Manipulate`Place[36]},{"Taylor parabola count",Manipulate`Place[
37]},{"Taylor parabola thickness",Manipulate`Place[38]},{"Taylor parabola color",Manipulate`Place[
39]},{"Taylor parabola opacity",Manipulate`Place[40]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,True}}]},
Alignment -> Left],Row[{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`involuteTF$$,
Style["\[Checkmark]",CalculateScan`PlotterScanner`Private`involuteColor$$,Bold]," "]],Tooltip[
" involutes            ",Style[" family of involutes (curves traced out by strings unwound from the curve) of the curve",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show involutes",Manipulate`Place[
41]},{"involute count",Manipulate`Place[42]},{"involute thickness",Manipulate`Place[
43]},{"involute color",Manipulate`Place[44]},{"involute opacity",Manipulate`Place[
45]},{"directions",Row[{"\[DoubleLongLeftArrow]",Manipulate`Place[46],"  \[DoubleLongRightArrow]",Manipulate`Place[
47]}]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,True}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`evoluteTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`evoluteColor$$,Bold]," "]],Tooltip[" evolute              ",
Style[" the evolute of a given curve (curve of the centers of the osculating circles))",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show evolute",Manipulate`Place[
48]},{"evolute thickness",Manipulate`Place[49]},{"evolute color",Manipulate`Place[
50]},{"evolute opacity",Manipulate`Place[51]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`offsetCurveTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`offsetCurveColor$$,Bold]," "]],Tooltip[" offset curves        ",
Style[" family of offset curves (curves shifted a fixed distance perpendicular to each point of the original curve) ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show offset curves",Manipulate`Place[
52]},{"offset curve distance",Manipulate`Place[53]},{"offset curve count",Manipulate`Place[
54]},{"offset curve thickness",Manipulate`Place[55]},{"offset curve color",Manipulate`Place[
56]},{"offset curve opacity",Manipulate`Place[57]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveTF$$,Style[
"\[Checkmark]",CalculateScan`PlotterScanner`Private`tiltedOffsetCurveColor$$,Bold],
" "]],Tooltip[" tilted offset curves ",Style[" family of tilted offset curves (curves shifted a fixed distance in a direction with a fixed angle                                       to the local normal to each point of the original curve) ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show tilted offset curves",Manipulate`Place[
58]},{"tilted offset curve angle",Manipulate`Place[59]},{"tilted offset curve distance",Manipulate`Place[
60]},{"tilted offset curve count",Manipulate`Place[61]},{"tilted offset curve thickness",Manipulate`Place[
62]},{"tilted offset curve color",Manipulate`Place[63]},{"tilted offset curve opacity",Manipulate`Place[
64]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`pedalCurveTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`pedalCurveColor$$,Bold]," "]],Tooltip[" pedal curves         ",
Style[" family of pedal curves (curves on the tangents of the given curve perpendicular to a given point) ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show pedal curves",Manipulate`Place[
65]},{"pedal curve count",Manipulate`Place[66]},{"pedal curve thickness",Manipulate`Place[
67]},{"pedal curve color",Manipulate`Place[68]},{"pedal curve opacity",Manipulate`Place[
69]},{"pedal points",Manipulate`Place[70]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,True}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`negativePedalCurveTF$$,Style[
"\[Checkmark]",CalculateScan`PlotterScanner`Private`negativePedalCurveColor$$,Bold],
" "]],Tooltip[" negative pedal curves",Style[" family of negative pedal curves (envelope curves of lines perpendicular to the given curve and a given point) ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show negative pedal curves",Manipulate`Place[
71]},{"negative pedal curve count",Manipulate`Place[72]},{"negative pedal curve thickness",Manipulate`Place[
73]},{"negative pedal curve color",Manipulate`Place[74]},{"negative pedal curve opacity",Manipulate`Place[
75]},{"negative pedal points",Manipulate`Place[76]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`contraPedalCurveTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`contraPedalCurveColor$$,Bold]," "]],Tooltip[
" contrapedal curves   ",Style[" family of contrapedal curves (curves on the normals of the given curve perpendicular to a given point) ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show contrapedal curves",Manipulate`Place[
77]},{"contrapedal curve count",Manipulate`Place[78]},{"contrapedal curve thickness",Manipulate`Place[
79]},{"contrapedal curve color",Manipulate`Place[80]},{"contrapedal curve opacity",Manipulate`Place[
81]},{"contrapedal pedal points",Manipulate`Place[82]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`dualCurveTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`dualCurveColor$$,Bold]," "]],Tooltip[" dual curves          ",
Style[" dual curve of the given curve (the dual curbe maps inflection points to cusps) ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show dual curves",Manipulate`Place[
83]},{"dual curve count",Manipulate`Place[84]},{"dual curve thickness",Manipulate`Place[
85]},{"dual curve color",Manipulate`Place[86]},{"dual curve opacity",Manipulate`Place[
87]},{"dual curve points",Manipulate`Place[88]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`inverseCurveTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`inverseCurveColor$$,Bold]," "]],Tooltip[" inverse curves       ",
Style[" inverse curves (curves resulting from carrying of an inversion on circles) ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show inverse curves",Manipulate`Place[
89]},{"inverse curve count",Manipulate`Place[90]},{"inverse curve thickness",Manipulate`Place[
91]},{"inverse curve color",Manipulate`Place[92]},{"inverse curve opacity",Manipulate`Place[
93]},{"inversion curve points",Manipulate`Place[94]},{"inversion circle radius",Manipulate`Place[
95]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`isopticCurveTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`isopticCurveColor$$,Bold]," "]],Tooltip[" isoptic curves       ",
Style[" inverse curves (points on isoptic curves have two tangents with the given curve and the two tangents meet with the specified angle)) ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Column[{Grid[{{"show isoptic curves",Manipulate`Place[
96]},{"isoptic curve angle",Manipulate`Place[97]},{"isoptic curve thickness",Manipulate`Place[
98]},{"isoptic curve color",Manipulate`Place[99]},{"isoptic curve opacity",Manipulate`Place[
100]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Dynamic[
Style[If[TrueQ[And[CalculateScan`PlotterScanner`Private`isopticCurveTF$$,SameQ[CalculateScan`PlotterScanner`Private`x1x2SCPCurves,
{}]]],"(note than the set of isoptic curves for a given angle can be empty)",""]],
RGBColor[0.6666666666666666`,0.6666666666666666`,0.6666666666666666`]]},Alignment -> Left],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`orthotomicCurveTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`orthotomicCurveColor$$,Bold]," "]],Tooltip[" orthotomic curves    ",
Style[" orthotomic curves (points of reflections of a given point on curve tangents)) ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show orthotomic curves",Manipulate`Place[
101]},{"orthotomic curve angle",Manipulate`Place[102]},{"orthotomic curve count",Manipulate`Place[
103]},{"orthotomic curve thickness",Manipulate`Place[104]},{"orthotomic curve color",Manipulate`Place[
105]},{"orthotomic curve opacity",Manipulate`Place[106]},{"orthotomic curve points",Manipulate`Place[
107]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}]},
2,ImageSize -> {All,Automatic},ControlPlacement -> Left]},Dividers -> {None,{False,True,True,True}},
Spacings -> 1],ItemSize -> Scaled[1],Frame -> {None,None,True,None}]}},FrameStyle -> GrayLevel[
0.9`],Alignment -> Left,Spacings -> {0,0.8`}],False -> Button[Row[{Dynamic[RawBoxes[
FEPrivate`FrontEndResource["WABitmaps","OrangePlus"]]]," ","More controls"}],Set[
CalculateUtilities`GraphicsUtilities`Private`more$$,True],Appearance -> None,BaseStyle -> {}]},
Dynamic[CalculateUtilities`GraphicsUtilities`Private`more$$],ImageSize -> Automatic]}],
ImageMargins -> {{20,30},{10,10}}]},{1,2},2,Alignment -> {Left,Top}]]],Manipulate`Dump`ThisIsNotAControl},{{Hold[
CalculateScan`PlotterScanner`Private`osculatingCircleLastParamaters$$],{}}},{{Hold[
CalculateScan`PlotterScanner`Private`osculatingCircles$$],{}}},{{Hold[CalculateScan`PlotterScanner`Private`taylorParabolaLastParamaters$$],{}}},{{Hold[
CalculateScan`PlotterScanner`Private`taylorParabolas$$],{}}},{{Hold[CalculateScan`PlotterScanner`Private`offsetCurveLastParamaters$$],{}}},{{Hold[
CalculateScan`PlotterScanner`Private`offsetCurvePlotCurves$$],{}}},{{Hold[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveLastParamaters$$],{}}},{{Hold[
CalculateScan`PlotterScanner`Private`tiltedOffsetCurvePlotCurves$$],{}}},{{Hold[CalculateScan`PlotterScanner`Private`pedalCurveLastParamaters$$],{}}},{{Hold[
CalculateScan`PlotterScanner`Private`pedalCurvePlotCurves$$],{}}},{{Hold[CalculateScan`PlotterScanner`Private`negativePedalCurveLastParamaters$$],{}}},{{Hold[
CalculateScan`PlotterScanner`Private`negativePedalCurvePlotCurves$$],{}}},{{Hold[
CalculateScan`PlotterScanner`Private`contraPedalCurveLastParamaters$$],{}}},{{Hold[
CalculateScan`PlotterScanner`Private`contraPedalCurvePlotCurves$$],{}}},{{Hold[CalculateScan`PlotterScanner`Private`dualCurveLastParamaters$$],{}}},{{Hold[
CalculateScan`PlotterScanner`Private`dualCurvePlotCurves$$],{}}},{{Hold[CalculateScan`PlotterScanner`Private`inverseLastParamaters$$],{}}},{{Hold[
CalculateScan`PlotterScanner`Private`inverseCurvePlotCurves$$],{}}},{{Hold[CalculateScan`PlotterScanner`Private`orthotomicLastParamaters$$],{}}},{{Hold[
CalculateScan`PlotterScanner`Private`orthotomicCurvePlotCurves$$],{}}},{{Hold[CalculateScan`PlotterScanner`Private`isopticLastParamaters$$],{}}},{{Hold[
CalculateScan`PlotterScanner`Private`isopticCurvePlotCurves$$],{}}}}],Set[Typeset`size$$,
Automatic],Set[Typeset`update$$,0],Set[Typeset`initDone$$,False],Set[Typeset`skipInitDone$$,
False],Set[CalculateUtilities`GraphicsUtilities`Private`more$1868555$$,False],Set[
CalculateScan`PlotterScanner`Private`x1$1868556$$,0],Set[CalculateScan`PlotterScanner`Private`x2$1868557$$,
0],Set[CalculateScan`PlotterScanner`Private`symmxQ$1868558$$,False],Set[CalculateScan`PlotterScanner`Private`fy1$1868559$$,
0],Set[CalculateScan`PlotterScanner`Private`fy2$1868560$$,0],Set[CalculateScan`PlotterScanner`Private`symmyQ$1868561$$,
False],Set[CalculateScan`PlotterScanner`Private`sqPRQ$1868562$$,False],Set[CalculateScan`PlotterScanner`Private`ar$1868563$$,
0],Set[CalculateScan`PlotterScanner`Private`tangentCount$1868564$$,0],Set[CalculateScan`PlotterScanner`Private`tangentLength$1868565$$,
0],Set[CalculateScan`PlotterScanner`Private`tangentThickness$1868566$$,0],Set[CalculateScan`PlotterScanner`Private`tangentOpacity$1868567$$,
0],Set[CalculateScan`PlotterScanner`Private`normalCount$1868568$$,0]},DynamicBox[
Manipulate`ManipulateBoxes[2,TraditionalForm,RuleDelayed["Variables",{Set[CalculateScan`PlotterScanner`Private`ar$$,
1],Set[CalculateScan`PlotterScanner`Private`contraPedalCurveColor$$,RGBColor[0.7464574`,
0.2952580000000001`,0.2454606`]],Set[CalculateScan`PlotterScanner`Private`contraPedalCurveCountFactor$$,
0.3`],Set[CalculateScan`PlotterScanner`Private`contraPedalCurveLastParamaters$$,{}],Set[
CalculateScan`PlotterScanner`Private`contraPedalCurveOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`contraPedalCurvePlotCurves$$,
{}],Set[CalculateScan`PlotterScanner`Private`contraPedalCurvePoints$$,"curve"],Set[
CalculateScan`PlotterScanner`Private`contraPedalCurveTF$$,False],Set[CalculateScan`PlotterScanner`Private`contraPedalCurveThickness$$,
-3.`],Set[CalculateScan`PlotterScanner`Private`dualCurveColor$$,RGBColor[0.2860602`,
0.4663408`,0.29410879999999995`]],Set[CalculateScan`PlotterScanner`Private`dualCurveCountFactor$$,
0.3`],Set[CalculateScan`PlotterScanner`Private`dualCurveLastParamaters$$,{}],Set[
CalculateScan`PlotterScanner`Private`dualCurveOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`dualCurvePlotCurves$$,
{}],Set[CalculateScan`PlotterScanner`Private`dualCurveTF$$,False],Set[CalculateScan`PlotterScanner`Private`dualCurveThickness$$,
-3.`],Set[CalculateScan`PlotterScanner`Private`dualPedalCurvePoints$$,"curve"],Set[
CalculateScan`PlotterScanner`Private`evoluteColor$$,RGBColor[0.813033`,0.766292`,
0.303458`]],Set[CalculateScan`PlotterScanner`Private`evoluteOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`evoluteTF$$,
False],Set[CalculateScan`PlotterScanner`Private`evoluteThickness$$,-3.`],Set[CalculateScan`PlotterScanner`Private`fy1$$,
0.982793723247329`],Set[CalculateScan`PlotterScanner`Private`fy2$$,0.982793723247329`],Set[
CalculateScan`PlotterScanner`Private`inverseCurveCircleRadiusFactor$$,0.4636476090008061`],Set[
CalculateScan`PlotterScanner`Private`inverseCurveColor$$,RGBColor[0.2860602`,0.4663408`,
0.29410879999999995`]],Set[CalculateScan`PlotterScanner`Private`inverseCurveCountFactor$$,
0.3`],Set[CalculateScan`PlotterScanner`Private`inverseCurveOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`inverseCurvePlotCurves$$,
{}],Set[CalculateScan`PlotterScanner`Private`inverseCurvePoints$$,"grid"],Set[CalculateScan`PlotterScanner`Private`inverseCurveTF$$,
False],Set[CalculateScan`PlotterScanner`Private`inverseCurveThickness$$,-3.`],Set[
CalculateScan`PlotterScanner`Private`inverseLastParamaters$$,{}],Set[CalculateScan`PlotterScanner`Private`involuteColor$$,
RGBColor[0.49978279999999997`,0.6025278`,0.2508104`]],Set[CalculateScan`PlotterScanner`Private`involuteCount$$,
60],Set[CalculateScan`PlotterScanner`Private`involuteOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`involutesLeftTF$$,
False],Set[CalculateScan`PlotterScanner`Private`involutesRightTF$$,True],Set[CalculateScan`PlotterScanner`Private`involuteTF$$,
False],Set[CalculateScan`PlotterScanner`Private`involuteThickness$$,-3.`],Set[CalculateScan`PlotterScanner`Private`isopticCurveAngle$$,
Times[Rational[1,3],Pi]],Set[CalculateScan`PlotterScanner`Private`isopticCurveColor$$,
RGBColor[0.8519382`,0.7451437999999999`,0.31752080000000005`]],Set[CalculateScan`PlotterScanner`Private`isopticCurveOpacity$$,
0.8`],Set[CalculateScan`PlotterScanner`Private`isopticCurvePlotCurves$$,{}],Set[CalculateScan`PlotterScanner`Private`isopticCurveTF$$,
False],Set[CalculateScan`PlotterScanner`Private`isopticCurveThickness$$,-3.`],Set[
CalculateScan`PlotterScanner`Private`isopticLastParamaters$$,{}],Set[CalculateUtilities`GraphicsUtilities`Private`more$$,
False],Set[CalculateScan`PlotterScanner`Private`negativePedalCurveColor$$,RGBColor[
0.7464574`,0.2952580000000001`,0.2454606`]],Set[CalculateScan`PlotterScanner`Private`negativePedalCurveCountFactor$$,
0.3`],Set[CalculateScan`PlotterScanner`Private`negativePedalCurveLastParamaters$$,
{}],Set[CalculateScan`PlotterScanner`Private`negativePedalCurveOpacity$$,0.8`],Set[
CalculateScan`PlotterScanner`Private`negativePedalCurvePlotCurves$$,{}],Set[CalculateScan`PlotterScanner`Private`negativePedalCurvePoints$$,
"curve"],Set[CalculateScan`PlotterScanner`Private`negativePedalCurveTF$$,False],Set[
CalculateScan`PlotterScanner`Private`negativePedalCurveThickness$$,-3.`],Set[CalculateScan`PlotterScanner`Private`normalColor$$,
RGBColor[0.237`,0.34`,0.575`]],Set[CalculateScan`PlotterScanner`Private`normalCount$$,
120],Set[CalculateScan`PlotterScanner`Private`normalLength$$,0.007368353319886826`],Set[
CalculateScan`PlotterScanner`Private`normalOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`normalTF$$,
True],Set[CalculateScan`PlotterScanner`Private`normalThickness$$,-3.`],Set[CalculateScan`PlotterScanner`Private`offsetCurveColor$$,
RGBColor[0.877875`,0.731045`,0.326896`]],Set[CalculateScan`PlotterScanner`Private`offsetCurveCount$$,
12],Set[CalculateScan`PlotterScanner`Private`offsetCurveDistance$$,0.007368353319886826`],Set[
CalculateScan`PlotterScanner`Private`offsetCurveLastParamaters$$,{}],Set[CalculateScan`PlotterScanner`Private`offsetCurveOpacity$$,
0.8`],Set[CalculateScan`PlotterScanner`Private`offsetCurvePlotCurves$$,{}],Set[CalculateScan`PlotterScanner`Private`offsetCurveTF$$,
False],Set[CalculateScan`PlotterScanner`Private`offsetCurveThickness$$,-3.`],Set[
CalculateScan`PlotterScanner`Private`orthotomicCurveAngle$$,Times[Rational[1,3],Pi]],Set[
CalculateScan`PlotterScanner`Private`orthotomicCurveColor$$,RGBColor[0.8519382`,0.7451437999999999`,
0.31752080000000005`]],Set[CalculateScan`PlotterScanner`Private`orthotomicCurveCountFactor$$,
0.3`],Set[CalculateScan`PlotterScanner`Private`orthotomicCurveOpacity$$,0.8`],Set[
CalculateScan`PlotterScanner`Private`orthotomicCurvePlotCurves$$,{}],Set[CalculateScan`PlotterScanner`Private`orthotomicCurvePoints$$,
"curve"],Set[CalculateScan`PlotterScanner`Private`orthotomicCurveTF$$,False],Set[
CalculateScan`PlotterScanner`Private`orthotomicCurveThickness$$,-3.`],Set[CalculateScan`PlotterScanner`Private`orthotomicLastParamaters$$,
{}],Set[CalculateScan`PlotterScanner`Private`osculatingCircleColor$$,RGBColor[0.2752426`,
0.4446824`,0.33950440000000004`]],Set[CalculateScan`PlotterScanner`Private`osculatingCircleCount$$,
60],Set[CalculateScan`PlotterScanner`Private`osculatingCircleLastParamaters$$,{}],Set[
CalculateScan`PlotterScanner`Private`osculatingCircleOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`osculatingCircleRadiiTF$$,
False],Set[CalculateScan`PlotterScanner`Private`osculatingCircles$$,{}],Set[CalculateScan`PlotterScanner`Private`osculatingCircleTF$$,
False],Set[CalculateScan`PlotterScanner`Private`osculatingCircleThickness$$,-3.`],Set[
CalculateScan`PlotterScanner`Private`pedalCurveColor$$,RGBColor[0.32894650000000003`,
0.5006225`,0.2625337`]],Set[CalculateScan`PlotterScanner`Private`pedalCurveCountFactor$$,
0.3`],Set[CalculateScan`PlotterScanner`Private`pedalCurveLastParamaters$$,{}],Set[
CalculateScan`PlotterScanner`Private`pedalCurveOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`pedalCurvePlotCurves$$,
{}],Set[CalculateScan`PlotterScanner`Private`pedalCurvePoints$$,"curve"],Set[CalculateScan`PlotterScanner`Private`pedalCurveTF$$,
False],Set[CalculateScan`PlotterScanner`Private`pedalCurveThickness$$,-3.`],Set[CalculateScan`PlotterScanner`Private`sa$$,
False],Set[CalculateScan`PlotterScanner`Private`sqPRQ$$,False],Set[CalculateScan`PlotterScanner`Private`st$$,
False],Set[CalculateScan`PlotterScanner`Private`symmxQ$$,False],Set[CalculateScan`PlotterScanner`Private`symmyQ$$,
True],Set[CalculateScan`PlotterScanner`Private`tangentColor$$,RGBColor[0.237736`,
0.340215`,0.575113`]],Set[CalculateScan`PlotterScanner`Private`tangentCount$$,60],Set[
CalculateScan`PlotterScanner`Private`tangentLength$$,0.007368353319886826`],Set[CalculateScan`PlotterScanner`Private`tangentOpacity$$,
0.8`],Set[CalculateScan`PlotterScanner`Private`tangentTF$$,False],Set[CalculateScan`PlotterScanner`Private`tangentThickness$$,
-3.`],Set[CalculateScan`PlotterScanner`Private`taylorParabolaColor$$,RGBColor[0.7189495000000001`,
0.719797`,0.283877`]],Set[CalculateScan`PlotterScanner`Private`taylorParabolaCount$$,
36],Set[CalculateScan`PlotterScanner`Private`taylorParabolaLastParamaters$$,{}],Set[
CalculateScan`PlotterScanner`Private`taylorParabolaOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`taylorParabolas$$,
{}],Set[CalculateScan`PlotterScanner`Private`taylorParabolaTF$$,False],Set[CalculateScan`PlotterScanner`Private`taylorParabolaThickness$$,
-3.`],Set[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveAngle$$,Times[Rational[
1,4],Pi]],Set[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveColor$$,RGBColor[
0.49978279999999997`,0.6025278`,0.2508104`]],Set[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveCount$$,
12],Set[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveDistance$$,0.007368353319886826`],Set[
CalculateScan`PlotterScanner`Private`tiltedOffsetCurveLastParamaters$$,{}],Set[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveOpacity$$,
0.8`],Set[CalculateScan`PlotterScanner`Private`tiltedOffsetCurvePlotCurves$$,{}],Set[
CalculateScan`PlotterScanner`Private`tiltedOffsetCurveTF$$,False],Set[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveThickness$$,
-3.`],Set[CalculateScan`PlotterScanner`Private`tiltedTangentAngle$$,Times[Rational[
1,4],Pi]],Set[CalculateScan`PlotterScanner`Private`tiltedTangentColor$$,RGBColor[
0.2622702`,0.40739780000000003`,0.41955020000000004`]],Set[CalculateScan`PlotterScanner`Private`tiltedTangentCount$$,
60],Set[CalculateScan`PlotterScanner`Private`tiltedTangentLength$$,0.007368353319886826`],Set[
CalculateScan`PlotterScanner`Private`tiltedTangentOpacity$$,0.8`],Set[CalculateScan`PlotterScanner`Private`tiltedTangentTF$$,
False],Set[CalculateScan`PlotterScanner`Private`tiltedTangentThickness$$,-3.`],Set[
CalculateScan`PlotterScanner`Private`x1$$,-0.7113535528391504`],Set[CalculateScan`PlotterScanner`Private`x2$$,
0.8499051798532513`]}],RuleDelayed["ControllerVariables",{Hold[CalculateUtilities`GraphicsUtilities`Private`more$$,
CalculateUtilities`GraphicsUtilities`Private`more$1868555$$,False],Hold[CalculateScan`PlotterScanner`Private`x1$$,
CalculateScan`PlotterScanner`Private`x1$1868556$$,0],Hold[CalculateScan`PlotterScanner`Private`x2$$,
CalculateScan`PlotterScanner`Private`x2$1868557$$,0],Hold[CalculateScan`PlotterScanner`Private`symmxQ$$,
CalculateScan`PlotterScanner`Private`symmxQ$1868558$$,False],Hold[CalculateScan`PlotterScanner`Private`fy1$$,
CalculateScan`PlotterScanner`Private`fy1$1868559$$,0],Hold[CalculateScan`PlotterScanner`Private`fy2$$,
CalculateScan`PlotterScanner`Private`fy2$1868560$$,0],Hold[CalculateScan`PlotterScanner`Private`symmyQ$$,
CalculateScan`PlotterScanner`Private`symmyQ$1868561$$,False],Hold[CalculateScan`PlotterScanner`Private`sqPRQ$$,
CalculateScan`PlotterScanner`Private`sqPRQ$1868562$$,False],Hold[CalculateScan`PlotterScanner`Private`ar$$,
CalculateScan`PlotterScanner`Private`ar$1868563$$,0],Hold[CalculateScan`PlotterScanner`Private`tangentCount$$,
CalculateScan`PlotterScanner`Private`tangentCount$1868564$$,0],Hold[CalculateScan`PlotterScanner`Private`tangentLength$$,
CalculateScan`PlotterScanner`Private`tangentLength$1868565$$,0],Hold[CalculateScan`PlotterScanner`Private`tangentThickness$$,
CalculateScan`PlotterScanner`Private`tangentThickness$1868566$$,0],Hold[CalculateScan`PlotterScanner`Private`tangentOpacity$$,
CalculateScan`PlotterScanner`Private`tangentOpacity$1868567$$,0],Hold[CalculateScan`PlotterScanner`Private`normalCount$$,
CalculateScan`PlotterScanner`Private`normalCount$1868568$$,0]}],RuleDelayed["OtherVariables",
{Typeset`show$$,Typeset`bookmarkList$$,Typeset`bookmarkMode$$,Typeset`animator$$,Typeset`animvar$$,Typeset`name$$,Typeset`specs$$,Typeset`size$$,Typeset`update$$,Typeset`initDone$$,Typeset`skipInitDone$$}],
RuleDelayed["Body",Block[{\[Lambda]},Quiet[Module[{CalculateScan`PlotterScanner`Private`x1Old$,CalculateScan`PlotterScanner`Private`x2Old$,CalculateScan`PlotterScanner`Private`fy1Old$,CalculateScan`PlotterScanner`Private`fy2Old$,CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$,CalculateScan`PlotterScanner`Private`singularities$,CalculateScan`PlotterScanner`Private`ts$,CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$,CalculateScan`PlotterScanner`Private`yL$,CalculateScan`PlotterScanner`Private`yU$,CalculateScan`PlotterScanner`Private`pRX$,CalculateScan`PlotterScanner`Private`\[CapitalDelta]X$,CalculateScan`PlotterScanner`Private`\[CapitalDelta]y$,CalculateScan`PlotterScanner`Private`Y1$,CalculateScan`PlotterScanner`Private`Y2$,CalculateScan`PlotterScanner`Private`pRY$,CalculateScan`PlotterScanner`Private`originalCurvePlot0$,CalculateScan`PlotterScanner`Private`originalCurvePlot$,CalculateScan`PlotterScanner`Private`tangentsLines$,CalculateScan`PlotterScanner`Private`tangentLinePlot$,CalculateScan`PlotterScanner`Private`normalLines$,CalculateScan`PlotterScanner`Private`normalLinePlot$,CalculateScan`PlotterScanner`Private`tiltedTangentLines$,CalculateScan`PlotterScanner`Private`tiltedTangentLinePlot$,CalculateScan`PlotterScanner`Private`osculatingCircleRadii$,CalculateScan`PlotterScanner`Private`osculatingCircleLastParamaters$,CalculateScan`PlotterScanner`Private`osculatingCirclePlot$,CalculateScan`PlotterScanner`Private`taylorParabolaPlot$,CalculateScan`PlotterScanner`Private`evolutePlot$,CalculateScan`PlotterScanner`Private`involutePlotCurves$,CalculateScan`PlotterScanner`Private`involutePlotCurveLastParamaters$,CalculateScan`PlotterScanner`Private`involutePlot$,CalculateScan`PlotterScanner`Private`iTab$,CalculateScan`PlotterScanner`Private`xLi$,CalculateScan`PlotterScanner`Private`xUi$,CalculateScan`PlotterScanner`Private`arcLength$,CalculateScan`PlotterScanner`Private`arcL$,CalculateScan`PlotterScanner`Private`xi1$,CalculateScan`PlotterScanner`Private`xi2$,CalculateScan`PlotterScanner`Private`lineSegments$,CalculateScan`PlotterScanner`Private`baseSegments$,CalculateScan`PlotterScanner`Private`oSegments$,CalculateScan`PlotterScanner`Private`arcFactors$,CalculateScan`PlotterScanner`Private`iTabRight$,CalculateScan`PlotterScanner`Private`iTabLeft$,CalculateScan`PlotterScanner`Private`signedArcFactors$,CalculateScan`PlotterScanner`Private`curvePoints$},
CompoundExpression[If[And[SameQ[CalculateScan`PlotterScanner`Private`sa$$,False],
Equal[CalculateScan`PlotterScanner`Private`st$$,True]],Set[CalculateScan`PlotterScanner`Private`st$$,
False]],If[CalculateScan`PlotterScanner`Private`symmxQ$$,If[And[Equal[CalculateScan`PlotterScanner`Private`x1$$,
CalculateScan`PlotterScanner`Private`x1Old$],Unequal[CalculateScan`PlotterScanner`Private`x2$$,
CalculateScan`PlotterScanner`Private`x2Old$]],Set[CalculateScan`PlotterScanner`Private`x1$$,
Times[-1,CalculateScan`PlotterScanner`Private`x2$$]],Set[CalculateScan`PlotterScanner`Private`x2$$,
Times[-1,CalculateScan`PlotterScanner`Private`x1$$]]]],Set[CalculateScan`PlotterScanner`Private`x1Old$,
CalculateScan`PlotterScanner`Private`x1$$],Set[CalculateScan`PlotterScanner`Private`x2Old$,
CalculateScan`PlotterScanner`Private`x2$$],If[CalculateScan`PlotterScanner`Private`symmyQ$$,
If[And[Equal[CalculateScan`PlotterScanner`Private`fy1$$,CalculateScan`PlotterScanner`Private`fy1Old$],
Unequal[CalculateScan`PlotterScanner`Private`fy2$$,CalculateScan`PlotterScanner`Private`fy2Old$]],
Set[CalculateScan`PlotterScanner`Private`fy1$$,CalculateScan`PlotterScanner`Private`fy2$$],
Set[CalculateScan`PlotterScanner`Private`fy2$$,CalculateScan`PlotterScanner`Private`fy1$$]]],
Set[CalculateScan`PlotterScanner`Private`fy1Old$,CalculateScan`PlotterScanner`Private`fy1$$],
Set[CalculateScan`PlotterScanner`Private`fy2Old$,CalculateScan`PlotterScanner`Private`fy2$$],
If[Equal[CalculateScan`PlotterScanner`Private`x1$$,CalculateScan`PlotterScanner`Private`x2$$],
Set[CalculateScan`PlotterScanner`Private`x2$$,Plus[CalculateScan`PlotterScanner`Private`x1$$,
Times[271.4261542513289`,Power[100,-1]]]]],Set[{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},
Sort[N[{Function[{CalculateScan`PlotterScanner`Private`y,CalculateScan`PlotterScanner`Private`L},
Times[Sign[CalculateScan`PlotterScanner`Private`y],CalculateScan`PlotterScanner`Private`L,
Power[Tan[Abs[CalculateScan`PlotterScanner`Private`y]],1]]][CalculateScan`PlotterScanner`Private`x1$$,
135.71307712566446`],Function[{CalculateScan`PlotterScanner`Private`y,CalculateScan`PlotterScanner`Private`L},
Times[Sign[CalculateScan`PlotterScanner`Private`y],CalculateScan`PlotterScanner`Private`L,
Power[Tan[Abs[CalculateScan`PlotterScanner`Private`y]],1]]][CalculateScan`PlotterScanner`Private`x2$$,
135.71307712566446`]}]]],Set[CalculateScan`PlotterScanner`Private`singularities$,
CompoundExpression[Set[CalculateScan`PlotterScanner`Private`ts$,TimeConstrained[Set[
CalculateScan`PlotterScanner`Private`red,Reduce[And[Equal[Times[1,Power[Plus[7.672492359425208`16.01*^7,
Times[485.0549669628617`16.01,\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,
Power[\[Lambda],2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],
4]],-1]],0],Less[CalculateScan`PlotterScanner`Private`X1$,\[Lambda],CalculateScan`PlotterScanner`Private`X2$]],
\[Lambda],Reals]],0.2`,False]],If[SameQ[CalculateScan`PlotterScanner`Private`ts$,
False],{},Cases[ReplaceAll[\[Lambda],{ToRules[CalculateScan`PlotterScanner`Private`ts$]}],
Blank[Real]]]]],Set[CalculateScan`PlotterScanner`Private`originalCurvePlot0$,Plot[
CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]],{\[Lambda],CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},
PlotStyle -> Directive[Black,Thick],Evaluated -> False,Exclusions -> CalculateScan`PlotterScanner`Private`singularities$]],
Set[{{CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$},{CalculateScan`PlotterScanner`Private`yL$,CalculateScan`PlotterScanner`Private`yU$}},
Lookup[AbsoluteOptions[CalculateScan`PlotterScanner`Private`originalCurvePlot0$,PlotRange],
PlotRange]],Set[CalculateScan`PlotterScanner`Private`pRX$,{Min[CalculateScan`PlotterScanner`Private`X1$,
CalculateScan`PlotterScanner`Private`X2$],Max[CalculateScan`PlotterScanner`Private`X1$,
CalculateScan`PlotterScanner`Private`X2$]}],Set[CalculateScan`PlotterScanner`Private`\[CapitalDelta]X$,
Abs[Plus[CalculateScan`PlotterScanner`Private`X2$,Times[-1,CalculateScan`PlotterScanner`Private`X1$]]]],
Set[CalculateScan`PlotterScanner`Private`\[CapitalDelta]y$,Plus[CalculateScan`PlotterScanner`Private`yU$,
Times[-1,CalculateScan`PlotterScanner`Private`yL$]]],If[And[CalculateScan`PlotterScanner`Private`sqPRQ$$,
CalculateScan`PlotterScanner`Private`symmyQ$$,SameQ[Sign[CalculateScan`PlotterScanner`Private`X1$],
Times[-1,Sign[CalculateScan`PlotterScanner`Private`X2$]]],Less[Abs[Plus[1,Times[-1,
CalculateScan`PlotterScanner`Private`fy1$$,Power[CalculateScan`PlotterScanner`Private`fy2$$,
-1]]]],Power[10,-3]]],CompoundExpression[Set[CalculateScan`PlotterScanner`Private`fy1$$,
ArcTan[Times[Plus[Times[-100,CalculateScan`PlotterScanner`Private`xL$],Times[-1,100,
CalculateScan`PlotterScanner`Private`yL$],CalculateScan`PlotterScanner`Private`\[CapitalDelta]y$],
Power[Times[100,CalculateScan`PlotterScanner`Private`\[CapitalDelta]y$],-1]]]],Set[
CalculateScan`PlotterScanner`Private`fy2$$,CalculateScan`PlotterScanner`Private`fy1$$],
Null]],Set[{CalculateScan`PlotterScanner`Private`Y1$,CalculateScan`PlotterScanner`Private`Y2$},
{Plus[CalculateScan`PlotterScanner`Private`yL$,Times[-1,CalculateScan`PlotterScanner`Private`\[CapitalDelta]y$,
Power[100,-1]],Times[-1,Function[{CalculateScan`PlotterScanner`Private`y,CalculateScan`PlotterScanner`Private`L},
Times[Sign[CalculateScan`PlotterScanner`Private`y],CalculateScan`PlotterScanner`Private`L,
Power[Tan[Abs[CalculateScan`PlotterScanner`Private`y]],1]]][CalculateScan`PlotterScanner`Private`fy1$$,
1],CalculateScan`PlotterScanner`Private`\[CapitalDelta]y$]],Plus[CalculateScan`PlotterScanner`Private`yU$,
Times[CalculateScan`PlotterScanner`Private`\[CapitalDelta]y$,Power[100,-1]],Times[
Function[{CalculateScan`PlotterScanner`Private`y,CalculateScan`PlotterScanner`Private`L},
Times[Sign[CalculateScan`PlotterScanner`Private`y],CalculateScan`PlotterScanner`Private`L,
Power[Tan[Abs[CalculateScan`PlotterScanner`Private`y]],1]]][CalculateScan`PlotterScanner`Private`fy2$$,
1],CalculateScan`PlotterScanner`Private`\[CapitalDelta]y$]]}],Set[CalculateScan`PlotterScanner`Private`pRY$,
{CalculateScan`PlotterScanner`Private`Y1$,CalculateScan`PlotterScanner`Private`Y2$}],
Set[CalculateScan`PlotterScanner`Private`originalCurvePlot$,Plot[CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]],{\[Lambda],CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},
PlotStyle -> Directive[Black,Thick],PlotRange -> CalculateScan`PlotterScanner`Private`pRY$,
Evaluated -> False,Exclusions -> CalculateScan`PlotterScanner`Private`singularities$]],
Set[CalculateScan`PlotterScanner`Private`tangentsLines$,If[CalculateScan`PlotterScanner`Private`tangentTF$$,
CalculateScan`PlotterScanner`Private`addTangents[{CompiledFunction[{11,12.`,5468},
{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate],CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate]},{\[Lambda],CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},
CalculateScan`PlotterScanner`Private`tangentCount$$,"LengthFactor" -> Function[{CalculateScan`PlotterScanner`Private`y,CalculateScan`PlotterScanner`Private`L},
Times[Sign[CalculateScan`PlotterScanner`Private`y],CalculateScan`PlotterScanner`Private`L,
Power[Tan[Abs[CalculateScan`PlotterScanner`Private`y]],1]]][CalculateScan`PlotterScanner`Private`tangentLength$$,
135.71307712566446`]],{}]],Set[CalculateScan`PlotterScanner`Private`tangentLinePlot$,
Graphics[{Directive[CalculateScan`PlotterScanner`Private`tangentColor$$,Opacity[CalculateScan`PlotterScanner`Private`tangentOpacity$$],
Thickness[Power[10,CalculateScan`PlotterScanner`Private`tangentThickness$$]]],CalculateScan`PlotterScanner`Private`tangentsLines$}]],
Set[CalculateScan`PlotterScanner`Private`normalLines$,If[CalculateScan`PlotterScanner`Private`normalTF$$,
CalculateScan`PlotterScanner`Private`addTangents[{CompiledFunction[{11,12.`,5468},
{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate],CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate]},{\[Lambda],Min[CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$],Max[
CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$]},
CalculateScan`PlotterScanner`Private`normalCount$$,"LengthFactor" -> Function[{CalculateScan`PlotterScanner`Private`y,CalculateScan`PlotterScanner`Private`L},
Times[Sign[CalculateScan`PlotterScanner`Private`y],CalculateScan`PlotterScanner`Private`L,
Power[Tan[Abs[CalculateScan`PlotterScanner`Private`y]],1]]][CalculateScan`PlotterScanner`Private`normalLength$$,
135.71307712566446`],"TiltAngle" -> Times[Pi,Power[2,-1]]],{}]],Set[CalculateScan`PlotterScanner`Private`normalLinePlot$,
Graphics[{Directive[CalculateScan`PlotterScanner`Private`normalColor$$,Opacity[CalculateScan`PlotterScanner`Private`normalOpacity$$],
Thickness[Power[10,CalculateScan`PlotterScanner`Private`normalThickness$$]]],CalculateScan`PlotterScanner`Private`normalLines$}]],
Set[CalculateScan`PlotterScanner`Private`tiltedTangentLines$,If[CalculateScan`PlotterScanner`Private`tiltedTangentTF$$,
CalculateScan`PlotterScanner`Private`addTangents[{CompiledFunction[{11,12.`,5468},
{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate],CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate]},{\[Lambda],Min[CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$],Max[
CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$]},
CalculateScan`PlotterScanner`Private`tiltedTangentCount$$,"LengthFactor" -> Function[
{CalculateScan`PlotterScanner`Private`y,CalculateScan`PlotterScanner`Private`L},Times[
Sign[CalculateScan`PlotterScanner`Private`y],CalculateScan`PlotterScanner`Private`L,
Power[Tan[Abs[CalculateScan`PlotterScanner`Private`y]],1]]][CalculateScan`PlotterScanner`Private`tiltedTangentLength$$,
135.71307712566446`],"TiltAngle" -> CalculateScan`PlotterScanner`Private`tiltedTangentAngle$$],
{}]],Set[CalculateScan`PlotterScanner`Private`tiltedTangentLinePlot$,Graphics[{Directive[
CalculateScan`PlotterScanner`Private`tiltedTangentColor$$,Opacity[CalculateScan`PlotterScanner`Private`tiltedTangentOpacity$$],
Thickness[Power[10,CalculateScan`PlotterScanner`Private`tiltedTangentThickness$$]]],CalculateScan`PlotterScanner`Private`tiltedTangentLines$}]],
If[And[CalculateScan`PlotterScanner`Private`osculatingCircleTF$$,UnsameQ[CalculateScan`PlotterScanner`Private`osculatingCircleLastParamaters$,
{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`osculatingCircleCount$$}]],
CompoundExpression[Set[CalculateScan`PlotterScanner`Private`osculatingCircles$$,If[
CalculateScan`PlotterScanner`Private`osculatingCircleTF$$,CalculateScan`PlotterScanner`Private`addOsculatingCircles[
{CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate],CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate],CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,4}},{{0.27475045372050816`,{3,0,2}},{40756.280455406`,{3,0,1}},{12,{2,0,0}}},
{0,1,6,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,4},{10,0,5},{16,5,4,5},{13,1,3,5,4},{1}},
Function[{\[Lambda]},Plus[40756.280455406`14.01,Times[0.27475045372050815999999999999999999999`16.01,
\[Lambda]],Times[12,Power[\[Lambda],2]]]],Evaluate]},{\[Lambda],Min[CalculateScan`PlotterScanner`Private`X1$,
CalculateScan`PlotterScanner`Private`X2$],Max[CalculateScan`PlotterScanner`Private`X1$,
CalculateScan`PlotterScanner`Private`X2$]},CalculateScan`PlotterScanner`Private`osculatingCircleCount$$],
{}]],Set[CalculateScan`PlotterScanner`Private`osculatingCircleRadii$,If[And[CalculateScan`PlotterScanner`Private`osculatingCircleTF$$,
CalculateScan`PlotterScanner`Private`osculatingCircleRadiiTF$$],CalculateScan`PlotterScanner`Private`addOsculatingCircleRadii[
{CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate],CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate],CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,4}},{{0.27475045372050816`,{3,0,2}},{40756.280455406`,{3,0,1}},{12,{2,0,0}}},
{0,1,6,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,4},{10,0,5},{16,5,4,5},{13,1,3,5,4},{1}},
Function[{\[Lambda]},Plus[40756.280455406`14.01,Times[0.27475045372050815999999999999999999999`16.01,
\[Lambda]],Times[12,Power[\[Lambda],2]]]],Evaluate]},{\[Lambda],Min[CalculateScan`PlotterScanner`Private`X1$,
CalculateScan`PlotterScanner`Private`X2$],Max[CalculateScan`PlotterScanner`Private`X1$,
CalculateScan`PlotterScanner`Private`X2$]},CalculateScan`PlotterScanner`Private`osculatingCircleCount$$],
{}]],Set[CalculateScan`PlotterScanner`Private`osculatingCircleLastParamaters$,{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`osculatingCircleCount$$}]]],
Set[CalculateScan`PlotterScanner`Private`osculatingCirclePlot$,Graphics[{Directive[
CalculateScan`PlotterScanner`Private`osculatingCircleColor$$,Opacity[CalculateScan`PlotterScanner`Private`osculatingCircleOpacity$$],
Thickness[Power[10,CalculateScan`PlotterScanner`Private`osculatingCircleThickness$$]]],If[
CalculateScan`PlotterScanner`Private`osculatingCircleTF$$,CalculateScan`PlotterScanner`Private`osculatingCircles$$,
{}],If[And[CalculateScan`PlotterScanner`Private`osculatingCircleTF$$,CalculateScan`PlotterScanner`Private`osculatingCircleRadiiTF$$],
CalculateScan`PlotterScanner`Private`osculatingCircleRadii$,{}]}]],If[And[CalculateScan`PlotterScanner`Private`taylorParabolaTF$$,
UnsameQ[CalculateScan`PlotterScanner`Private`taylorParabolaLastParamaters$$,{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`taylorParabolaCount$$}]],
CompoundExpression[Set[CalculateScan`PlotterScanner`Private`taylorParabolas$$,If[
CalculateScan`PlotterScanner`Private`taylorParabolaTF$$,CalculateScan`PlotterScanner`Private`addTaylorParabolas[
{CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate],CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate],CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,4}},{{0.27475045372050816`,{3,0,2}},{40756.280455406`,{3,0,1}},{12,{2,0,0}}},
{0,1,6,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,4},{10,0,5},{16,5,4,5},{13,1,3,5,4},{1}},
Function[{\[Lambda]},Plus[40756.280455406`14.01,Times[0.27475045372050815999999999999999999999`16.01,
\[Lambda]],Times[12,Power[\[Lambda],2]]]],Evaluate]},{\[Lambda],Min[CalculateScan`PlotterScanner`Private`X1$,
CalculateScan`PlotterScanner`Private`X2$],Max[CalculateScan`PlotterScanner`Private`X1$,
CalculateScan`PlotterScanner`Private`X2$]},CalculateScan`PlotterScanner`Private`taylorParabolaCount$$],
{}]],Set[CalculateScan`PlotterScanner`Private`taylorParabolaLastParamaters$$,{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`taylorParabolaCount$$}]]],
Set[CalculateScan`PlotterScanner`Private`taylorParabolaPlot$,Graphics[{Directive[
CalculateScan`PlotterScanner`Private`taylorParabolaColor$$,Opacity[CalculateScan`PlotterScanner`Private`taylorParabolaOpacity$$],
Thickness[Power[10,CalculateScan`PlotterScanner`Private`taylorParabolaThickness$$]]],If[
CalculateScan`PlotterScanner`Private`taylorParabolaTF$$,CalculateScan`PlotterScanner`Private`taylorParabolas$$,
{}]}]],Set[CalculateScan`PlotterScanner`Private`evolutePlot$,If[CalculateScan`PlotterScanner`Private`evoluteTF$$,
ParametricPlot[Plus[{\[Lambda],CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},
{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]},Times[{Times[-1,CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},
{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]]],1},Plus[1,Power[CompiledFunction[{11,12.`,5468},{Blank[Real]},
{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]],2]],Power[CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,4}},
{{0.27475045372050816`,{3,0,2}},{40756.280455406`,{3,0,1}},{12,{2,0,0}}},{0,1,6,0,0},
{{16,2,0,3},{40,56,3,0,0,3,0,4},{10,0,5},{16,5,4,5},{13,1,3,5,4},{1}},Function[{\[Lambda]},
Plus[40756.280455406`14.01,Times[0.27475045372050815999999999999999999999`16.01,\[Lambda]],
Times[12,Power[\[Lambda],2]]]],Evaluate][\[Lambda]],-1]]],{\[Lambda],Plus[Min[CalculateScan`PlotterScanner`Private`X1$,
CalculateScan`PlotterScanner`Private`X2$],Times[-1,CalculateScan`PlotterScanner`Private`\[CapitalDelta]X$,
Power[2,-1]]],Plus[Max[CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$],
Times[CalculateScan`PlotterScanner`Private`\[CapitalDelta]X$,Power[2,-1]]]},PlotStyle -> Directive[
Opacity[CalculateScan`PlotterScanner`Private`evoluteOpacity$$],CalculateScan`PlotterScanner`Private`evoluteColor$$,
Thickness[Power[10,CalculateScan`PlotterScanner`Private`evoluteThickness$$]]],PlotRange -> CalculateScan`PlotterScanner`Private`pRY$,
Evaluated -> False,Exclusions -> {Equal[CalculateScan`PlotterScanner`Private`functionD[
\[Lambda]],0]}],{}]],If[And[CalculateScan`PlotterScanner`Private`involuteTF$$,UnsameQ[
CalculateScan`PlotterScanner`Private`involutePlotCurveLastParamaters$,{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`involuteCount$$}]],
CompoundExpression[Set[CalculateScan`PlotterScanner`Private`involutePlotCurves$,If[
CalculateScan`PlotterScanner`Private`involuteTF$$,CompoundExpression[Set[CalculateScan`PlotterScanner`Private`singularities$,
TimeConstrained[Reduce[Equal[Times[1,Power[Plus[7.672492359425208`16.01*^7,Times[
485.0549669628617`16.01,\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,
Power[\[Lambda],2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],
4]],-1]],0],\[Lambda],Reals],1,False]],Set[CalculateScan`PlotterScanner`Private`domainsAndCounts,
If[Or[SameQ[CalculateScan`PlotterScanner`Private`singularities$,False],SameQ[Head[
CalculateScan`PlotterScanner`Private`singularities$],Reduce]],{{{CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$},CalculateScan`PlotterScanner`Private`involuteCount$$}},
CompoundExpression[Set[CalculateScan`PlotterScanner`Private`singularityPoints,Cases[
Chop[N[ReplaceAll[\[Lambda],{ToRules[CalculateScan`PlotterScanner`Private`singularities$]}]]],
Blank[Real]]],Set[CalculateScan`PlotterScanner`Private`singularityPointsRelevant,
Sort[Select[CalculateScan`PlotterScanner`Private`singularityPoints,Function[Less[
CalculateScan`PlotterScanner`Private`xL$,Slot[1],CalculateScan`PlotterScanner`Private`xU$]]],
Less]],Set[CalculateScan`PlotterScanner`Private`pureDomains,Partition[{CalculateScan`PlotterScanner`Private`xL$,Apply[
Sequence,CalculateScan`PlotterScanner`Private`singularityPointsRelevant],CalculateScan`PlotterScanner`Private`xU$},
2,1]],Table[CompoundExpression[Set[CalculateScan`PlotterScanner`Private`iLength,Abs[
Apply[Subtract,Part[CalculateScan`PlotterScanner`Private`pureDomains,CalculateScan`PlotterScanner`Private`i]]]],
Set[CalculateScan`PlotterScanner`Private`involuteCounti,Ceiling[Times[CalculateScan`PlotterScanner`Private`iLength,
Power[Plus[CalculateScan`PlotterScanner`Private`xU$,Times[-1,CalculateScan`PlotterScanner`Private`xL$]],
-1],CalculateScan`PlotterScanner`Private`involuteCount$$]]],Set[CalculateScan`PlotterScanner`Private`iScale,
Times[CalculateScan`PlotterScanner`Private`iLength,Power[CalculateScan`PlotterScanner`Private`involuteCounti,
-1]]],{{Plus[Part[CalculateScan`PlotterScanner`Private`pureDomains,CalculateScan`PlotterScanner`Private`i,
1],Times[CalculateScan`PlotterScanner`Private`iScale,Power[4,-1]]],Plus[Part[CalculateScan`PlotterScanner`Private`pureDomains,
CalculateScan`PlotterScanner`Private`i,2],Times[-1,CalculateScan`PlotterScanner`Private`iScale,
Power[4,-1]]]},CalculateScan`PlotterScanner`Private`involuteCounti}],{CalculateScan`PlotterScanner`Private`i,Length[
CalculateScan`PlotterScanner`Private`pureDomains]}]]]],Set[CalculateScan`PlotterScanner`Private`iTab$,
Transpose[Table[CompoundExpression[Set[{{CalculateScan`PlotterScanner`Private`xLi$,CalculateScan`PlotterScanner`Private`xUi$},CalculateScan`PlotterScanner`Private`involuteCounti},
Part[CalculateScan`PlotterScanner`Private`domainsAndCounts,CalculateScan`PlotterScanner`Private`i]],
Set[CalculateScan`PlotterScanner`Private`arcLength$,Part[NDSolve[{Equal[Derivative[
1][CalculateScan`PlotterScanner`Private`arcL$][\[Lambda]],Sqrt[Plus[1,Power[D[Plus[
7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,
Power[\[Lambda],2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],
4]],\[Lambda]],2]]]],Equal[CalculateScan`PlotterScanner`Private`arcL$[CalculateScan`PlotterScanner`Private`xLi$],
0]},CalculateScan`PlotterScanner`Private`arcL$,{\[Lambda],CalculateScan`PlotterScanner`Private`xLi$,CalculateScan`PlotterScanner`Private`xUi$}],
1,1,2]],Set[{CalculateScan`PlotterScanner`Private`xi1$,CalculateScan`PlotterScanner`Private`xi2$},
Part[CalculateScan`PlotterScanner`Private`arcLength$,1,1]],Set[CalculateScan`PlotterScanner`Private`oCurve,
ParametricPlot3D[Prepend[Normalize[{1,CompiledFunction[{11,12.`,5468},{Blank[Real]},
{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]]}],\[Lambda]],{\[Lambda],CalculateScan`PlotterScanner`Private`xLi$,CalculateScan`PlotterScanner`Private`xUi$},
PlotRange -> All,Evaluated -> False,MaxRecursion -> 4]],Set[CalculateScan`PlotterScanner`Private`lineSegments$,
Select[Map[First,Cases[Normal[CalculateScan`PlotterScanner`Private`oCurve],Blank[
Line],Infinity]],Function[Greater[Length[Slot[1]],3]]]],Set[CalculateScan`PlotterScanner`Private`baseSegments$,
Map[Function[{Part[Slot[1],1],CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},
{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
Part[Slot[1],1]]}],CalculateScan`PlotterScanner`Private`lineSegments$,{-2}]],Set[
CalculateScan`PlotterScanner`Private`oSegments$,Map[Rest,CalculateScan`PlotterScanner`Private`lineSegments$,
{-2}]],Set[CalculateScan`PlotterScanner`Private`arcFactors$,Map[Function[CalculateScan`PlotterScanner`Private`arcLength$[
Part[Slot[1],1]]],CalculateScan`PlotterScanner`Private`lineSegments$,{-2}]],Set[CalculateScan`PlotterScanner`Private`iTabRight$,
If[True,Table[CompoundExpression[Set[CalculateScan`PlotterScanner`Private`x0,Plus[
CalculateScan`PlotterScanner`Private`xi1$,Times[CalculateScan`PlotterScanner`Private`jk,
Power[Plus[CalculateScan`PlotterScanner`Private`involuteCounti,1],-1],Plus[CalculateScan`PlotterScanner`Private`xi2$,
Times[-1,CalculateScan`PlotterScanner`Private`xi1$]]]]],Set[CalculateScan`PlotterScanner`Private`signedArcFactors$,
Map[Function[Map[Function[Max[Slot[1],0]],Slot[1]]],Plus[CalculateScan`PlotterScanner`Private`arcFactors$,
Times[-1,CalculateScan`PlotterScanner`Private`arcLength$[CalculateScan`PlotterScanner`Private`x0]]]]],
Set[CalculateScan`PlotterScanner`Private`curvePoints$,Plus[CalculateScan`PlotterScanner`Private`baseSegments$,
Times[CalculateScan`PlotterScanner`Private`signedArcFactors$,CalculateScan`PlotterScanner`Private`oSegments$]]],
If[MemberQ[CalculateScan`PlotterScanner`Private`curvePoints$,Blank[Complex],{0,Infinity}],
{},Map[BSplineCurve,CalculateScan`PlotterScanner`Private`curvePoints$]]],{CalculateScan`PlotterScanner`Private`jk,1,CalculateScan`PlotterScanner`Private`involuteCounti}],
{}]],Set[CalculateScan`PlotterScanner`Private`iTabLeft$,If[True,Table[CompoundExpression[
Set[CalculateScan`PlotterScanner`Private`x0,Plus[CalculateScan`PlotterScanner`Private`xi2$,
Times[CalculateScan`PlotterScanner`Private`jk,Power[Plus[CalculateScan`PlotterScanner`Private`involuteCounti,
1],-1],Plus[CalculateScan`PlotterScanner`Private`xi1$,Times[-1,CalculateScan`PlotterScanner`Private`xi2$]]]]],
Set[CalculateScan`PlotterScanner`Private`signedArcFactors$,Map[Function[Map[Function[
Min[Slot[1],0]],Slot[1]]],Plus[CalculateScan`PlotterScanner`Private`arcFactors$,Times[
-1,Plus[CalculateScan`PlotterScanner`Private`arcLength$[CalculateScan`PlotterScanner`Private`xi2$],
Times[-1,CalculateScan`PlotterScanner`Private`arcLength$[CalculateScan`PlotterScanner`Private`x0]]]]]]],
Set[CalculateScan`PlotterScanner`Private`curvePoints$,Plus[CalculateScan`PlotterScanner`Private`baseSegments$,
Times[CalculateScan`PlotterScanner`Private`signedArcFactors$,CalculateScan`PlotterScanner`Private`oSegments$]]],
If[MemberQ[CalculateScan`PlotterScanner`Private`curvePoints$,Blank[Complex],{0,Infinity}],
{},Map[BSplineCurve,CalculateScan`PlotterScanner`Private`curvePoints$]]],{CalculateScan`PlotterScanner`Private`jk,1,CalculateScan`PlotterScanner`Private`involuteCounti}],
{}]],{CalculateScan`PlotterScanner`Private`iTabRight$,CalculateScan`PlotterScanner`Private`iTabLeft$}],
{CalculateScan`PlotterScanner`Private`i,Length[CalculateScan`PlotterScanner`Private`domainsAndCounts]}]]],
CalculateScan`PlotterScanner`Private`iTab$],{}]],Set[CalculateScan`PlotterScanner`Private`involutePlotCurveLastParamaters$,
{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`involuteCount$$}],
Null]],Set[CalculateScan`PlotterScanner`Private`involutePlot$,Graphics[{Directive[
CalculateScan`PlotterScanner`Private`involuteColor$$,Opacity[CalculateScan`PlotterScanner`Private`involuteOpacity$$],
Thickness[Power[10,CalculateScan`PlotterScanner`Private`involuteThickness$$]]],If[
And[CalculateScan`PlotterScanner`Private`involuteTF$$,CalculateScan`PlotterScanner`Private`involutesRightTF$$],
Part[CalculateScan`PlotterScanner`Private`involutePlotCurves$,1],{}],If[And[CalculateScan`PlotterScanner`Private`involuteTF$$,
CalculateScan`PlotterScanner`Private`involutesLeftTF$$],Part[CalculateScan`PlotterScanner`Private`involutePlotCurves$,
2],{}]}]],If[And[CalculateScan`PlotterScanner`Private`offsetCurveTF$$,UnsameQ[CalculateScan`PlotterScanner`Private`offsetCurveLastParamaters$$,
{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`offsetCurveCount$$}]],
CompoundExpression[Set[CalculateScan`PlotterScanner`Private`offsetCurvePlotCurves$$,
If[CalculateScan`PlotterScanner`Private`offsetCurveTF$$,With[{Set[CalculateScan`PlotterScanner`Private`maxDist$,
Function[{CalculateScan`PlotterScanner`Private`y,CalculateScan`PlotterScanner`Private`L},
Times[Sign[CalculateScan`PlotterScanner`Private`y],CalculateScan`PlotterScanner`Private`L,
Power[Tan[Abs[CalculateScan`PlotterScanner`Private`y]],1]]][CalculateScan`PlotterScanner`Private`offsetCurveDistance$$,
135.71307712566446`]]},CompoundExpression[Set[CalculateScan`PlotterScanner`Private`oCurve,
ParametricPlot3D[Prepend[Normalize[{Times[-1,CompiledFunction[{11,12.`,5468},{Blank[
Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]]],1}],\[Lambda]],{\[Lambda],Plus[Min[CalculateScan`PlotterScanner`Private`X1$,
CalculateScan`PlotterScanner`Private`X2$],Times[-1,CalculateScan`PlotterScanner`Private`\[CapitalDelta]X$,
Power[2,-1]]],Plus[Max[CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$],
Times[CalculateScan`PlotterScanner`Private`\[CapitalDelta]X$,Power[2,-1]]]},PlotRange -> All,
Evaluated -> False,MaxRecursion -> 5]],Set[CalculateScan`PlotterScanner`Private`lineSegments$,
Select[Map[First,Cases[Normal[CalculateScan`PlotterScanner`Private`oCurve],Blank[
Line],Infinity]],Function[Greater[Length[Slot[1]],3]]]],Set[CalculateScan`PlotterScanner`Private`baseSegments$,
Map[Function[{Part[Slot[1],1],CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},
{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
Part[Slot[1],1]]}],CalculateScan`PlotterScanner`Private`lineSegments$,{-2}]],Set[
CalculateScan`PlotterScanner`Private`oSegments$,Map[Rest,CalculateScan`PlotterScanner`Private`lineSegments$,
{-2}]],Table[{Map[BSplineCurve,Plus[CalculateScan`PlotterScanner`Private`baseSegments$,
Times[CalculateScan`PlotterScanner`Private`j,CalculateScan`PlotterScanner`Private`maxDist$,
Power[CalculateScan`PlotterScanner`Private`offsetCurveCount$$,-1],CalculateScan`PlotterScanner`Private`oSegments$]]],Map[
BSplineCurve,Plus[CalculateScan`PlotterScanner`Private`baseSegments$,Times[-1,CalculateScan`PlotterScanner`Private`j,
CalculateScan`PlotterScanner`Private`maxDist$,Power[CalculateScan`PlotterScanner`Private`offsetCurveCount$$,
-1],CalculateScan`PlotterScanner`Private`oSegments$]]]},{CalculateScan`PlotterScanner`Private`j,CalculateScan`PlotterScanner`Private`offsetCurveCount$$}]]],
{}]],UnsameQ[CalculateScan`PlotterScanner`Private`offsetCurveLastParamaters$$,{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`offsetCurveCount$$}]]],
Set[CalculateScan`PlotterScanner`Private`offsetCurvePlot,Graphics[{Directive[CalculateScan`PlotterScanner`Private`offsetCurveColor$$,
Opacity[CalculateScan`PlotterScanner`Private`offsetCurveOpacity$$],Thickness[Power[
10,CalculateScan`PlotterScanner`Private`offsetCurveThickness$$]]],If[CalculateScan`PlotterScanner`Private`offsetCurveTF$$,
CalculateScan`PlotterScanner`Private`offsetCurvePlotCurves$$,{}]}]],If[And[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveTF$$,
UnsameQ[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveLastParamaters$$,{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`tiltedOffsetCurveCount$$,CalculateScan`PlotterScanner`Private`tiltedOffsetCurveAngle$$}]],
CompoundExpression[Set[CalculateScan`PlotterScanner`Private`tiltedOffsetCurvePlotCurves$$,
If[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveTF$$,With[{Set[CalculateScan`PlotterScanner`Private`maxDist$,
Function[{CalculateScan`PlotterScanner`Private`y,CalculateScan`PlotterScanner`Private`L},
Times[Sign[CalculateScan`PlotterScanner`Private`y],CalculateScan`PlotterScanner`Private`L,
Power[Tan[Abs[CalculateScan`PlotterScanner`Private`y]],1]]][CalculateScan`PlotterScanner`Private`tiltedOffsetCurveDistance$$,
135.71307712566446`]],Set[CalculateScan`PlotterScanner`Private`M$,{{Cos[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveAngle$$],Sin[
CalculateScan`PlotterScanner`Private`tiltedOffsetCurveAngle$$]},{Times[-1,Sin[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveAngle$$]],Cos[
CalculateScan`PlotterScanner`Private`tiltedOffsetCurveAngle$$]}}]},CompoundExpression[
Set[CalculateScan`PlotterScanner`Private`oCurve,ParametricPlot3D[Prepend[Dot[CalculateScan`PlotterScanner`Private`M$,
Normalize[{Times[-1,CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},
{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]]],1}]],\[Lambda]],{\[Lambda],Plus[Min[CalculateScan`PlotterScanner`Private`X1$,
CalculateScan`PlotterScanner`Private`X2$],Times[-1,CalculateScan`PlotterScanner`Private`\[CapitalDelta]X$,
Power[2,-1]]],Plus[Max[CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$],
Times[CalculateScan`PlotterScanner`Private`\[CapitalDelta]X$,Power[2,-1]]]},PlotRange -> All,
Evaluated -> False,MaxRecursion -> 5]],Set[CalculateScan`PlotterScanner`Private`lineSegments$,
Select[Map[First,Cases[Normal[CalculateScan`PlotterScanner`Private`oCurve],Blank[
Line],Infinity]],Function[Greater[Length[Slot[1]],3]]]],Set[CalculateScan`PlotterScanner`Private`baseSegments$,
Map[Function[{Part[Slot[1],1],CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},
{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
Part[Slot[1],1]]}],CalculateScan`PlotterScanner`Private`lineSegments$,{-2}]],Set[
CalculateScan`PlotterScanner`Private`oSegments$,Map[Rest,CalculateScan`PlotterScanner`Private`lineSegments$,
{-2}]],Table[{Map[BSplineCurve,Plus[CalculateScan`PlotterScanner`Private`baseSegments$,
Times[CalculateScan`PlotterScanner`Private`j,CalculateScan`PlotterScanner`Private`maxDist$,
Power[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveCount$$,-1],CalculateScan`PlotterScanner`Private`oSegments$]]],Map[
BSplineCurve,Plus[CalculateScan`PlotterScanner`Private`baseSegments$,Times[-1,CalculateScan`PlotterScanner`Private`j,
CalculateScan`PlotterScanner`Private`maxDist$,Power[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveCount$$,
-1],CalculateScan`PlotterScanner`Private`oSegments$]]]},{CalculateScan`PlotterScanner`Private`j,CalculateScan`PlotterScanner`Private`tiltedOffsetCurveCount$$}]]],
{}]],UnsameQ[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveLastParamaters$$,
{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`tiltedOffsetCurveCount$$,CalculateScan`PlotterScanner`Private`tiltedOffsetCurveAngle$$}]]],
Set[CalculateScan`PlotterScanner`Private`tiltedOffsetCurvePlot,Graphics[{Directive[
CalculateScan`PlotterScanner`Private`tiltedOffsetCurveColor$$,Opacity[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveOpacity$$],
Thickness[Power[10,CalculateScan`PlotterScanner`Private`tiltedOffsetCurveThickness$$]]],If[
CalculateScan`PlotterScanner`Private`tiltedOffsetCurveTF$$,CalculateScan`PlotterScanner`Private`tiltedOffsetCurvePlotCurves$$,
{}]}]],If[And[CalculateScan`PlotterScanner`Private`pedalCurveTF$$,UnsameQ[CalculateScan`PlotterScanner`Private`pedalCurveLastParamaters$$,
{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`pedalCurveCountFactor$$,CalculateScan`PlotterScanner`Private`pedalCurveCountFactor$$}]],
CompoundExpression[Set[CalculateScan`PlotterScanner`Private`pedalCurvePlotCurves$$,
If[CalculateScan`PlotterScanner`Private`pedalCurveTF$$,With[{Set[CalculateScan`PlotterScanner`Private`pedalCurveCount$,
If[SameQ[CalculateScan`PlotterScanner`Private`pedalCurvePoints$$,"grid"],Max[1,Round[
Times[16,CalculateScan`PlotterScanner`Private`pedalCurveCountFactor$$]]],Max[1,Round[
Times[120,CalculateScan`PlotterScanner`Private`pedalCurveCountFactor$$]]]]]},Function[
Cases[Normal[Slot[1]],Blank[Line],{0,Infinity}]][If[SameQ[CalculateScan`PlotterScanner`Private`pedalCurvePoints$$,
"grid"],Table[With[{Set[CalculateScan`PlotterScanner`Private`px$,CalculateScan`PlotterScanner`Private`px],Set[
CalculateScan`PlotterScanner`Private`py$,CalculateScan`PlotterScanner`Private`py]},
ParametricPlot[Plus[{\[Lambda],CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},
{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]},Times[Plus[Times[1,Plus[CalculateScan`PlotterScanner`Private`px$,Times[
-1,\[Lambda]]]],Times[CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},
{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]],Plus[CalculateScan`PlotterScanner`Private`py$,Times[-1,CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]]]]],Power[Plus[1,Power[CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},
{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]],2]],-1],{1,CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},
{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]}]],{\[Lambda],CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$},
PlotRange -> {CalculateScan`PlotterScanner`Private`pRX$,CalculateScan`PlotterScanner`Private`pRY$},
Evaluated -> False]],{CalculateScan`PlotterScanner`Private`px,CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$,Times[
Plus[CalculateScan`PlotterScanner`Private`xU$,Times[-1,CalculateScan`PlotterScanner`Private`xL$]],
Power[CalculateScan`PlotterScanner`Private`pedalCurveCount$,-1]]},{CalculateScan`PlotterScanner`Private`py,CalculateScan`PlotterScanner`Private`yL$,CalculateScan`PlotterScanner`Private`yU$,Times[
Plus[CalculateScan`PlotterScanner`Private`yU$,Times[-1,CalculateScan`PlotterScanner`Private`yL$]],
Power[CalculateScan`PlotterScanner`Private`pedalCurveCount$,-1]]}],Table[With[{Set[
CalculateScan`PlotterScanner`Private`px$,CalculateScan`PlotterScanner`Private`px],Set[
CalculateScan`PlotterScanner`Private`py$,CompiledFunction[{11,12.`,5468},{Blank[Real]},
{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
CalculateScan`PlotterScanner`Private`px]]},ParametricPlot[Plus[{\[Lambda],CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]},Times[Plus[Times[1,Plus[CalculateScan`PlotterScanner`Private`px$,Times[
-1,\[Lambda]]]],Times[CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},
{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]],Plus[CalculateScan`PlotterScanner`Private`py$,Times[-1,CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]]]]],Power[Plus[1,Power[CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},
{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]],2]],-1],{1,CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},
{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]}]],{\[Lambda],CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$},
PlotRange -> {CalculateScan`PlotterScanner`Private`pRX$,CalculateScan`PlotterScanner`Private`pRY$},
Evaluated -> False]],{CalculateScan`PlotterScanner`Private`px,CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$,Times[
Plus[CalculateScan`PlotterScanner`Private`xU$,Times[-1,CalculateScan`PlotterScanner`Private`xL$]],
Power[CalculateScan`PlotterScanner`Private`pedalCurveCount$,-1]]}]]]],{}]],UnsameQ[
CalculateScan`PlotterScanner`Private`pedalCurveLastParamaters$$,{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`pedalCurveCountFactor$$,CalculateScan`PlotterScanner`Private`pedalCurvePoints$$}]]],
Set[CalculateScan`PlotterScanner`Private`pedalCurvePlot,Graphics[{Directive[CalculateScan`PlotterScanner`Private`pedalCurveColor$$,
Opacity[CalculateScan`PlotterScanner`Private`pedalCurveOpacity$$],Thickness[Power[
10,CalculateScan`PlotterScanner`Private`pedalCurveThickness$$]]],If[CalculateScan`PlotterScanner`Private`pedalCurveTF$$,
CalculateScan`PlotterScanner`Private`pedalCurvePlotCurves$$,{}]}]],If[And[CalculateScan`PlotterScanner`Private`negativePedalCurveTF$$,
UnsameQ[CalculateScan`PlotterScanner`Private`negativePedalCurveLastParamaters$$,{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`negativePedalCurveCountFactor$$,CalculateScan`PlotterScanner`Private`negativePedalCurvePoints$$}]],
CompoundExpression[If[CalculateScan`PlotterScanner`Private`negativePedalCurveTF$$,
Set[CalculateScan`PlotterScanner`Private`negativePedalCurvePlotCurves$$,With[{Set[
CalculateScan`PlotterScanner`Private`negativePedalCurveCount$,If[SameQ[CalculateScan`PlotterScanner`Private`negativePedalCurvePoints$$,
"grid"],Max[1,Round[Times[16,CalculateScan`PlotterScanner`Private`negativePedalCurveCountFactor$$]]],
Max[1,Round[Times[120,CalculateScan`PlotterScanner`Private`negativePedalCurveCountFactor$$]]]]]},
Function[Cases[Normal[Slot[1]],Blank[Line],{0,Infinity}]][If[SameQ[CalculateScan`PlotterScanner`Private`negativePedalCurvePoints$$,
"grid"],Table[With[{Set[CalculateScan`PlotterScanner`Private`px$,CalculateScan`PlotterScanner`Private`px],Set[
CalculateScan`PlotterScanner`Private`py$,CalculateScan`PlotterScanner`Private`py]},
ParametricPlot[Times[{Plus[Times[-1,Plus[CalculateScan`PlotterScanner`Private`px$,
Times[-1,2,\[Lambda]]],Plus[CalculateScan`PlotterScanner`Private`py$,Times[-1,CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]]]],Times[-1,Plus[Times[Plus[CalculateScan`PlotterScanner`Private`px$,Times[
-1,\[Lambda]]],\[Lambda]],Power[Plus[CalculateScan`PlotterScanner`Private`py$,Times[
-1,CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]]],2]],CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},
{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]]]],Plus[Power[Plus[CalculateScan`PlotterScanner`Private`px$,Times[
-1,\[Lambda]]],2],Times[CalculateScan`PlotterScanner`Private`py$,CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]],Times[-1,Power[CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},
{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]],2]],Times[Plus[CalculateScan`PlotterScanner`Private`px$,Times[-1,\[Lambda]]],
Plus[CalculateScan`PlotterScanner`Private`py$,Times[-1,2,CompiledFunction[{11,12.`,5468},
{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]]],CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]]]]},Power[Plus[CalculateScan`PlotterScanner`Private`py$,Times[
-1,CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]],Times[Plus[Times[-1,CalculateScan`PlotterScanner`Private`px$],\[Lambda]],
CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]]]],-1]],{\[Lambda],CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$},
PlotRange -> {CalculateScan`PlotterScanner`Private`pRX$,CalculateScan`PlotterScanner`Private`pRY$},
Evaluated -> False]],{CalculateScan`PlotterScanner`Private`px,CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$,Times[
Plus[CalculateScan`PlotterScanner`Private`xU$,Times[-1,CalculateScan`PlotterScanner`Private`xL$]],
Power[CalculateScan`PlotterScanner`Private`negativePedalCurveCount$,-1]]},{CalculateScan`PlotterScanner`Private`py,CalculateScan`PlotterScanner`Private`yL$,CalculateScan`PlotterScanner`Private`yU$,Times[
Plus[CalculateScan`PlotterScanner`Private`yU$,Times[-1,CalculateScan`PlotterScanner`Private`yL$]],
Power[CalculateScan`PlotterScanner`Private`negativePedalCurveCount$,-1]]}],Table[
With[{Set[CalculateScan`PlotterScanner`Private`px$,CalculateScan`PlotterScanner`Private`px],Set[
CalculateScan`PlotterScanner`Private`py$,CompiledFunction[{11,12.`,5468},{Blank[Real]},
{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
CalculateScan`PlotterScanner`Private`px]]},ParametricPlot[Times[{Plus[Times[-1,Plus[
CalculateScan`PlotterScanner`Private`px$,Times[-1,2,\[Lambda]]],Plus[CalculateScan`PlotterScanner`Private`py$,
Times[-1,CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]]]],Times[-1,Plus[Times[Plus[CalculateScan`PlotterScanner`Private`px$,Times[
-1,\[Lambda]]],\[Lambda]],Power[Plus[CalculateScan`PlotterScanner`Private`py$,Times[
-1,CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]]],2]],CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},
{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]]]],Plus[Power[Plus[CalculateScan`PlotterScanner`Private`px$,Times[
-1,\[Lambda]]],2],Times[CalculateScan`PlotterScanner`Private`py$,CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]],Times[-1,Power[CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},
{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]],2]],Times[Plus[CalculateScan`PlotterScanner`Private`px$,Times[-1,\[Lambda]]],
Plus[CalculateScan`PlotterScanner`Private`py$,Times[-1,2,CompiledFunction[{11,12.`,5468},
{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]]],CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]]]]},Power[Plus[CalculateScan`PlotterScanner`Private`py$,Times[
-1,CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]],Times[Plus[Times[-1,CalculateScan`PlotterScanner`Private`px$],\[Lambda]],
CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]]]],-1]],{\[Lambda],CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$},
PlotRange -> {CalculateScan`PlotterScanner`Private`pRX$,CalculateScan`PlotterScanner`Private`pRY$},
Evaluated -> False]],{CalculateScan`PlotterScanner`Private`px,CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$,Times[
Plus[CalculateScan`PlotterScanner`Private`xU$,Times[-1,CalculateScan`PlotterScanner`Private`xL$]],
Power[CalculateScan`PlotterScanner`Private`negativePedalCurveCount$,-1]]}]]]]],{}],
Set[CalculateScan`PlotterScanner`Private`negativePedalCurveLastParamaters$$,{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`negativePedalCurveCountFactor$$,CalculateScan`PlotterScanner`Private`negativePedalCurvePoints$$}]]],
Set[CalculateScan`PlotterScanner`Private`negativePedalCurvePlot,Graphics[{Directive[
CalculateScan`PlotterScanner`Private`negativePedalCurveColor$$,Opacity[CalculateScan`PlotterScanner`Private`negativePedalCurveOpacity$$],
Thickness[Power[10,CalculateScan`PlotterScanner`Private`negativePedalCurveThickness$$]]],If[
CalculateScan`PlotterScanner`Private`negativePedalCurveTF$$,CalculateScan`PlotterScanner`Private`negativePedalCurvePlotCurves$$,
{}]}]],If[And[CalculateScan`PlotterScanner`Private`contraPedalCurveTF$$,UnsameQ[CalculateScan`PlotterScanner`Private`contraPedalCurveLastParamaters$$,
{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`contraPedalCurveCountFactor$$,CalculateScan`PlotterScanner`Private`contraPedalCurvePoints$$}]],
CompoundExpression[If[CalculateScan`PlotterScanner`Private`contraPedalCurveTF$$,Set[
CalculateScan`PlotterScanner`Private`contraPedalCurvePlotCurves$$,With[{Set[CalculateScan`PlotterScanner`Private`contraPedalCurveCount$,
If[SameQ[CalculateScan`PlotterScanner`Private`contraPedalCurvePoints$$,"grid"],Max[
1,Round[Times[16,CalculateScan`PlotterScanner`Private`contraPedalCurveCountFactor$$]]],
Max[1,Round[Times[120,CalculateScan`PlotterScanner`Private`contraPedalCurveCountFactor$$]]]]]},
Function[Cases[Normal[Slot[1]],Blank[Line],{0,Infinity}]][If[SameQ[CalculateScan`PlotterScanner`Private`contraPedalCurvePoints$$,
"grid"],Table[With[{Set[CalculateScan`PlotterScanner`Private`px$,CalculateScan`PlotterScanner`Private`px],Set[
CalculateScan`PlotterScanner`Private`py$,CalculateScan`PlotterScanner`Private`py]},
ParametricPlot[Plus[{\[Lambda],CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},
{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]},Times[Plus[Times[1,Plus[CalculateScan`PlotterScanner`Private`py$,Times[
-1,CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]]]],Times[CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},
{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]],Plus[Times[-1,CalculateScan`PlotterScanner`Private`px$],\[Lambda]]]],
Power[Plus[1,Power[CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},
{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]],2]],-1],{Times[-1,CompiledFunction[{11,12.`,5468},{Blank[Real]},
{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]],1}]],{\[Lambda],CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$},
PlotRange -> {CalculateScan`PlotterScanner`Private`pRX$,CalculateScan`PlotterScanner`Private`pRY$},
Evaluated -> False]],{CalculateScan`PlotterScanner`Private`px,CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$,Times[
Plus[CalculateScan`PlotterScanner`Private`xU$,Times[-1,CalculateScan`PlotterScanner`Private`xL$]],
Power[CalculateScan`PlotterScanner`Private`contraPedalCurveCount$,-1]]},{CalculateScan`PlotterScanner`Private`py,CalculateScan`PlotterScanner`Private`yL$,CalculateScan`PlotterScanner`Private`yU$,Times[
Plus[CalculateScan`PlotterScanner`Private`yU$,Times[-1,CalculateScan`PlotterScanner`Private`yL$]],
Power[CalculateScan`PlotterScanner`Private`contraPedalCurveCount$,-1]]}],Table[With[
{Set[CalculateScan`PlotterScanner`Private`px$,CalculateScan`PlotterScanner`Private`px],Set[
CalculateScan`PlotterScanner`Private`py$,CompiledFunction[{11,12.`,5468},{Blank[Real]},
{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
CalculateScan`PlotterScanner`Private`px]]},ParametricPlot[Plus[{\[Lambda],CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]},Times[Plus[Times[1,Plus[CalculateScan`PlotterScanner`Private`py$,Times[
-1,CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]]]],Times[CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},
{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]],Plus[Times[-1,CalculateScan`PlotterScanner`Private`px$],\[Lambda]]]],
Power[Plus[1,Power[CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},
{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]],2]],-1],{Times[-1,CompiledFunction[{11,12.`,5468},{Blank[Real]},
{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]],1}]],{\[Lambda],CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$},
PlotRange -> {CalculateScan`PlotterScanner`Private`pRX$,CalculateScan`PlotterScanner`Private`pRY$},
Evaluated -> False]],{CalculateScan`PlotterScanner`Private`px,CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$,Times[
Plus[CalculateScan`PlotterScanner`Private`xU$,Times[-1,CalculateScan`PlotterScanner`Private`xL$]],
Power[CalculateScan`PlotterScanner`Private`contraPedalCurveCount$,-1]]}]]]]],{}],
Set[CalculateScan`PlotterScanner`Private`contraPedalCurveLastParamaters$$,{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`contraPedalCurveCountFactor$$,CalculateScan`PlotterScanner`Private`contraPedalCurvePoints$$}]]],
Set[CalculateScan`PlotterScanner`Private`contraPedalCurvePlot,Graphics[{Directive[
CalculateScan`PlotterScanner`Private`contraPedalCurveColor$$,Opacity[CalculateScan`PlotterScanner`Private`contraPedalCurveOpacity$$],
Thickness[Power[10,CalculateScan`PlotterScanner`Private`contraPedalCurveThickness$$]]],If[
CalculateScan`PlotterScanner`Private`contraPedalCurveTF$$,CalculateScan`PlotterScanner`Private`contraPedalCurvePlotCurves$$,
{}]}]],If[And[CalculateScan`PlotterScanner`Private`dualCurveTF$$,UnsameQ[CalculateScan`PlotterScanner`Private`dualCurveLastParamaters$$,
{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`dualCurveCountFactor$$,CalculateScan`PlotterScanner`Private`dualCurvePoints}]],
CompoundExpression[If[CalculateScan`PlotterScanner`Private`dualCurveTF$$,Set[CalculateScan`PlotterScanner`Private`dualCurvePlotCurves$$,
With[{Set[CalculateScan`PlotterScanner`Private`dualCurveCount$,If[SameQ[CalculateScan`PlotterScanner`Private`dualCurvePoints,
"grid"],Max[1,Round[Times[16,CalculateScan`PlotterScanner`Private`dualCurveCountFactor$$]]],
Max[1,Round[Times[120,CalculateScan`PlotterScanner`Private`dualCurveCountFactor$$]]]]]},
Function[Cases[Normal[Slot[1]],Blank[Line],{0,Infinity}]][If[SameQ[CalculateScan`PlotterScanner`Private`dualCurvePoints,
"grid"],Table[With[{Set[CalculateScan`PlotterScanner`Private`px$,CalculateScan`PlotterScanner`Private`px],Set[
CalculateScan`PlotterScanner`Private`py$,CalculateScan`PlotterScanner`Private`py]},
ParametricPlot[Times[{Times[-1,CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},
{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]]],1},Power[Plus[Times[Plus[\[Lambda],CalculateScan`PlotterScanner`Private`px$],
CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]]],Times[-1,1,Plus[CompiledFunction[{11,12.`,5468},{Blank[Real]},
{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]],CalculateScan`PlotterScanner`Private`py$]]],-1]],{\[Lambda],Plus[Min[CalculateScan`PlotterScanner`Private`X1$,
CalculateScan`PlotterScanner`Private`X2$],Times[-1,CalculateScan`PlotterScanner`Private`\[CapitalDelta]X$,
Power[2,-1]]],Plus[Max[CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$],
Times[CalculateScan`PlotterScanner`Private`\[CapitalDelta]X$,Power[2,-1]]]},PlotStyle -> Directive[
Opacity[CalculateScan`PlotterScanner`Private`dualCurveOpacity$$],CalculateScan`PlotterScanner`Private`dualCurveColor$$,
Thickness[Power[10,CalculateScan`PlotterScanner`Private`dualCurveThickness$$]]],PlotRange -> CalculateScan`PlotterScanner`Private`pRY$,
Evaluated -> False,Exclusions -> {Equal[Plus[Times[Plus[\[Lambda],CalculateScan`PlotterScanner`Private`px$],
CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]]],Times[-1,1,Plus[CompiledFunction[{11,12.`,5468},{Blank[Real]},
{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]],CalculateScan`PlotterScanner`Private`py$]]],0]}]],{CalculateScan`PlotterScanner`Private`px,CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$,Times[
Plus[CalculateScan`PlotterScanner`Private`xU$,Times[-1,CalculateScan`PlotterScanner`Private`xL$]],
Power[CalculateScan`PlotterScanner`Private`dualCurveCount$,-1]]},{CalculateScan`PlotterScanner`Private`py,CalculateScan`PlotterScanner`Private`yL$,CalculateScan`PlotterScanner`Private`yU$,Times[
Plus[CalculateScan`PlotterScanner`Private`yU$,Times[-1,CalculateScan`PlotterScanner`Private`yL$]],
Power[CalculateScan`PlotterScanner`Private`dualCurveCount$,-1]]}],Table[With[{Set[
CalculateScan`PlotterScanner`Private`px$,CalculateScan`PlotterScanner`Private`px],Set[
CalculateScan`PlotterScanner`Private`py$,CompiledFunction[{11,12.`,5468},{Blank[Real]},
{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
CalculateScan`PlotterScanner`Private`px]]},ParametricPlot[Times[{Times[-1,CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]]],1},Power[Plus[Times[Plus[\[Lambda],CalculateScan`PlotterScanner`Private`px$],
CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]]],Times[-1,1,Plus[CompiledFunction[{11,12.`,5468},{Blank[Real]},
{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]],CalculateScan`PlotterScanner`Private`py$]]],-1]],{\[Lambda],Plus[Min[CalculateScan`PlotterScanner`Private`X1$,
CalculateScan`PlotterScanner`Private`X2$],Times[-1,CalculateScan`PlotterScanner`Private`\[CapitalDelta]X$,
Power[2,-1]]],Plus[Max[CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$],
Times[CalculateScan`PlotterScanner`Private`\[CapitalDelta]X$,Power[2,-1]]]},PlotStyle -> Directive[
Opacity[CalculateScan`PlotterScanner`Private`dualCurveOpacity$$],CalculateScan`PlotterScanner`Private`dualCurveColor$$,
Thickness[Power[10,CalculateScan`PlotterScanner`Private`dualCurveThickness$$]]],PlotRange -> CalculateScan`PlotterScanner`Private`pRY$,
Evaluated -> False,Exclusions -> {Equal[Plus[Times[Plus[\[Lambda],CalculateScan`PlotterScanner`Private`px$],
CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]]],Times[-1,1,Plus[CompiledFunction[{11,12.`,5468},{Blank[Real]},
{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]],CalculateScan`PlotterScanner`Private`py$]]],0]}]],{CalculateScan`PlotterScanner`Private`px,CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$,Times[
Plus[CalculateScan`PlotterScanner`Private`xU$,Times[-1,CalculateScan`PlotterScanner`Private`xL$]],
Power[CalculateScan`PlotterScanner`Private`dualCurveCount$,-1]]}]]]]],{}],Set[CalculateScan`PlotterScanner`Private`dualCurveLastParamaters$$,
{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`dualCurveCountFactor$$,CalculateScan`PlotterScanner`Private`dualCurvePoints}]]],
Set[CalculateScan`PlotterScanner`Private`dualCurvePlot,Graphics[{Directive[Opacity[
CalculateScan`PlotterScanner`Private`dualCurveOpacity$$],CalculateScan`PlotterScanner`Private`dualCurveColor$$,
Thickness[Power[10,CalculateScan`PlotterScanner`Private`dualCurveThickness$$]]],If[
CalculateScan`PlotterScanner`Private`dualCurveTF$$,CalculateScan`PlotterScanner`Private`dualCurvePlotCurves$$,
{}]}]],If[And[CalculateScan`PlotterScanner`Private`inverseCurveTF$$,UnsameQ[CalculateScan`PlotterScanner`Private`inverseLastParamaters$$,
{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`inverseCurveCountFactor$$,CalculateScan`PlotterScanner`Private`inverseCurvePoints$$,CalculateScan`PlotterScanner`Private`inverseCurveCountFactor$$,CalculateScan`PlotterScanner`Private`inverseCurveCircleRadiusFactor$$}]],
CompoundExpression[If[CalculateScan`PlotterScanner`Private`inverseCurveTF$$,Set[CalculateScan`PlotterScanner`Private`inverseCurvePlotCurves$$,
Function[Cases[Normal[Slot[1]],Blank[Line],{0,Infinity}]][With[{Set[CalculateScan`PlotterScanner`Private`inverseCurveCount$,
If[SameQ[CalculateScan`PlotterScanner`Private`inverseCurvePoints$$,"grid"],Max[1,
Round[Times[16,CalculateScan`PlotterScanner`Private`inverseCurveCountFactor$$]]],
Max[1,Round[Times[120,CalculateScan`PlotterScanner`Private`inverseCurveCountFactor$$]]]]],Set[
CalculateScan`PlotterScanner`Private`R$,Times[Function[{CalculateScan`PlotterScanner`Private`y,CalculateScan`PlotterScanner`Private`L},
Times[Sign[CalculateScan`PlotterScanner`Private`y],CalculateScan`PlotterScanner`Private`L,
Power[Tan[Abs[CalculateScan`PlotterScanner`Private`y]],1]]][CalculateScan`PlotterScanner`Private`inverseCurveCircleRadiusFactor$$,
1],Abs[Plus[CalculateScan`PlotterScanner`Private`X2$,Times[-1,CalculateScan`PlotterScanner`Private`X1$]]]]]},
If[SameQ[CalculateScan`PlotterScanner`Private`inverseCurvePoints$$,"grid"],Table[
With[{Set[CalculateScan`PlotterScanner`Private`px$,CalculateScan`PlotterScanner`Private`px],Set[
CalculateScan`PlotterScanner`Private`py$,CalculateScan`PlotterScanner`Private`py]},
ParametricPlot[Plus[{CalculateScan`PlotterScanner`Private`px$,CalculateScan`PlotterScanner`Private`py$},
Times[Power[CalculateScan`PlotterScanner`Private`R$,2],{Plus[\[Lambda],Times[-1,CalculateScan`PlotterScanner`Private`px$]],Plus[
CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]],Times[-1,CalculateScan`PlotterScanner`Private`py$]]},Power[Plus[Power[
Plus[\[Lambda],Times[-1,CalculateScan`PlotterScanner`Private`px$]],2],Power[Plus[
CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]],Times[-1,CalculateScan`PlotterScanner`Private`py$]],2]],-1]]],{\[Lambda],Plus[
Min[CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$],
Times[-1,CalculateScan`PlotterScanner`Private`\[CapitalDelta]X$,Power[2,-1]]],Plus[
Max[CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$],
Times[CalculateScan`PlotterScanner`Private`\[CapitalDelta]X$,Power[2,-1]]]},PlotRange -> CalculateScan`PlotterScanner`Private`pRY$,
Evaluated -> False]],{CalculateScan`PlotterScanner`Private`px,CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$,Times[
Plus[CalculateScan`PlotterScanner`Private`xU$,Times[-1,CalculateScan`PlotterScanner`Private`xL$]],
Power[CalculateScan`PlotterScanner`Private`inverseCurveCount$,-1]]},{CalculateScan`PlotterScanner`Private`py,CalculateScan`PlotterScanner`Private`yL$,CalculateScan`PlotterScanner`Private`yU$,Times[
Plus[CalculateScan`PlotterScanner`Private`yU$,Times[-1,CalculateScan`PlotterScanner`Private`yL$]],
Power[CalculateScan`PlotterScanner`Private`inverseCurveCount$,-1]]}],Table[With[{Set[
CalculateScan`PlotterScanner`Private`px$,CalculateScan`PlotterScanner`Private`px],Set[
CalculateScan`PlotterScanner`Private`py$,CompiledFunction[{11,12.`,5468},{Blank[Real]},
{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
CalculateScan`PlotterScanner`Private`px]]},ParametricPlot[Plus[{CalculateScan`PlotterScanner`Private`px$,CalculateScan`PlotterScanner`Private`py$},
Times[Power[CalculateScan`PlotterScanner`Private`R$,2],{Plus[\[Lambda],Times[-1,CalculateScan`PlotterScanner`Private`px$]],Plus[
CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]],Times[-1,CalculateScan`PlotterScanner`Private`py$]]},Power[Plus[Power[
Plus[\[Lambda],Times[-1,CalculateScan`PlotterScanner`Private`px$]],2],Power[Plus[
CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]],Times[-1,CalculateScan`PlotterScanner`Private`py$]],2]],-1]]],{\[Lambda],Plus[
Min[CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$],
Times[-1,CalculateScan`PlotterScanner`Private`\[CapitalDelta]X$,Power[2,-1]]],Plus[
Max[CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$],
Times[CalculateScan`PlotterScanner`Private`\[CapitalDelta]X$,Power[2,-1]]]},PlotRange -> CalculateScan`PlotterScanner`Private`pRY$,
Evaluated -> False]],{CalculateScan`PlotterScanner`Private`px,CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$,Times[
Plus[CalculateScan`PlotterScanner`Private`xU$,Times[-1,CalculateScan`PlotterScanner`Private`xL$]],
Power[CalculateScan`PlotterScanner`Private`inverseCurveCount$,-1]]}]]]]],{}],Set[
CalculateScan`PlotterScanner`Private`inverseLastParamaters$$,{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`inverseCurveCountFactor$$,CalculateScan`PlotterScanner`Private`inverseCurvePoints$$,CalculateScan`PlotterScanner`Private`inverseCurveCountFactor$$,CalculateScan`PlotterScanner`Private`inverseCurveCircleRadiusFactor$$}]]],
Set[CalculateScan`PlotterScanner`Private`inverseCurvePlot,Graphics[{Directive[Opacity[
CalculateScan`PlotterScanner`Private`inverseCurveOpacity$$],CalculateScan`PlotterScanner`Private`inverseCurveColor$$,
Thickness[Power[10,CalculateScan`PlotterScanner`Private`inverseCurveThickness$$]]],If[
CalculateScan`PlotterScanner`Private`inverseCurveTF$$,CalculateScan`PlotterScanner`Private`inverseCurvePlotCurves$$,
{}]}]],If[And[CalculateScan`PlotterScanner`Private`orthotomicCurveTF$$,UnsameQ[CalculateScan`PlotterScanner`Private`orthotomicLastParamaters$$,
{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`orthotomicCurveCountFactor$$,CalculateScan`PlotterScanner`Private`orthotomicCurvePoints$$}]],
CompoundExpression[If[CalculateScan`PlotterScanner`Private`orthotomicCurveTF$$,Set[
CalculateScan`PlotterScanner`Private`orthotomicCurvePlotCurves$$,Function[Cases[Normal[
Slot[1]],Blank[Line],{0,Infinity}]][With[{Set[CalculateScan`PlotterScanner`Private`orthotomicCurveCount$,
If[SameQ[CalculateScan`PlotterScanner`Private`orthotomicCurvePoints$$,"grid"],Max[
1,Round[Times[16,CalculateScan`PlotterScanner`Private`orthotomicCurveCountFactor$$]]],
Max[1,Round[Times[120,CalculateScan`PlotterScanner`Private`orthotomicCurveCountFactor$$]]]]]},
If[SameQ[CalculateScan`PlotterScanner`Private`orthotomicCurvePoints$$,"grid"],Table[
With[{Set[CalculateScan`PlotterScanner`Private`px$,CalculateScan`PlotterScanner`Private`px],Set[
CalculateScan`PlotterScanner`Private`py$,CalculateScan`PlotterScanner`Private`py]},
ParametricPlot[Plus[{\[Lambda],CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},
{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]},Times[{Times[-2,CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},
{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]],Plus[Times[1,Plus[CompiledFunction[{11,12.`,5468},{Blank[Real]},
{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]],Times[-1,CalculateScan`PlotterScanner`Private`py$]]],Times[-1,CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]],Plus[\[Lambda],Times[-1,CalculateScan`PlotterScanner`Private`px$]]]]],Times[
2,1,Plus[Times[1,Plus[CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},
{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]],Times[-1,CalculateScan`PlotterScanner`Private`py$]]],Times[-1,CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]],Plus[\[Lambda],Times[-1,CalculateScan`PlotterScanner`Private`px$]]]]]},
Power[Plus[1,Power[CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},
{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]],2]],-1]]],{\[Lambda],CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$},
PlotRange -> {CalculateScan`PlotterScanner`Private`pRX$,CalculateScan`PlotterScanner`Private`pRY$},
Evaluated -> False]],{CalculateScan`PlotterScanner`Private`px,CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$,Times[
Plus[CalculateScan`PlotterScanner`Private`xU$,Times[-1,CalculateScan`PlotterScanner`Private`xL$]],
Power[CalculateScan`PlotterScanner`Private`orthotomicCurveCount$,-1]]},{CalculateScan`PlotterScanner`Private`py,CalculateScan`PlotterScanner`Private`yL$,CalculateScan`PlotterScanner`Private`yU$,Times[
Plus[CalculateScan`PlotterScanner`Private`yU$,Times[-1,CalculateScan`PlotterScanner`Private`yL$]],
Power[CalculateScan`PlotterScanner`Private`orthotomicCurveCount$,-1]]}],Table[With[
{Set[CalculateScan`PlotterScanner`Private`px$,CalculateScan`PlotterScanner`Private`px],Set[
CalculateScan`PlotterScanner`Private`py$,CompiledFunction[{11,12.`,5468},{Blank[Real]},
{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]]},ParametricPlot[Plus[{\[Lambda],CompiledFunction[{11,12.`,5468},{Blank[
Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]]},Times[{Times[-2,CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},
{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]],Plus[Times[1,Plus[CompiledFunction[{11,12.`,5468},{Blank[Real]},
{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]],Times[-1,CalculateScan`PlotterScanner`Private`py$]]],Times[-1,CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]],Plus[\[Lambda],Times[-1,CalculateScan`PlotterScanner`Private`px$]]]]],Times[
2,1,Plus[Times[1,Plus[CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},
{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate][
\[Lambda]],Times[-1,CalculateScan`PlotterScanner`Private`py$]]],Times[-1,CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]],Plus[\[Lambda],Times[-1,CalculateScan`PlotterScanner`Private`px$]]]]]},
Power[Plus[1,Power[CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},
{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][\[Lambda]],2]],-1]]],{\[Lambda],CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$},
PlotRange -> {CalculateScan`PlotterScanner`Private`pRX$,CalculateScan`PlotterScanner`Private`pRY$},
Evaluated -> False]],{CalculateScan`PlotterScanner`Private`px,CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$,Times[
Plus[CalculateScan`PlotterScanner`Private`xU$,Times[-1,CalculateScan`PlotterScanner`Private`xL$]],
Power[CalculateScan`PlotterScanner`Private`orthotomicCurveCount$,-1]]}]]]]],{}],Set[
CalculateScan`PlotterScanner`Private`orthotomicLastParamaters$$,{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`orthotomicCurveCountFactor$$,CalculateScan`PlotterScanner`Private`orthotomicCurvePoints$$}]]],
Set[CalculateScan`PlotterScanner`Private`orthotomicCurvePlot,Graphics[{Directive[
CalculateScan`PlotterScanner`Private`orthotomicCurveColor$$,Opacity[CalculateScan`PlotterScanner`Private`orthotomicCurveOpacity$$],
Thickness[Power[10,CalculateScan`PlotterScanner`Private`orthotomicCurveThickness$$]]],If[
CalculateScan`PlotterScanner`Private`orthotomicCurveTF$$,CalculateScan`PlotterScanner`Private`orthotomicCurvePlotCurves$$,
{}]}]],If[And[CalculateScan`PlotterScanner`Private`isopticCurveTF$$,UnsameQ[CalculateScan`PlotterScanner`Private`isopticLastParamaters$$,
{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`isopticCurveAngle$$}]],
CompoundExpression[Set[CalculateScan`PlotterScanner`Private`isopticCurvePlotCurves$$,
Quiet[If[CalculateScan`PlotterScanner`Private`isopticCurveTF$$,With[{Set[CalculateScan`PlotterScanner`Private`\[Alpha]$,
CalculateScan`PlotterScanner`Private`isopticCurveAngle$$]},CompoundExpression[Set[
CalculateScan`PlotterScanner`Private`cpIsoptic,ContourPlot[Equal[Times[Plus[1,Times[
CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][CalculateScan`PlotterScanner`Private`x1$$],CompiledFunction[{11,12.`,5468},
{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][CalculateScan`PlotterScanner`Private`x2$$]]],Power[Sqrt[Times[Plus[1,Power[
CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][CalculateScan`PlotterScanner`Private`x1$$],2]],Plus[1,Power[CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate][CalculateScan`PlotterScanner`Private`x2$$],2]]]],-1]],Cos[CalculateScan`PlotterScanner`Private`\[Alpha]$]],
{CalculateScan`PlotterScanner`Private`x1$$,Times[-2,Pi],Times[2,Pi]},{CalculateScan`PlotterScanner`Private`x2$$,Times[
-2,Pi],Times[2,Pi]},Exclusions -> {Equal[Plus[Function[{\[Lambda]},Plus[485.0549669628617`16.01,
Times[40756.280455406`14.01,\[Lambda]],Times[0.13737522686025408`16.01,Power[\[Lambda],
2]],Times[4,Power[\[Lambda],3]]]][CalculateScan`PlotterScanner`Private`x1$$],Times[
-1,Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,
\[Lambda]],Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],
3]]]][CalculateScan`PlotterScanner`Private`x2$$]]],0]},Evaluated -> False]],Set[CalculateScan`PlotterScanner`Private`x1x2SCPCurves,
Cases[Normal[CalculateScan`PlotterScanner`Private`cpIsoptic],Blank[Line],Infinity]],
If[SameQ[CalculateScan`PlotterScanner`Private`x1x2SCPCurves,{}],{},Map[CalculateScan`PlotterScanner`Private`getSplineSegments,
Map[Function[CalculateScan`PlotterScanner`Private`tangentIntersectionPoint[Slot[1],
{CompiledFunction[{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,9}},{{20378.140227703`,{3,0,4}},{4,{2,0,1}},{485.0549669628617`,{3,0,2}},{7.672492359425208`*^7,{3,0,1}},{0.04579174228675136`,{3,0,7}},{3,{2,0,0}}},
{0,2,10,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,0,3,0,5},{16,7,5,8},{41,263,3,0,0,2,0,1,3,0,5},{13,1,3,6,8,5,9},{1}},
Function[{\[Lambda]},Plus[7.672492359425208`16.01*^7,Times[485.0549669628617`16.01,
\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,Power[\[Lambda],
2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],4]]],Evaluate],CompiledFunction[
{11,12.`,5468},{Blank[Real]},{{3,0,0},{3,0,5}},{{4,{2,0,0}},{485.0549669628617`,{3,0,1}},{0.13737522686025408`,{3,0,4}},{40756.280455406`,{3,0,2}},{3,{2,0,1}}},
{0,2,8,0,0},{{16,2,0,3},{40,56,3,0,0,3,0,5},{16,4,5,6},{41,263,3,0,0,2,0,1,3,0,5},{10,0,7},{16,7,5,7},{13,1,3,6,7,5},{1}},
Function[{\[Lambda]},Plus[485.0549669628617`16.01,Times[40756.280455406`14.01,\[Lambda]],
Times[0.13737522686025408`16.01,Power[\[Lambda],2]],Times[4,Power[\[Lambda],3]]]],
Evaluate]}]],CalculateScan`PlotterScanner`Private`x1x2SCPCurves,{-2}]]]]],{}]]],UnsameQ[
CalculateScan`PlotterScanner`Private`isopticLastParamaters$$,{{CalculateScan`PlotterScanner`Private`X1$,CalculateScan`PlotterScanner`Private`X2$},CalculateScan`PlotterScanner`Private`isopticCurveAngle$$}]]],
Set[CalculateScan`PlotterScanner`Private`isopticCurvePlot,Graphics[{Directive[CalculateScan`PlotterScanner`Private`isopticCurveColor$$,
Opacity[CalculateScan`PlotterScanner`Private`isopticCurveOpacity$$],Thickness[Power[
10,CalculateScan`PlotterScanner`Private`isopticCurveThickness$$]]],If[CalculateScan`PlotterScanner`Private`isopticCurveTF$$,
CalculateScan`PlotterScanner`Private`isopticCurvePlotCurves$$,{}]}]],Set[CalculateScan`PlotterScanner`Private`annotatedPlotList,
{"tangentLinePlot" -> CalculateScan`PlotterScanner`Private`tangentLinePlot$,"normalLinePlot" -> CalculateScan`PlotterScanner`Private`normalLinePlot$,"tiltedTangentLinePlot" -> CalculateScan`PlotterScanner`Private`tiltedTangentLinePlot$,"osculatingCirclePlot" -> CalculateScan`PlotterScanner`Private`osculatingCirclePlot$,"taylorParabolaPlot" -> CalculateScan`PlotterScanner`Private`taylorParabolaPlot$,"involutePlot" -> CalculateScan`PlotterScanner`Private`involutePlot$,"evolutePlot" -> CalculateScan`PlotterScanner`Private`evolutePlot$,"dualCurvePlot" -> CalculateScan`PlotterScanner`Private`dualCurvePlot,"offsetCurvePlot" -> CalculateScan`PlotterScanner`Private`offsetCurvePlot,"tiltedOffsetCurvePlot" -> CalculateScan`PlotterScanner`Private`tiltedOffsetCurvePlot,"pedalCurvePlot" -> CalculateScan`PlotterScanner`Private`pedalCurvePlot,"negativePedalCurvePlot" -> CalculateScan`PlotterScanner`Private`negativePedalCurvePlot,"contraPedalCurvePlot" -> CalculateScan`PlotterScanner`Private`contraPedalCurvePlot,"inverseCurvePlot" -> CalculateScan`PlotterScanner`Private`inverseCurvePlot,"isopticCurvePlot" -> CalculateScan`PlotterScanner`Private`isopticCurvePlot,"orthotomicCurvePlot" -> CalculateScan`PlotterScanner`Private`orthotomicCurvePlot,"originalCurvePlot" -> CalculateScan`PlotterScanner`Private`originalCurvePlot$}],
Set[CalculateScan`PlotterScanner`Private`labelGrid,Function[DeleteCases[Slot[1],{}]][
{If[TrueQ[True],{RawBoxes[FormBox[RowBox[{SuperscriptBox["\[Lambda]","4"],"+",RowBox[
{"0.04579174228675136`16.01"," ",SuperscriptBox["\[Lambda]","3"]}],"+",RowBox[{"20378.14022770299999999998527555611360639887`14.01"," ",SuperscriptBox[
"\[Lambda]","2"]}],"+",RowBox[{"485.0549669628617`16.01"," ","\[Lambda]"}],"+","7.672492359425208`16.01*^7"}],
TraditionalForm]],Style["\[LongDash]",Bold,Black]},{}],If[TrueQ[CalculateScan`PlotterScanner`Private`tangentTF$$],
{"tangents",Style["\[LongDash]",Bold,CalculateScan`PlotterScanner`Private`tangentColor$$]},
{}],If[TrueQ[CalculateScan`PlotterScanner`Private`normalTF$$],{"normals",Style["\[LongDash]",
Bold,CalculateScan`PlotterScanner`Private`normalColor$$]},{}],If[TrueQ[CalculateScan`PlotterScanner`Private`tiltedTangentTF$$],
{"tilted tangents",Style["\[LongDash]",Bold,CalculateScan`PlotterScanner`Private`tiltedTangentColor$$]},
{}],If[TrueQ[CalculateScan`PlotterScanner`Private`osculatingCircleTF$$],{"osculating circles",Style[
"\[LongDash]",Bold,CalculateScan`PlotterScanner`Private`osculatingCircleColor$$]},
{}],If[TrueQ[CalculateScan`PlotterScanner`Private`taylorParabolaTF$$],{"Taylor parabolas",Style[
"\[LongDash]",Bold,CalculateScan`PlotterScanner`Private`taylorParabolaColor$$]},{}],If[
TrueQ[CalculateScan`PlotterScanner`Private`involuteTF$$],{"involutes",Style["\[LongDash]",
Bold,CalculateScan`PlotterScanner`Private`involuteColor$$]},{}],If[TrueQ[CalculateScan`PlotterScanner`Private`evoluteTF$$],
{"evolute",Style["\[LongDash]",Bold,CalculateScan`PlotterScanner`Private`evoluteColor$$]},
{}],If[TrueQ[CalculateScan`PlotterScanner`Private`offsetCurveTF$$],{"offset curves",Style[
"\[LongDash]",Bold,CalculateScan`PlotterScanner`Private`offsetCurveColor$$]},{}],If[
TrueQ[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveTF$$],{"tilted offset curves",Style[
"\[LongDash]",Bold,CalculateScan`PlotterScanner`Private`tiltedOffsetCurveColor$$]},
{}],If[TrueQ[CalculateScan`PlotterScanner`Private`negativePedalCurveTF$$],{"contrapedal curves",Style[
"\[LongDash]",Bold,CalculateScan`PlotterScanner`Private`contraPedalCurveColor$$]},
{}],If[TrueQ[CalculateScan`PlotterScanner`Private`contraPedalCurveTF$$],{"normals",Style[
"\[LongDash]",Bold,CalculateScan`PlotterScanner`Private`tiltedTangentColor$$]},{}],If[
TrueQ[CalculateScan`PlotterScanner`Private`dualCurveTF$$],{"dual curves",Style["\[LongDash]",
Bold,CalculateScan`PlotterScanner`Private`dualCurveColor$$]},{}],If[TrueQ[CalculateScan`PlotterScanner`Private`inverseCurveTF$$],
{"inverse curves",Style["\[LongDash]",Bold,CalculateScan`PlotterScanner`Private`inverseCurveColor$$]},
{}],If[TrueQ[CalculateScan`PlotterScanner`Private`isopticCurveTF$$],{"isoptic curves",Style[
"\[LongDash]",Bold,CalculateScan`PlotterScanner`Private`isopticCurveColor$$]},{}],If[
TrueQ[CalculateScan`PlotterScanner`Private`orthotomicCurveTF$$],{"orthotomic curves",Style[
"\[LongDash]",Bold,CalculateScan`PlotterScanner`Private`orthotomicCurveColor$$]},
{}]}]],Column[{If[MatchQ[CalculateScan`PlotterScanner`Private`originalCurvePlot$,
Graphics[GraphicsComplex[Blank[],{}],BlankSequence[]]],Text[Style["(original curve is not real\[Hyphen]valued\n over the specified range\n of the independent variable)",
Gray]],Show[Map[Last,CalculateScan`PlotterScanner`Private`annotatedPlotList],PlotRange -> {CalculateScan`PlotterScanner`Private`pRX$,CalculateScan`PlotterScanner`Private`pRY$},
ImageSize -> 300,ImagePadding -> 5,AspectRatio -> CalculateScan`PlotterScanner`Private`ar$$,
If[CalculateScan`PlotterScanner`Private`sa$$,Apply[Sequence,{Axes -> True,AxesOrigin -> {0,0},AxesStyle -> Lighter[
Gray]}],Apply[Sequence,{}]],If[CalculateScan`PlotterScanner`Private`st$$,Apply[Sequence,
{Ticks -> Automatic}],Apply[Sequence,{Ticks -> None}]]]],Grid[{Map[Function[Grid[
Map[Reverse,Slot[1]],Alignment -> Left]],With[{Set[CalculateScan`PlotterScanner`Private`\[Lambda]T,
Max[Floor[Times[Length[CalculateScan`PlotterScanner`Private`labelGrid],Power[2,-1]]],
1]]},Partition[CalculateScan`PlotterScanner`Private`labelGrid,CalculateScan`PlotterScanner`Private`\[Lambda]T,
CalculateScan`PlotterScanner`Private`\[Lambda]T,1,{}]]]},Dividers -> {False,False},
Spacings -> {4,Automatic}]}]]]]]],RuleDelayed["Specifications",{{CalculateUtilities`GraphicsUtilities`Private`more$$,{False,True},ControlType -> None},{{CalculateScan`PlotterScanner`Private`x1$$,-0.7113535528391504`,Subscript[
Style["\[Lambda]",Italic],"min"]},-1.5393804002589986`,1.5393804002589986`,ImageSize -> Small,ControlPlacement -> 1},{{CalculateScan`PlotterScanner`Private`x2$$,0.8499051798532513`,Subscript[
Style["\[Lambda]",Italic],"max"]},-1.5393804002589986`,1.5393804002589986`,ImageSize -> Small,ControlPlacement -> 2},{{CalculateScan`PlotterScanner`Private`symmxQ$$,False,"symmetric"},{True,False},ControlPlacement -> 3},{{CalculateScan`PlotterScanner`Private`fy1$$,0.982793723247329`,Subscript[
"y","min"]},0,1.5393804002589986`,ImageSize -> Small,ControlPlacement -> 4},{{CalculateScan`PlotterScanner`Private`fy2$$,0.982793723247329`,Subscript[
"y","max"]},0,1.5393804002589986`,ImageSize -> Small,ControlPlacement -> 5},{{CalculateScan`PlotterScanner`Private`symmyQ$$,True,"symmetric"},{True,False},ControlPlacement -> 6},{{CalculateScan`PlotterScanner`Private`sqPRQ$$,False,Dynamic[
Style["same as horizontal-range",If[CalculateScan`PlotterScanner`Private`symmxQ$$,
Black,Gray]]]},{True,False},ImageSize -> Small,ControlPlacement -> 7},{{CalculateScan`PlotterScanner`Private`sa$$,False,"show axes"},{True,False},ImageSize -> Small,ControlPlacement -> 8},{{CalculateScan`PlotterScanner`Private`st$$,False,Dynamic[
Style["show ticks",If[SameQ[CalculateScan`PlotterScanner`Private`sa$$,True],Black,
Gray]]]},{True,False},ImageSize -> Small,ControlPlacement -> 9},{{CalculateScan`PlotterScanner`Private`ar$$,1,"aspect ratio"},Rational[
1,4],4,ImageSize -> Small,ControlPlacement -> 10},{{CalculateScan`PlotterScanner`Private`tangentTF$$,False,""},{True,False},ControlPlacement -> 11},{{CalculateScan`PlotterScanner`Private`tangentCount$$,60,""},2,360,1,ImageSize -> Small,ControlPlacement -> 12},{{CalculateScan`PlotterScanner`Private`tangentLength$$,0.007368353319886826`,""},0,1.5393804002589986`,ImageSize -> Small,ControlPlacement -> 13},{{CalculateScan`PlotterScanner`Private`tangentThickness$$,-3.`,""},-4,-0.5`,ImageSize -> Small,ControlPlacement -> 14},{{CalculateScan`PlotterScanner`Private`tangentColor$$,RGBColor[
0.237736`,0.340215`,0.575113`],""},RGBColor[1,0,0],ImageSize -> Tiny,AppearanceElements -> "Spectrum",ControlPlacement -> 15},{{CalculateScan`PlotterScanner`Private`tangentOpacity$$,0.8`,""},0,1,ImageSize -> Small,ControlPlacement -> 16},{{CalculateScan`PlotterScanner`Private`normalTF$$,True,""},{True,False},ControlPlacement -> 17},{{CalculateScan`PlotterScanner`Private`normalCount$$,120,""},2,360,1,ImageSize -> Small,ControlPlacement -> 18},{{CalculateScan`PlotterScanner`Private`normalLength$$,0.007368353319886826`,""},0,1.5393804002589986`,ImageSize -> Small,ControlPlacement -> 19},{{CalculateScan`PlotterScanner`Private`normalThickness$$,-3.`,""},-4,-0.5`,ImageSize -> Small,ControlPlacement -> 20},{{CalculateScan`PlotterScanner`Private`normalColor$$,RGBColor[
0.237`,0.34`,0.575`],""},RGBColor[1,0,0],ImageSize -> Tiny,AppearanceElements -> "Spectrum",ControlPlacement -> 21},{{CalculateScan`PlotterScanner`Private`normalOpacity$$,0.8`,""},0,1,ImageSize -> Small,ControlPlacement -> 22},{{CalculateScan`PlotterScanner`Private`tiltedTangentTF$$,False,""},{True,False},ControlPlacement -> 23},{{CalculateScan`PlotterScanner`Private`tiltedTangentAngle$$,Times[
Rational[1,4],Pi],""},Times[-1,Pi],Pi,ImageSize -> Small,ControlPlacement -> 24},{{CalculateScan`PlotterScanner`Private`tiltedTangentCount$$,60,""},2,360,1,ImageSize -> Small,ControlPlacement -> 25},{{CalculateScan`PlotterScanner`Private`tiltedTangentLength$$,0.007368353319886826`,""},0,1.5393804002589986`,ImageSize -> Small,ControlPlacement -> 26},{{CalculateScan`PlotterScanner`Private`tiltedTangentThickness$$,-3.`,""},-4,-0.5`,ImageSize -> Small,ControlPlacement -> 27},{{CalculateScan`PlotterScanner`Private`tiltedTangentColor$$,RGBColor[
0.2622702`,0.40739780000000003`,0.41955020000000004`],""},RGBColor[1,0,0],ImageSize -> Tiny,AppearanceElements -> "Spectrum",ControlPlacement -> 28},{{CalculateScan`PlotterScanner`Private`tiltedTangentOpacity$$,0.8`,""},0,1,ImageSize -> Small,ControlPlacement -> 29},{{CalculateScan`PlotterScanner`Private`osculatingCircleTF$$,False,""},{True,False},ControlPlacement -> 30},{{CalculateScan`PlotterScanner`Private`osculatingCircleCount$$,60,""},2,360,1,ImageSize -> Small,ControlPlacement -> 31},{{CalculateScan`PlotterScanner`Private`osculatingCircleThickness$$,-3.`,""},-4,-0.5`,ImageSize -> Small,ControlPlacement -> 32},{{CalculateScan`PlotterScanner`Private`osculatingCircleColor$$,RGBColor[
0.2752426`,0.4446824`,0.33950440000000004`],""},RGBColor[1,0,0],ImageSize -> Tiny,AppearanceElements -> "Spectrum",ControlPlacement -> 33},{{CalculateScan`PlotterScanner`Private`osculatingCircleOpacity$$,0.8`,""},0,1,ImageSize -> Small,ControlPlacement -> 34},{{CalculateScan`PlotterScanner`Private`osculatingCircleRadiiTF$$,False,""},{True,False},ImageSize -> Small,ControlPlacement -> 35},{{CalculateScan`PlotterScanner`Private`taylorParabolaTF$$,False,""},{True,False},ControlPlacement -> 36},{{CalculateScan`PlotterScanner`Private`taylorParabolaCount$$,36,""},2,120,1,ImageSize -> Small,ControlPlacement -> 37},{{CalculateScan`PlotterScanner`Private`taylorParabolaThickness$$,-3.`,""},-4,-0.5`,ImageSize -> Small,ControlPlacement -> 38},{{CalculateScan`PlotterScanner`Private`taylorParabolaColor$$,RGBColor[
0.7189495000000001`,0.719797`,0.283877`],""},RGBColor[1,0,0],ImageSize -> Tiny,AppearanceElements -> "Spectrum",ControlPlacement -> 39},{{CalculateScan`PlotterScanner`Private`taylorParabolaOpacity$$,0.8`,""},0,1,ImageSize -> Small,ControlPlacement -> 40},{{CalculateScan`PlotterScanner`Private`involuteTF$$,False,""},{True,False},ControlPlacement -> 41},{{CalculateScan`PlotterScanner`Private`involuteCount$$,60,""},1,120,1,ImageSize -> Small,ControlPlacement -> 42},{{CalculateScan`PlotterScanner`Private`involuteThickness$$,-3.`,""},-4,-0.5`,ImageSize -> Small,ControlPlacement -> 43},{{CalculateScan`PlotterScanner`Private`involuteColor$$,RGBColor[
0.49978279999999997`,0.6025278`,0.2508104`],""},RGBColor[1,0,0],ImageSize -> Tiny,AppearanceElements -> "Spectrum",ControlPlacement -> 44},{{CalculateScan`PlotterScanner`Private`involuteOpacity$$,0.8`,""},0,1,ImageSize -> Small,ControlPlacement -> 45},{{CalculateScan`PlotterScanner`Private`involutesLeftTF$$,False,""},{True,False},ControlPlacement -> 46},{{CalculateScan`PlotterScanner`Private`involutesRightTF$$,True,""},{True,False},ControlPlacement -> 47},{{CalculateScan`PlotterScanner`Private`evoluteTF$$,False,""},{True,False},ControlPlacement -> 48},{{CalculateScan`PlotterScanner`Private`evoluteThickness$$,-3.`,""},-4,-0.5`,ImageSize -> Small,ControlPlacement -> 49},{{CalculateScan`PlotterScanner`Private`evoluteColor$$,RGBColor[
0.813033`,0.766292`,0.303458`],""},RGBColor[1,0,0],ImageSize -> Tiny,AppearanceElements -> "Spectrum",ControlPlacement -> 50},{{CalculateScan`PlotterScanner`Private`evoluteOpacity$$,0.8`,""},0,1,ImageSize -> Small,ControlPlacement -> 51},{{CalculateScan`PlotterScanner`Private`offsetCurveTF$$,False,""},{True,False},ControlPlacement -> 52},{{CalculateScan`PlotterScanner`Private`offsetCurveDistance$$,0.007368353319886826`,""},0,1.5393804002589986`,ImageSize -> Small,ControlPlacement -> 53},{{CalculateScan`PlotterScanner`Private`offsetCurveCount$$,12,""},1,60,1,ImageSize -> Small,ControlPlacement -> 54},{{CalculateScan`PlotterScanner`Private`offsetCurveThickness$$,-3.`,""},-4,-0.5`,ImageSize -> Small,ControlPlacement -> 55},{{CalculateScan`PlotterScanner`Private`offsetCurveColor$$,RGBColor[
0.877875`,0.731045`,0.326896`],""},RGBColor[1,0,0],ImageSize -> Tiny,AppearanceElements -> "Spectrum",ControlPlacement -> 56},{{CalculateScan`PlotterScanner`Private`offsetCurveOpacity$$,0.8`,""},0,1,ImageSize -> Small,ControlPlacement -> 57},{{CalculateScan`PlotterScanner`Private`tiltedOffsetCurveTF$$,False,""},{True,False},ControlPlacement -> 58},{{CalculateScan`PlotterScanner`Private`tiltedOffsetCurveAngle$$,Times[
Rational[1,4],Pi],""},Times[-1,Pi],Pi,ImageSize -> Small,ControlPlacement -> 59},{{CalculateScan`PlotterScanner`Private`tiltedOffsetCurveDistance$$,0.007368353319886826`,""},0,1.5393804002589986`,ImageSize -> Small,ControlPlacement -> 60},{{CalculateScan`PlotterScanner`Private`tiltedOffsetCurveCount$$,12,""},1,60,1,ImageSize -> Small,ControlPlacement -> 61},{{CalculateScan`PlotterScanner`Private`tiltedOffsetCurveThickness$$,-3.`,""},-4,-0.5`,ImageSize -> Small,ControlPlacement -> 62},{{CalculateScan`PlotterScanner`Private`tiltedOffsetCurveColor$$,RGBColor[
0.49978279999999997`,0.6025278`,0.2508104`],""},RGBColor[1,0,0],ImageSize -> Tiny,AppearanceElements -> "Spectrum",ControlPlacement -> 63},{{CalculateScan`PlotterScanner`Private`tiltedOffsetCurveOpacity$$,0.8`,""},0,1,ImageSize -> Small,ControlPlacement -> 64},{{CalculateScan`PlotterScanner`Private`pedalCurveTF$$,False,""},{True,False},ControlPlacement -> 65},{{CalculateScan`PlotterScanner`Private`pedalCurveCountFactor$$,0.3`,""},0,1,ImageSize -> Small,ControlPlacement -> 66},{{CalculateScan`PlotterScanner`Private`pedalCurveThickness$$,-3.`,""},-4,-0.5`,ImageSize -> Small,ControlPlacement -> 67},{{CalculateScan`PlotterScanner`Private`pedalCurveColor$$,RGBColor[
0.32894650000000003`,0.5006225`,0.2625337`],""},RGBColor[1,0,0],ImageSize -> Tiny,AppearanceElements -> "Spectrum",ControlPlacement -> 68},{{CalculateScan`PlotterScanner`Private`pedalCurveOpacity$$,0.8`,""},0,1,ImageSize -> Small,ControlPlacement -> 69},{{CalculateScan`PlotterScanner`Private`pedalCurvePoints$$,"curve",""},{"grid","curve"},ImageSize -> Small,ControlPlacement -> 70},{{CalculateScan`PlotterScanner`Private`negativePedalCurveTF$$,False,""},{True,False},ControlPlacement -> 71},{{CalculateScan`PlotterScanner`Private`negativePedalCurveCountFactor$$,0.3`,""},0,1,ImageSize -> Small,ControlPlacement -> 72},{{CalculateScan`PlotterScanner`Private`negativePedalCurveThickness$$,-3.`,""},-4,-0.5`,ImageSize -> Small,ControlPlacement -> 73},{{CalculateScan`PlotterScanner`Private`negativePedalCurveColor$$,RGBColor[
0.7464574`,0.2952580000000001`,0.2454606`],""},RGBColor[1,0,0],ImageSize -> Tiny,AppearanceElements -> "Spectrum",ControlPlacement -> 74},{{CalculateScan`PlotterScanner`Private`negativePedalCurveOpacity$$,0.8`,""},0,1,ImageSize -> Small,ControlPlacement -> 75},{{CalculateScan`PlotterScanner`Private`negativePedalCurvePoints$$,"curve",""},{"curve","grid"},ImageSize -> Small,ControlPlacement -> 76},{{CalculateScan`PlotterScanner`Private`contraPedalCurveTF$$,False,""},{True,False},ControlPlacement -> 77},{{CalculateScan`PlotterScanner`Private`contraPedalCurveCountFactor$$,0.3`,""},0,1,ImageSize -> Small,ControlPlacement -> 78},{{CalculateScan`PlotterScanner`Private`contraPedalCurveThickness$$,-3.`,""},-4,-0.5`,ImageSize -> Small,ControlPlacement -> 79},{{CalculateScan`PlotterScanner`Private`contraPedalCurveColor$$,RGBColor[
0.7464574`,0.2952580000000001`,0.2454606`],""},RGBColor[1,0,0],ImageSize -> Tiny,AppearanceElements -> "Spectrum",ControlPlacement -> 80},{{CalculateScan`PlotterScanner`Private`contraPedalCurveOpacity$$,0.8`,""},0,1,ImageSize -> Small,ControlPlacement -> 81},{{CalculateScan`PlotterScanner`Private`contraPedalCurvePoints$$,"curve",""},{"curve","grid"},ImageSize -> Small,ControlPlacement -> 82},{{CalculateScan`PlotterScanner`Private`dualCurveTF$$,False,""},{True,False},ControlPlacement -> 83},{{CalculateScan`PlotterScanner`Private`dualCurveCountFactor$$,0.3`,""},0,1,ImageSize -> Small,ControlPlacement -> 84},{{CalculateScan`PlotterScanner`Private`dualCurveThickness$$,-3.`,""},-4,-0.5`,ImageSize -> Small,ControlPlacement -> 85},{{CalculateScan`PlotterScanner`Private`dualCurveColor$$,RGBColor[
0.2860602`,0.4663408`,0.29410879999999995`],""},RGBColor[1,0,0],ImageSize -> Tiny,AppearanceElements -> "Spectrum",ControlPlacement -> 86},{{CalculateScan`PlotterScanner`Private`dualCurveOpacity$$,0.8`,""},0,1,ImageSize -> Small,ControlPlacement -> 87},{{CalculateScan`PlotterScanner`Private`dualPedalCurvePoints$$,"curve",""},{"curve","grid"},ImageSize -> Small,ControlPlacement -> 88},{{CalculateScan`PlotterScanner`Private`inverseCurveTF$$,False,""},{True,False},ControlPlacement -> 89},{{CalculateScan`PlotterScanner`Private`inverseCurveCountFactor$$,0.3`,""},0,1,ImageSize -> Small,ControlPlacement -> 90},{{CalculateScan`PlotterScanner`Private`inverseCurveThickness$$,-3.`,""},-4,-0.5`,ImageSize -> Small,ControlPlacement -> 91},{{CalculateScan`PlotterScanner`Private`inverseCurveColor$$,RGBColor[
0.2860602`,0.4663408`,0.29410879999999995`],""},RGBColor[1,0,0],ImageSize -> Tiny,AppearanceElements -> "Spectrum",ControlPlacement -> 92},{{CalculateScan`PlotterScanner`Private`inverseCurveOpacity$$,0.8`,""},0,1,ImageSize -> Small,ControlPlacement -> 93},{{CalculateScan`PlotterScanner`Private`inverseCurvePoints$$,"grid",""},{"curve","grid"},ImageSize -> Small,ControlPlacement -> 94},{{CalculateScan`PlotterScanner`Private`inverseCurveCircleRadiusFactor$$,0.4636476090008061`,""},0,1,ImageSize -> Small,ControlPlacement -> 95},{{CalculateScan`PlotterScanner`Private`isopticCurveTF$$,False,""},{True,False},ControlPlacement -> 96},{{CalculateScan`PlotterScanner`Private`isopticCurveAngle$$,Times[
Rational[1,3],Pi],""},0,Pi,ImageSize -> Small,ControlPlacement -> 97},{{CalculateScan`PlotterScanner`Private`isopticCurveThickness$$,-3.`,""},-4,-0.5`,ImageSize -> Small,ControlPlacement -> 98},{{CalculateScan`PlotterScanner`Private`isopticCurveColor$$,RGBColor[
0.8519382`,0.7451437999999999`,0.31752080000000005`],""},RGBColor[1,0,0],ImageSize -> Tiny,AppearanceElements -> "Spectrum",ControlPlacement -> 99},{{CalculateScan`PlotterScanner`Private`isopticCurveOpacity$$,0.8`,""},0,1,ImageSize -> Small,ControlPlacement -> 100},{{CalculateScan`PlotterScanner`Private`orthotomicCurveTF$$,False,""},{True,False},ControlPlacement -> 101},{{CalculateScan`PlotterScanner`Private`orthotomicCurveAngle$$,Times[
Rational[1,3],Pi],""},0,Pi,ImageSize -> Small,ControlPlacement -> 102},{{CalculateScan`PlotterScanner`Private`orthotomicCurveCountFactor$$,0.3`,""},0,1,ImageSize -> Small,ControlPlacement -> 103},{{CalculateScan`PlotterScanner`Private`orthotomicCurveThickness$$,-3.`,""},-4,-0.5`,ImageSize -> Small,ControlPlacement -> 104},{{CalculateScan`PlotterScanner`Private`orthotomicCurveColor$$,RGBColor[
0.8519382`,0.7451437999999999`,0.31752080000000005`],""},RGBColor[1,0,0],ImageSize -> Tiny,AppearanceElements -> "Spectrum",ControlPlacement -> 105},{{CalculateScan`PlotterScanner`Private`orthotomicCurveOpacity$$,0.8`,""},0,1,ImageSize -> Small,ControlPlacement -> 106},{{CalculateScan`PlotterScanner`Private`orthotomicCurvePoints$$,"curve",""},{"curve","grid"},ImageSize -> Small,ControlPlacement -> 107},Style[
Overlay[{Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","PodInfoBackground"]]],Pane[
Column[{Row[{Invisible[Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","OrangePlus"]]]]," ",Column[
{"Horizontal plot range:",Row[{Manipulate`Place[1],"  ",Manipulate`Place[2],"  ",Manipulate`Place[
3]}]}]}],PaneSelector[{True -> Grid[{{Button[Row[{Dynamic[RawBoxes[FEPrivate`FrontEndResource[
"WABitmaps","OrangePlus"]]]," "}],Set[CalculateUtilities`GraphicsUtilities`Private`more$$,
False],Appearance -> None,BaseStyle -> {}],Button["Fewer controls",Set[CalculateUtilities`GraphicsUtilities`Private`more$$,
False],Appearance -> None,BaseStyle -> {}]},{"",Item[Column[{Column[{"Vertical plot range:",Row[
{Manipulate`Place[4],"  ",Manipulate`Place[5],"  ",Manipulate`Place[6]}],Manipulate`Place[
7]}],Column[{Row[{Manipulate`Place[8],"  ",Manipulate`Place[9]}],Row[{Manipulate`Place[
10],"   settings: ",Button["1",Set[CalculateScan`PlotterScanner`Private`ar$$,1],ImageSize -> Small,
Appearance -> "Palette",BaseStyle -> {}],"  ",Button["unscaled axes",Function[If[
LessEqual[Times[1,Power[4,-1]],Slot[1],4],Set[CalculateScan`PlotterScanner`Private`ar$$,
Slot[1]]]][Times[Abs[Apply[Subtract,CalculateScan`PlotterScanner`Private`pRY]],Power[
Abs[Apply[Subtract,CalculateScan`PlotterScanner`Private`pRX]],-1]]],ImageSize -> Small,
Appearance -> "Palette",BaseStyle -> {}]}]}],TabView[{Row[{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`tangentTF$$,
Style["\[Checkmark]",CalculateScan`PlotterScanner`Private`tangentColor$$,Bold]," "]],Tooltip[
" tangents             ",Style[" family of tangents at points along the curve ",GrayLevel[
0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show tangents",Manipulate`Place[11]},{"tangent count",Manipulate`Place[
12]},{"tangent length",Manipulate`Place[13]},{"tangent thickness",Manipulate`Place[
14]},{"tangent color",Manipulate`Place[15]},{"tangent opacity",Manipulate`Place[16]}},
Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[{" ",Dynamic[
If[CalculateScan`PlotterScanner`Private`normalTF$$,Style["\[Checkmark]",CalculateScan`PlotterScanner`Private`normalColor$$,
Bold]," "]],Tooltip[" normals              ",Style[" family of normals at points along the curve ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show normals",Manipulate`Place[
17]},{"normal count",Manipulate`Place[18]},{"normal length",Manipulate`Place[19]},{"normal thickness",Manipulate`Place[
20]},{"normal color",Manipulate`Place[21]},{"normal opacity",Manipulate`Place[22]}},
Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[{" ",Dynamic[
If[CalculateScan`PlotterScanner`Private`tiltedTangentTF$$,Style["\[Checkmark]",CalculateScan`PlotterScanner`Private`tiltedTangentColor$$,
Bold]," "]],Tooltip[" tilted tangents      ",Style[" family of tilted tangents at points along the curve ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show tilted tangents",Manipulate`Place[
23]},{"tilted tangent angle",Manipulate`Place[24]},{"tilted tangent count",Manipulate`Place[
25]},{"tilted tangent length",Manipulate`Place[26]},{"tilted tangent thickness",Manipulate`Place[
27]},{"tilted tangent color",Manipulate`Place[28]},{"tilted tangent opacity",Manipulate`Place[
29]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`osculatingCircleTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`osculatingCircleColor$$,Bold]," "]],Tooltip[
" osculating circles   ",Style[" family of osculating circles (circles that are tangent to the curve) at points along the curve",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Column[{Grid[{{"show osculating circles",Manipulate`Place[
30]},{"osculating circle count",Manipulate`Place[31]},{"osculating circle thickness",Manipulate`Place[
32]},{"osculating circle color",Manipulate`Place[33]},{"osculating circle opacity",Manipulate`Place[
34]},{"show circle radii",Manipulate`Place[35]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,True}}],Dynamic[
Style[If[And[CalculateScan`PlotterScanner`Private`osculatingCircleTF$$,Not[Less[0.98`,
CalculateScan`PlotterScanner`Private`ar$$,1.02`]]],"(note than circles appear as ellipses for unequally\nscaled horizontal and vertical axes)",
""]],RGBColor[0.6666666666666666`,0.6666666666666666`,0.6666666666666666`]]},Alignment -> Left],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`taylorParabolaTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`taylorParabolaColor$$,Bold]," "]],Tooltip[" Taylor parabolas     ",
Style[" family of second order Taylor approximations",GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Column[
{Grid[{{"show Taylor parabolas",Manipulate`Place[36]},{"Taylor parabola count",Manipulate`Place[
37]},{"Taylor parabola thickness",Manipulate`Place[38]},{"Taylor parabola color",Manipulate`Place[
39]},{"Taylor parabola opacity",Manipulate`Place[40]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,True}}]},
Alignment -> Left],Row[{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`involuteTF$$,
Style["\[Checkmark]",CalculateScan`PlotterScanner`Private`involuteColor$$,Bold]," "]],Tooltip[
" involutes            ",Style[" family of involutes (curves traced out by strings unwound from the curve) of the curve",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show involutes",Manipulate`Place[
41]},{"involute count",Manipulate`Place[42]},{"involute thickness",Manipulate`Place[
43]},{"involute color",Manipulate`Place[44]},{"involute opacity",Manipulate`Place[
45]},{"directions",Row[{"\[DoubleLongLeftArrow]",Manipulate`Place[46],"  \[DoubleLongRightArrow]",Manipulate`Place[
47]}]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,True}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`evoluteTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`evoluteColor$$,Bold]," "]],Tooltip[" evolute              ",
Style[" the evolute of a given curve (curve of the centers of the osculating circles))",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show evolute",Manipulate`Place[
48]},{"evolute thickness",Manipulate`Place[49]},{"evolute color",Manipulate`Place[
50]},{"evolute opacity",Manipulate`Place[51]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`offsetCurveTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`offsetCurveColor$$,Bold]," "]],Tooltip[" offset curves        ",
Style[" family of offset curves (curves shifted a fixed distance perpendicular to each point of the original curve) ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show offset curves",Manipulate`Place[
52]},{"offset curve distance",Manipulate`Place[53]},{"offset curve count",Manipulate`Place[
54]},{"offset curve thickness",Manipulate`Place[55]},{"offset curve color",Manipulate`Place[
56]},{"offset curve opacity",Manipulate`Place[57]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`tiltedOffsetCurveTF$$,Style[
"\[Checkmark]",CalculateScan`PlotterScanner`Private`tiltedOffsetCurveColor$$,Bold],
" "]],Tooltip[" tilted offset curves ",Style[" family of tilted offset curves (curves shifted a fixed distance in a direction with a fixed angle                                       to the local normal to each point of the original curve) ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show tilted offset curves",Manipulate`Place[
58]},{"tilted offset curve angle",Manipulate`Place[59]},{"tilted offset curve distance",Manipulate`Place[
60]},{"tilted offset curve count",Manipulate`Place[61]},{"tilted offset curve thickness",Manipulate`Place[
62]},{"tilted offset curve color",Manipulate`Place[63]},{"tilted offset curve opacity",Manipulate`Place[
64]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`pedalCurveTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`pedalCurveColor$$,Bold]," "]],Tooltip[" pedal curves         ",
Style[" family of pedal curves (curves on the tangents of the given curve perpendicular to a given point) ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show pedal curves",Manipulate`Place[
65]},{"pedal curve count",Manipulate`Place[66]},{"pedal curve thickness",Manipulate`Place[
67]},{"pedal curve color",Manipulate`Place[68]},{"pedal curve opacity",Manipulate`Place[
69]},{"pedal points",Manipulate`Place[70]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,True}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`negativePedalCurveTF$$,Style[
"\[Checkmark]",CalculateScan`PlotterScanner`Private`negativePedalCurveColor$$,Bold],
" "]],Tooltip[" negative pedal curves",Style[" family of negative pedal curves (envelope curves of lines perpendicular to the given curve and a given point) ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show negative pedal curves",Manipulate`Place[
71]},{"negative pedal curve count",Manipulate`Place[72]},{"negative pedal curve thickness",Manipulate`Place[
73]},{"negative pedal curve color",Manipulate`Place[74]},{"negative pedal curve opacity",Manipulate`Place[
75]},{"negative pedal points",Manipulate`Place[76]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`contraPedalCurveTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`contraPedalCurveColor$$,Bold]," "]],Tooltip[
" contrapedal curves   ",Style[" family of contrapedal curves (curves on the normals of the given curve perpendicular to a given point) ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show contrapedal curves",Manipulate`Place[
77]},{"contrapedal curve count",Manipulate`Place[78]},{"contrapedal curve thickness",Manipulate`Place[
79]},{"contrapedal curve color",Manipulate`Place[80]},{"contrapedal curve opacity",Manipulate`Place[
81]},{"contrapedal pedal points",Manipulate`Place[82]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`dualCurveTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`dualCurveColor$$,Bold]," "]],Tooltip[" dual curves          ",
Style[" dual curve of the given curve (the dual curbe maps inflection points to cusps) ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show dual curves",Manipulate`Place[
83]},{"dual curve count",Manipulate`Place[84]},{"dual curve thickness",Manipulate`Place[
85]},{"dual curve color",Manipulate`Place[86]},{"dual curve opacity",Manipulate`Place[
87]},{"dual curve points",Manipulate`Place[88]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`inverseCurveTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`inverseCurveColor$$,Bold]," "]],Tooltip[" inverse curves       ",
Style[" inverse curves (curves resulting from carrying of an inversion on circles) ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show inverse curves",Manipulate`Place[
89]},{"inverse curve count",Manipulate`Place[90]},{"inverse curve thickness",Manipulate`Place[
91]},{"inverse curve color",Manipulate`Place[92]},{"inverse curve opacity",Manipulate`Place[
93]},{"inversion curve points",Manipulate`Place[94]},{"inversion circle radius",Manipulate`Place[
95]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`isopticCurveTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`isopticCurveColor$$,Bold]," "]],Tooltip[" isoptic curves       ",
Style[" inverse curves (points on isoptic curves have two tangents with the given curve and the two tangents meet with the specified angle)) ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Column[{Grid[{{"show isoptic curves",Manipulate`Place[
96]},{"isoptic curve angle",Manipulate`Place[97]},{"isoptic curve thickness",Manipulate`Place[
98]},{"isoptic curve color",Manipulate`Place[99]},{"isoptic curve opacity",Manipulate`Place[
100]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}],Dynamic[
Style[If[TrueQ[And[CalculateScan`PlotterScanner`Private`isopticCurveTF$$,SameQ[CalculateScan`PlotterScanner`Private`x1x2SCPCurves,
{}]]],"(note than the set of isoptic curves for a given angle can be empty)",""]],
RGBColor[0.6666666666666666`,0.6666666666666666`,0.6666666666666666`]]},Alignment -> Left],Row[
{" ",Dynamic[If[CalculateScan`PlotterScanner`Private`orthotomicCurveTF$$,Style["\[Checkmark]",
CalculateScan`PlotterScanner`Private`orthotomicCurveColor$$,Bold]," "]],Tooltip[" orthotomic curves    ",
Style[" orthotomic curves (points of reflections of a given point on curve tangents)) ",
GrayLevel[0.5`]],TooltipDelay -> 0.33`]}] -> Grid[{{"show orthotomic curves",Manipulate`Place[
101]},{"orthotomic curve angle",Manipulate`Place[102]},{"orthotomic curve count",Manipulate`Place[
103]},{"orthotomic curve thickness",Manipulate`Place[104]},{"orthotomic curve color",Manipulate`Place[
105]},{"orthotomic curve opacity",Manipulate`Place[106]},{"orthotomic curve points",Manipulate`Place[
107]}},Alignment -> Left,Dividers -> {None,{False,True,False,False,False,False}}]},
2,ImageSize -> {All,Automatic},ControlPlacement -> Left]},Dividers -> {None,{False,True,True,True}},
Spacings -> 1],ItemSize -> Scaled[1],Frame -> {None,None,True,None}]}},FrameStyle -> GrayLevel[
0.9`],Alignment -> Left,Spacings -> {0,0.8`}],False -> Button[Row[{Dynamic[RawBoxes[
FEPrivate`FrontEndResource["WABitmaps","OrangePlus"]]]," ","More controls"}],Set[
CalculateUtilities`GraphicsUtilities`Private`more$$,True],Appearance -> None,BaseStyle -> {}]},
Dynamic[CalculateUtilities`GraphicsUtilities`Private`more$$],ImageSize -> Automatic]}],
ImageMargins -> {{20,30},{10,10}}]},{1,2},2,Alignment -> {Left,Top}]],{{CalculateScan`PlotterScanner`Private`osculatingCircleLastParamaters$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`osculatingCircles$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`taylorParabolaLastParamaters$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`taylorParabolas$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`offsetCurveLastParamaters$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`offsetCurvePlotCurves$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`tiltedOffsetCurveLastParamaters$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`tiltedOffsetCurvePlotCurves$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`pedalCurveLastParamaters$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`pedalCurvePlotCurves$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`negativePedalCurveLastParamaters$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`negativePedalCurvePlotCurves$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`contraPedalCurveLastParamaters$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`contraPedalCurvePlotCurves$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`dualCurveLastParamaters$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`dualCurvePlotCurves$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`inverseLastParamaters$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`inverseCurvePlotCurves$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`orthotomicLastParamaters$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`orthotomicCurvePlotCurves$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`isopticLastParamaters$$,{}},ControlType -> None},{{CalculateScan`PlotterScanner`Private`isopticCurvePlotCurves$$,{}},ControlType -> None}}],
RuleDelayed["Options",{ControlPlacement -> Bottom,FrameMargins -> {{0,0},{0,10}},Paneled -> False,AppearanceElements -> {},LabelStyle -> {"DialogStyle",FontColor -> GrayLevel[
0.25`]}}],RuleDelayed["DefaultOptions",{}]],SingleEvaluation -> True],RuleDelayed[
Initialization,CompoundExpression[{{Set[Language`ExtendedDefinition[CalculateScan`PlotterScanner`Private`addTangents],
Uncompress["6:eJzNV7tz0zAYT9ryLDCwMLNwcCzJsXBsaUIO7pKQ1oGJIUospzoUybUk2vLPgz4/4sh2sGR3aAZdJH/6fQ99z9crfhF0O52OeKWXCWIbhTZ4OcIBYUQSziZEyOAICE70cqEoTsgf6+ULp/6YR1vR05shomtFkcTeGrHlnHIpcQT/GY6W84j81p+WyPcXmgdmUgRPMtAyCwHfvl2zH4gqLIJODaWnVhaUIPH30ILwqf4z4jvu3TLpaUo6whTdYj8hOU0tMkegOQvgSjPLHJU5PtJLCize2mIGo16i6AO9nFHEfrUC6xfBjv8v5xtb6JtaKd9ZQ00Ju0s0VC+btZp3KBgPZerDLyBSQohUkTleN+NyrghO3+WhXqbch/A1XR/Yi5fAl29Drpj/+SaMsBAaMLkJj+xhKd7byvbzU+/DWT+PiUS6OJg8iNYFoXLANloSA9/ajEE19DPQCLONvByjteSRiW7t5iv/qhr/OTwb8UmE13CIaEPxJ3l4z6kSjs54lL3tgmyxIH/1zzE4mkk9rUpKu103wxxy0cxRYoEIc75cIZVpnXbwrRQzLP3R9nLIia4BA+aPMlcTuV5DJPYr0vCSh8kOltme/miVxVf1k7kk55iBS9FxAT82nswhCzhHHHAacSefjzWHnDXTXQ6i5E/BpgQInO3Td7HPScNXc8sKrbLQfUhogDDn1zhyKMdJfqjNa7t6nXSIWGf+Q+ftbsehABBfg1wpD23xuVP5iq+NERV4v3VlOA+1QRjS27yNHysW55kq8WHnaVaJpxsPXUVgHsXkrRKf0XsXWDTRqVaBgxXEUOpeGMIcWqCPm1kMN9AmwcyGpAUx9Dx6FESKysPDkDkXFqeg+BCES5vUZhNRxaSRsTV7StIpmabUGVaYr9zdxZ8WkcIFk4BzTXWh0lNy/RQ5kDIiKyWLpP8A4+pdmw=="]],Set[
Language`ExtendedDefinition[CalculateScan`PlotterScanner`Private`addOsculatingCircles],
Uncompress["6:eJzNVktT2zAQzoNHKXDhwrkXpr0VpheOadIOBwJu0vYcOZaDporksSQev57uyo4T22EskTBDDjt6fN799Cna3U+hHMXtVqulTsFcEzEzZEYnAxozwTST4popHXcQsANmZDjN4B/AXEke/ZTpXF3CpE/41HCi6XhKxCTgUmua4ljQdBKk7B62JiSKbpWFMTHrs3TKqYoPFt7rsRTu3T6Iv4QbQLYakGMTOiCR+p/EAfgRBgNZRG/XoYc5dEA5eaJRBjnMpQkISiDiLi5uJlG3HnofTB5BfXZ1Hg++ZifeBfOdE/FvI2fn23R2UXXWcOgzV9ePjSy/OLsaMrFNb6SZm/Mxa8Tai+kvw2gu4B6YoYzwGa/5559gLDlPpBHRj8ckpUpBCsj28DbGVKtvrnymVMCq6oloRCLGMi+79mu1eE1obpYPq38nk9WN4pPfJATGnTpjnAXcqPKez3/DhvN5QD7Ou8UB2JyqdQcoNtkz/LzZnHuwYei8LNvKEhIJ5ANN35ZDZwsBL3wCLmXFy+iFqqr7OgnKkDcl+GLolel7ua5MsG6dhMVZqZcm3nnlk/RLx57ptnKzJXk3cmXP7FlJyiJ6pPpM4BfyoZ0Vyd/WgqynoYR7rxcZrJck/MnWj7wpeXUhKPVRlaRk+y4sfzcO/dkRDLD/JNoBfAwDaGuJ4S5o7BGHUP6gGW7uEXtapyw0ugr9D28ERDU="]],Set[
Language`ExtendedDefinition[CalculateScan`PlotterScanner`Private`addOsculatingCircleRadii],
Uncompress["6:eJzNVktTwjAQ5uH7cfHi2YujN/XojAcEHQ8iFdQzod1CxpAwTSL463XTQkELNhGcsYedPL5++2WTbPaoI5phsVAoyEM094R3NelCuwYh5VRRwe+pVGHJANbQNDWDBL6F5k6w4FZEfXmFnSphvmZEQcsnvO0xoRREps0hansRfcOpNgmChoxhlHerNPIZNElAabg98ZD1J81cY8hfCNMgw0IOsqU7Fkgj/3lgAdzBRk2k3otZ6O4YWgNG3iFIILvj8HjEhIGHZTO4fJjKWfebaMZe5Imtg7B2lqx6Hc01I/x1KbLzVZJdfCfLWfSxLfUoV+WpNVWd8lWykXxt1svMCCtOuo+awjiAG2jqIjDXec7pPzC+RH8gNA9uRoMIpMRUkMyZ3WiBkpe2epTQfs8TlCtZ4UEVOGJkwrUec8jZe1XtiUHSM+ZhinsiHRRbyoqd9FwOQuzA5ba4kKeqPKblP9VYTsNK+yDnhTWdpB/4Oas5d1BDDfnXsM0MGSGeGEL0txpKK3B44eIwDuvaL0+HW6pyTEWlBYfDbMxSVPGaHbPs1y1xSINJgH9IGNPEGOfJ5M0HwhaOL/f3TOnAYSXpMy1SzDvxYFHM7GHDFGxEWYD3sYF1INHMBm0Kqjq+E1g95hdUFaUi2tHqO/QT8dsTHw=="]],Set[
Language`ExtendedDefinition[CalculateScan`PlotterScanner`Private`tangentIntersectionPoint],
Uncompress["6:eJztVjtPwzAQTksRj8LMzAQj7c4ARAikAlYLzHFSp7JwbeQHhV8P5yYFmhTFVghCggyns+7TffdUbj8Ww7QVBIHaAzHAfGLwhEQhSSmnmgo+oEqnbQvogBgaRjL4JogLwcbnQk7VMTzOMEsMw5qMEswjxITWRFqdExkhSZ/AFGkgIFxfcrApklgCJCjX6daCocynrO1mxu8xM0SlQQVyZGIHpA3/7tEBuA1KKN7ZW2VoN4eGhOEXMs4g3bw8CNsy8AxZv0ztMv0GiJxFHbgSPPeypNdBnDLMH+r46q/09XWUh66e0/CoMkwPZ6tzXo7TGm/pFDrdWRgRM6pgpK/wZY32ScarP0167xfyaTSwnpf3tXKhvRJrMrpPZUNiRuTHAM1npNnCfMcEeiWbUdRL0W/kCxtYeP7A3P2RdV9uat0p/F/P37Ce82PF/hivHY6aHVDs4Ya1A3gXFLgHsWEuaHtYXcEfBa7I6sPqRGtJY6OL0DcbrUfm"]],Set[
Language`ExtendedDefinition[CalculateScan`PlotterScanner`Private`addTaylorParabolas],
Uncompress["6:eJzFVslOwzAQ7cK+XLhw5oLggqAXzkCLQGohUODcSeMgC9euvHT5ehg3aWhTpNgtiB5GTvzy5s14PJ2jUDzH5VKppA7RNIG/G3gnnTqJKaeaCt6kSscVC1hD82wYSeBbaO4Ei26F7KlLfLgB1jUMNGl3gXcCJrQm0q45kZ1A0gFudSCKXmDMhAxAQigYqHh7yr3oSdm9xyF/A2aIiksFyLYJHZBW+GvfAbiDi7rIvJcXobsptE4YjEmUQHbTxARgE8Djqn25SoKqi4430aT86sSVOq6fJ/Guo7lmwD9WIrv4TbJanqwg6GNX6lGhylNnqhblv8kGxdqcw1wQVp4+PhlK0gRuoGmJyF7hH+r+wPoSvb4wPGqM+pIohdc/2bOn0SZanbnq6WfVW5kKeYEQHWfnGjCT3imfAnbPyHjGM+0Rf18X3r6mYflU57xI+ok/H7/V1WKsLZXPQAyJ/K+Qqf08p2XybkIUr80WtgetXxvwvOa5SpzP3CpUSfL8Oth86jxaTJLgrOJuQM3HIvT3ZNAY4J8mfrVMx6gud4SjPz3CrJ9O2msqjyfTxD2fDEvj3PxgG/mDw5yxhws7RYF2AO/jAoczMMwFbdW1sJHjSFc861xpLWlodB76BcuBCOg="]],Set[
Language`ExtendedDefinition[CalculateScan`PlotterScanner`Private`getSplineSegments],
Uncompress["6:eJytVcly00AQlZNANrhwyZlLDvkA7uCFUGUTEQFnt6UeMZXxjJglhK+Hbo2tJJYrlirRoWuWN728XvR+Ya7FIEkSd0ZiCroMUOJ8hEJq6aXRU+m82GPAAYnroDDCj0hcGlVMjF26D7QZgsqDAo9ZDnqeKuM9Wl5rtPPUylu6mpfos0pJjRmWS9TeieO16rYhx3dXf/RPUAGdSHYgs7DogGS/f1QdgCe0GJnG+qANPV1BR6jgLxYRcrriJQWOX8fDZ/DzwK7GaPeQxEq9O++qWcVgX5H4pEDfRFWvScxMwVndwsU7Vm6WlQm6GN9VFp2jioh3+8w4enfR1YHKOOnEwbp2UtpyffWJYLB2eXyXY/UgYbXLg0fxxUQiqKfP168l7zYqgN9cIhSuXk1AORQctmPYFxHRfJXBEr/1ZSJpO/+GnYz5HwZ7i324aZIyg6ql6D7ZGSrM/SP0fT9Pgs59k2GuZCpt9DgERx3QkPMdbnq51hCdESIS/bKZrF8f111hfV1VEcqNMlHcKTombku2d5DQHg6pCm5LSPIffbtR9VHPSmnImqIu/a8e1Mu9hux2aFwkny0S0I5/B1Cbdra5v9/uEib5a4d5yub4ZwG+A/htXXsCguqC5thmNJzoz7V7pn/03spF8JvQ/5sGx/A="]]},ReleaseHold[
Uncompress["6:eJztVm1v0zAQbikw3t/+ARKfkQYF7QsSoxtj0oCSlO/1kkti4drBdrbBnwef3STN2lWK6QBN6YdTfWke3z333PWeHosg6fd6PXXdmA+CxckWnp4YMxKzXBQ83j/LJShFBU+u4bM7xoSg94CRHxA7301j3gs5I9qd3+D7hEUFIxq+asqopqCmB5LkGY1U7RlLemJ+MmUiIoz+hGfbO693Xg2HDgZjGROtQXL1si1knkmiIOkh0A1j3jHCv7nj4/L4qWAshO8F8AjUQ+OdSBIbGMEJw3y8b73aTN3DxDThMZHxpdNk5Tlqe4HSkvJ0ArMc37iYrO22wESmynFzv+RmnYJc+LfwgQhtTM5jk7ZnS6BfGFeMvvOy+ufcDfD8ti28FKericP8dhnyRjQ9AbVM5/PWdXKMVF1ro59zdVnzZaNBXjxl6v+lI6r0chgv2oYBs2NT49XaW4YftoUXOXb9XNwPjPnsHCXgquFQCe6jiAs2j6KZ8sBJtH26KjcOh3G34jtEp08FK5zAxFn2i+2PRxV4vSmEWLvpBqTD6xkQQA7GFVtu92hK9SgjkkQGeH5dv2yyiahD8bizfe0pj6kZYI6QdcsTmsNkoe5ER9mXPypuJZdzTYa8H3INKci1or+N9ZGGXB5PhGckIV7Q1Ks3h1VSYyK9ZT8oQcKccIqQ9Jf52G/u4WIlkKoDieqSjsWBLc2ZfxL9ssBHwFOdNXdsz9Hl3baYTSBOa9UFNEkWp83mmO43mW7c0BzoviT4lsR/oHebQrcp/NVNYWkP7taEbk3o1oRuTejWhP93TbAR47/Sby3EuL4="]]},
Set[Typeset`initDone$$,True]]],RuleDelayed[DynamicModuleValues,{}],RuleDelayed[Deinitialization,
None],RuleDelayed[UntrackedVariables,{Typeset`size$$}],SynchronousInitialization -> True,
RuleDelayed[UnsavedVariables,{Typeset`initDone$$}],RuleDelayed[UndoTrackedVariables,
{Typeset`show$$,Typeset`bookmarkMode$$}]],"Manipulate",Deployed -> True,StripOnInput -> False],
TraditionalForm],Manipulate`InterpretManipulate[1]],TraditionalForm]],"Output",{Background -> None,GraphicsBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics"},DefaultAxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsAxes"],DefaultFrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsFrame"],DefaultFrameTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsFrameTicks"],DefaultTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsTicks"]},Graphics3DBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics3D"}}},
NumberPoint -> ".",CellSize -> {550,Automatic},AutoStyleOptions -> {"HighlightFormattingErrors" -> False},
RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}],XMLElement[
"dataformats",{},{}]}],XMLElement["expressiontypes",{"count" -> "1"},{"\n   ",XMLElement[
"expressiontype",{"name" -> "Default"},{}],"\n  "}]}]],Set[Typeset`pod12$$,XMLElement[
"pod",{"title" -> "Differential equation solution curve families","scanner" -> "Plotter","id" -> "DifferentialEquationSolutionCurveFamilies","position" -> "1200","error" -> "false","numsubpods" -> "1"},
{XMLElement["subpod",{"title" -> ""},{XMLElement["cell",{"compressed" -> True,"string" -> False},
{Cell[
BoxData[FormBox[TagBox[FormBox[StyleBox[DynamicModuleBox[{Set[CalculateUtilities`GraphicsUtilities`Private`more$$,
False],Set[CalculateScan`PlotterScanner`Private`Sa$$,True],Set[CalculateScan`PlotterScanner`Private`Sat$$,
False],Set[CalculateScan`PlotterScanner`Private`SC$$,True],Set[sc1$$,1.5707963007277478192313249118058999885`23.790026338775377],Set[
sc1max$$,1.57079631376132238910538051392577865856`24.0910563493637],Set[sc1min$$,
1.57079631376132204935725723325498869406`24.091056326722068],Set[sc2$$,1.56667310612457929808943676646283402207`18.58974673218461],Set[
sc2max$$,1.56873894922026965768356587434644401758`18.893132332698443],Set[sc2min$$,
1.56873044864957678272604956151468305932`18.889548585250807],Set[sc3$$,1.57069818241217912474726724037044583634`18.214227296115343],Set[
sc3max$$,1.57074725701138151267958671257208523098`18.515313479963282],Set[sc3min$$,
1.57074725219522155225337630898455280058`18.515228231503844],Set[sc4$$,0.0228918715697864150929198901434829818`16.010151735081248],Set[
sc4max$$,0.8077778104431761893647864327873812143`17.577415131904893],Set[sc4min$$,
-0.76197007490505171667510507894219119384`17.512300835477358],Set[sc5$$,ArcTan[Rational[
1,2]]],Set[sc5max$$,ArcTan[2]],Set[sc5min$$,0],Set[scColor1$$,RGBColor[0.237736`,
0.340215`,0.575113`]],Set[scColor2$$,RGBColor[0.277947`,0.45009699999999997`,0.32815550000000004`]],Set[
scColor3$$,RGBColor[0.624866`,0.673302`,0.264296`]],Set[scColor4$$,RGBColor[0.8453409999999999`,
0.6248695`,0.3151775`]],Set[scColor5$$,RGBColor[0.72987`,0.239399`,0.230961`]],Set[
scCount1$$,12],Set[scCount2$$,12],Set[scCount3$$,12],Set[scCount4$$,12],Set[scCount5$$,
12],Set[scTF1$$,True],Set[scTF2$$,False],Set[scTF3$$,False],Set[scTF4$$,False],Set[
scTF5$$,False],Set[CalculateScan`PlotterScanner`Private`x1$$,-0.5491165379519889`],Set[
CalculateScan`PlotterScanner`Private`x2$$,0.9465071451198819`],Set[Typeset`show$$,
True],Set[Typeset`bookmarkList$$,{}],Set[Typeset`bookmarkMode$$,"Menu"],Typeset`animator$$,Set[
Typeset`animvar$$,1],Set[Typeset`name$$,"\"untitled\""],Set[Typeset`specs$$,{{Hold[
CalculateUtilities`GraphicsUtilities`Private`more$$],{False,True}},{{Hold[CalculateScan`PlotterScanner`Private`x1$$],-0.5491165379519889`,Subscript[
Style["\[Lambda]",Italic],"min"]},-1.5692255304681018`,1.5692255304681018`},{{Hold[
CalculateScan`PlotterScanner`Private`x2$$],0.9465071451198819`,Subscript[Style["\[Lambda]",
Italic],"max"]},-1.5692255304681018`,1.5692255304681018`},{{Hold[CalculateScan`PlotterScanner`Private`Sa$$],True,"show axes"},{True,False}},{{Hold[
CalculateScan`PlotterScanner`Private`Sat$$],False,"show ticks"},{True,False}},{{Hold[
sc1$$],1.5707963007277478192313249118058999885`23.790026338775377,Row[{Subscript[
RawBoxes["c"],1]," value"}]},-1.5692255304681018`,1.5692255304681018`},{{Hold[sc2$$],1.56667310612457929808943676646283402207`18.58974673218461,Row[
{Subscript[RawBoxes["c"],2]," value"}]},-1.5692255304681018`,1.5692255304681018`},{{Hold[
sc3$$],1.57069818241217912474726724037044583634`18.214227296115343,Row[{Subscript[
RawBoxes["c"],3]," value"}]},-1.5692255304681018`,1.5692255304681018`},{{Hold[sc4$$],0.0228918715697864150929198901434829818`16.010151735081248,Row[
{Subscript[RawBoxes["c"],4]," value"}]},-1.5692255304681018`,1.5692255304681018`},{{Hold[
sc5$$],ArcTan[Rational[1,2]],Row[{Subscript[RawBoxes["c"],5]," value"}]},-1.5692255304681018`,1.5692255304681018`},{{Hold[
CalculateScan`PlotterScanner`Private`SC$$],True,"show single curve"},{True,False}},{{Hold[
scTF1$$],True,Row[{"show ",Subscript[RawBoxes["c"],1]," family"}]},{True,False}},{{Hold[
scColor1$$],RGBColor[0.237736`,0.340215`,0.575113`]," color"},RGBColor[1,0,0]},{{Hold[
sc1min$$],1.57079631376132204935725723325498869406`24.091056326722068,Subscript[RawBoxes[
"c"],1,"min"]},-1.5692255304681018`,1.5692255304681018`},{{Hold[sc1max$$],1.57079631376132238910538051392577865856`24.0910563493637,Subscript[
RawBoxes["c"],1,"max"]},-1.5692255304681018`,1.5692255304681018`},{{Hold[scCount1$$],12," curve count"},2,60,1},{{Hold[
scTF2$$],False,Row[{"show ",Subscript[RawBoxes["c"],2]," family"}]},{True,False}},{{Hold[
scColor2$$],RGBColor[0.277947`,0.45009699999999997`,0.32815550000000004`]," color"},RGBColor[
1,0,0]},{{Hold[sc2min$$],1.56873044864957678272604956151468305932`18.889548585250807,Subscript[
RawBoxes["c"],2,"min"]},-1.5692255304681018`,1.5692255304681018`},{{Hold[sc2max$$],1.56873894922026965768356587434644401758`18.893132332698443,Subscript[
RawBoxes["c"],2,"max"]},-1.5692255304681018`,1.5692255304681018`},{{Hold[scCount2$$],12," curve count"},2,60,1},{{Hold[
scTF3$$],False,Row[{"show ",Subscript[RawBoxes["c"],3]," family"}]},{True,False}},{{Hold[
scColor3$$],RGBColor[0.624866`,0.673302`,0.264296`]," color"},RGBColor[1,0,0]},{{Hold[
sc3min$$],1.57074725219522155225337630898455280058`18.515228231503844,Subscript[RawBoxes[
"c"],3,"min"]},-1.5692255304681018`,1.5692255304681018`},{{Hold[sc3max$$],1.57074725701138151267958671257208523098`18.515313479963282,Subscript[
RawBoxes["c"],3,"max"]},-1.5692255304681018`,1.5692255304681018`},{{Hold[scCount3$$],12," curve count"},2,60,1},{{Hold[
scTF4$$],False,Row[{"show ",Subscript[RawBoxes["c"],4]," family"}]},{True,False}},{{Hold[
scColor4$$],RGBColor[0.8453409999999999`,0.6248695`,0.3151775`]," color"},RGBColor[
1,0,0]},{{Hold[sc4min$$],-0.76197007490505171667510507894219119384`17.512300835477358,Subscript[
RawBoxes["c"],4,"min"]},-1.5692255304681018`,1.5692255304681018`},{{Hold[sc4max$$],0.8077778104431761893647864327873812143`17.577415131904893,Subscript[
RawBoxes["c"],4,"max"]},-1.5692255304681018`,1.5692255304681018`},{{Hold[scCount4$$],12," curve count"},2,60,1},{{Hold[
scTF5$$],False,Row[{"show ",Subscript[RawBoxes["c"],5]," family"}]},{True,False}},{{Hold[
scColor5$$],RGBColor[0.72987`,0.239399`,0.230961`]," color"},RGBColor[1,0,0]},{{Hold[
sc5min$$],0,Subscript[RawBoxes["c"],5,"min"]},-1.5692255304681018`,1.5692255304681018`},{{Hold[
sc5max$$],ArcTan[2],Subscript[RawBoxes["c"],5,"max"]},-1.5692255304681018`,1.5692255304681018`},{{Hold[
scCount5$$],12," curve count"},2,60,1},{Hold[Style[Overlay[{Dynamic[RawBoxes[FEPrivate`FrontEndResource[
"WABitmaps","PodInfoBackground"]]],Pane[Column[{Row[{Invisible[Dynamic[RawBoxes[FEPrivate`FrontEndResource[
"WABitmaps","OrangePlus"]]]]," ",Column[{"Horizontal plot range",Row[{Manipulate`Place[
1],"  ",Manipulate`Place[2]}],Row[{Manipulate`Place[3],"  ",Manipulate`Place[4]}]}]}],PaneSelector[
{True -> Grid[{{Button[Row[{Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps",
"OrangePlus"]]]," "}],Set[CalculateUtilities`GraphicsUtilities`Private`more$$,False],
Appearance -> None,BaseStyle -> {}],Button["Fewer controls",Set[CalculateUtilities`GraphicsUtilities`Private`more$$,
False],Appearance -> None,BaseStyle -> {}]},{"",Item[Column[{Style["Curve parameters",
Plain],Column[{Manipulate`Place[5],Manipulate`Place[6],Manipulate`Place[7],Manipulate`Place[
8],Manipulate`Place[9]}],Manipulate`Place[10],Style["Show curve families",Plain],Column[
{Row[{Manipulate`Place[11]," | ",Manipulate`Place[12]}],Row[{Manipulate`Place[13],"  ",Manipulate`Place[
14],"  ",Manipulate`Place[15]}],Row[{Manipulate`Place[16]," | ",Manipulate`Place[
17]}],Row[{Manipulate`Place[18],"  ",Manipulate`Place[19],"  ",Manipulate`Place[20]}],Row[
{Manipulate`Place[21]," | ",Manipulate`Place[22]}],Row[{Manipulate`Place[23],"  ",Manipulate`Place[
24],"  ",Manipulate`Place[25]}],Row[{Manipulate`Place[26]," | ",Manipulate`Place[
27]}],Row[{Manipulate`Place[28],"  ",Manipulate`Place[29],"  ",Manipulate`Place[30]}],Row[
{Manipulate`Place[31]," | ",Manipulate`Place[32]}],Row[{Manipulate`Place[33],"  ",Manipulate`Place[
34],"  ",Manipulate`Place[35]}]}]}],ItemSize -> Scaled[1],Frame -> {None,None,True,None}]}},
FrameStyle -> GrayLevel[0.9`],Alignment -> Left,Spacings -> {0,0.8`}],False -> Button[
Row[{Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","OrangePlus"]]]," ","More controls"}],
Set[CalculateUtilities`GraphicsUtilities`Private`more$$,True],Appearance -> None,
BaseStyle -> {}]},Dynamic[CalculateUtilities`GraphicsUtilities`Private`more$$],ImageSize -> Automatic]}],
ImageMargins -> {{20,30},{10,10}}]},{1,2},2,Alignment -> {Left,Top}]]],Manipulate`Dump`ThisIsNotAControl}}],Set[
Typeset`size$$,Automatic],Set[Typeset`update$$,0],Set[Typeset`initDone$$,False],Set[
Typeset`skipInitDone$$,False],Set[CalculateUtilities`GraphicsUtilities`Private`more$1868802$$,
False],Set[CalculateScan`PlotterScanner`Private`x1$1868803$$,0],Set[CalculateScan`PlotterScanner`Private`x2$1868804$$,
0],Set[CalculateScan`PlotterScanner`Private`Sa$1868805$$,False],Set[CalculateScan`PlotterScanner`Private`Sat$1868806$$,
False],Set[sc1$1868807$$,0],Set[sc2$1868808$$,0],Set[sc3$1868809$$,0],Set[sc4$1868810$$,
0],Set[sc5$1868811$$,0],Set[CalculateScan`PlotterScanner`Private`SC$1868812$$,False],Set[
sc1min$1868813$$,0],Set[sc1max$1868814$$,0],Set[scCount1$1868815$$,0]},DynamicBox[
Manipulate`ManipulateBoxes[2,TraditionalForm,RuleDelayed["Variables",{Set[CalculateUtilities`GraphicsUtilities`Private`more$$,
False],Set[CalculateScan`PlotterScanner`Private`Sa$$,True],Set[CalculateScan`PlotterScanner`Private`Sat$$,
False],Set[CalculateScan`PlotterScanner`Private`SC$$,True],Set[sc1$$,1.5707963007277478192313249118058999885`23.790026338775377],Set[
sc1max$$,1.57079631376132238910538051392577865856`24.0910563493637],Set[sc1min$$,
1.57079631376132204935725723325498869406`24.091056326722068],Set[sc2$$,1.56667310612457929808943676646283402207`18.58974673218461],Set[
sc2max$$,1.56873894922026965768356587434644401758`18.893132332698443],Set[sc2min$$,
1.56873044864957678272604956151468305932`18.889548585250807],Set[sc3$$,1.57069818241217912474726724037044583634`18.214227296115343],Set[
sc3max$$,1.57074725701138151267958671257208523098`18.515313479963282],Set[sc3min$$,
1.57074725219522155225337630898455280058`18.515228231503844],Set[sc4$$,0.0228918715697864150929198901434829818`16.010151735081248],Set[
sc4max$$,0.8077778104431761893647864327873812143`17.577415131904893],Set[sc4min$$,
-0.76197007490505171667510507894219119384`17.512300835477358],Set[sc5$$,ArcTan[Rational[
1,2]]],Set[sc5max$$,ArcTan[2]],Set[sc5min$$,0],Set[scColor1$$,RGBColor[0.237736`,
0.340215`,0.575113`]],Set[scColor2$$,RGBColor[0.277947`,0.45009699999999997`,0.32815550000000004`]],Set[
scColor3$$,RGBColor[0.624866`,0.673302`,0.264296`]],Set[scColor4$$,RGBColor[0.8453409999999999`,
0.6248695`,0.3151775`]],Set[scColor5$$,RGBColor[0.72987`,0.239399`,0.230961`]],Set[
scCount1$$,12],Set[scCount2$$,12],Set[scCount3$$,12],Set[scCount4$$,12],Set[scCount5$$,
12],Set[scTF1$$,True],Set[scTF2$$,False],Set[scTF3$$,False],Set[scTF4$$,False],Set[
scTF5$$,False],Set[CalculateScan`PlotterScanner`Private`x1$$,-0.5491165379519889`],Set[
CalculateScan`PlotterScanner`Private`x2$$,0.9465071451198819`]}],RuleDelayed["ControllerVariables",
{Hold[CalculateUtilities`GraphicsUtilities`Private`more$$,CalculateUtilities`GraphicsUtilities`Private`more$1868802$$,
False],Hold[CalculateScan`PlotterScanner`Private`x1$$,CalculateScan`PlotterScanner`Private`x1$1868803$$,
0],Hold[CalculateScan`PlotterScanner`Private`x2$$,CalculateScan`PlotterScanner`Private`x2$1868804$$,
0],Hold[CalculateScan`PlotterScanner`Private`Sa$$,CalculateScan`PlotterScanner`Private`Sa$1868805$$,
False],Hold[CalculateScan`PlotterScanner`Private`Sat$$,CalculateScan`PlotterScanner`Private`Sat$1868806$$,
False],Hold[sc1$$,sc1$1868807$$,0],Hold[sc2$$,sc2$1868808$$,0],Hold[sc3$$,sc3$1868809$$,
0],Hold[sc4$$,sc4$1868810$$,0],Hold[sc5$$,sc5$1868811$$,0],Hold[CalculateScan`PlotterScanner`Private`SC$$,
CalculateScan`PlotterScanner`Private`SC$1868812$$,False],Hold[sc1min$$,sc1min$1868813$$,
0],Hold[sc1max$$,sc1max$1868814$$,0],Hold[scCount1$$,scCount1$1868815$$,0]}],RuleDelayed[
"OtherVariables",{Typeset`show$$,Typeset`bookmarkList$$,Typeset`bookmarkMode$$,Typeset`animator$$,Typeset`animvar$$,Typeset`name$$,Typeset`specs$$,Typeset`size$$,Typeset`update$$,Typeset`initDone$$,Typeset`skipInitDone$$}],
RuleDelayed["Body",Block[{\[Lambda]},Module[{CalculateScan`PlotterScanner`Private`x1L$,CalculateScan`PlotterScanner`Private`x2L$,CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$,CalculateScan`PlotterScanner`Private`yL$,CalculateScan`PlotterScanner`Private`yU$,CalculateScan`PlotterScanner`Private`\[CapitalDelta]y$,CalculateScan`PlotterScanner`Private`pRY$,CalculateScan`PlotterScanner`Private`originalCurvePlot$,CalculateScan`PlotterScanner`Private`curveParametersAndColorsToPlot$,CalculateScan`PlotterScanner`Private`embeddingCurvePlots$,CalculateScan`PlotterScanner`Private`curveParameterLists$,CalculateScan`PlotterScanner`Private`colorLists$,CalculateScan`PlotterScanner`Private`functionsToPlotHeldList$},
CompoundExpression[Set[CalculateScan`PlotterScanner`Private`curveParametersAndColorsToPlot$,
Flatten[N[Join[If[SameQ[CalculateScan`PlotterScanner`Private`SC$$,True],{Tan[{sc1$$,sc2$$,sc3$$,sc4$$,sc5$$}] -> Directive[
Gray]},{}],Table[If[SameQ[Part[{scTF1$$,scTF2$$,scTF3$$,scTF4$$,scTF5$$},CalculateScan`PlotterScanner`Private`j],
True],Table[MapAt[Function[Plus[Tan[Part[{{sc1min$$,sc1max$$},{sc2min$$,sc2max$$},{sc3min$$,sc3max$$},{sc4min$$,sc4max$$},{sc5min$$,sc5max$$}},
CalculateScan`PlotterScanner`Private`j,1]],Times[Plus[CalculateScan`PlotterScanner`Private`i,
-1],Power[Plus[Part[{scCount1$$,scCount2$$,scCount3$$,scCount4$$,scCount5$$},CalculateScan`PlotterScanner`Private`j],
-1],-1],Plus[Tan[Part[{{sc1min$$,sc1max$$},{sc2min$$,sc2max$$},{sc3min$$,sc3max$$},{sc4min$$,sc4max$$},{sc5min$$,sc5max$$}},
CalculateScan`PlotterScanner`Private`j,2]],Times[-1,Tan[Part[{{sc1min$$,sc1max$$},{sc2min$$,sc2max$$},{sc3min$$,sc3max$$},{sc4min$$,sc4max$$},{sc5min$$,sc5max$$}},
CalculateScan`PlotterScanner`Private`j,1]]]]]]],{sc1$$,sc2$$,sc3$$,sc4$$,sc5$$},CalculateScan`PlotterScanner`Private`j] -> Part[
{scColor1$$,scColor2$$,scColor3$$,scColor4$$,scColor5$$},CalculateScan`PlotterScanner`Private`j],
{CalculateScan`PlotterScanner`Private`i,1,Plus[Part[{scCount1$$,scCount2$$,scCount3$$,scCount4$$,scCount5$$},
CalculateScan`PlotterScanner`Private`j],-1]}],{}],{CalculateScan`PlotterScanner`Private`j,5}]]]]],
If[SameQ[CalculateScan`PlotterScanner`Private`curveParametersAndColorsToPlot$,{}],
Set[CalculateScan`PlotterScanner`Private`embeddingCurvePlots$,{}],CompoundExpression[
Set[{CalculateScan`PlotterScanner`Private`curveParameterLists$,CalculateScan`PlotterScanner`Private`colorLists$},
Transpose[ReplaceAll[Flatten[CalculateScan`PlotterScanner`Private`curveParametersAndColorsToPlot$],
Rule -> List]]],Set[CalculateScan`PlotterScanner`Private`x1L$,CalculateScan`PlotterScanner`Private`x1$$],
Set[CalculateScan`PlotterScanner`Private`x2L$,If[Equal[CalculateScan`PlotterScanner`Private`x1$$,
CalculateScan`PlotterScanner`Private`x2$$],If[GreaterEqual[CalculateScan`PlotterScanner`Private`x1$$,
0],Plus[CalculateScan`PlotterScanner`Private`x2$$,-0.01`],Plus[CalculateScan`PlotterScanner`Private`x2$$,
0.01`]],CalculateScan`PlotterScanner`Private`x2$$]],Set[CalculateScan`PlotterScanner`Private`originalCurvePlot$,
Plot[CompiledFunction[{11,12.`,5468},{Blank[Real],Blank[Real],Blank[Real],Blank[Real],Blank[
Real],Blank[Real]},{{3,0,0},{3,0,1},{3,0,2},{3,0,3},{3,0,4},{3,0,5},{3,0,10}},{{4,{2,0,1}},{3,{2,0,0}}},
{0,2,11,0,0},{{16,0,2,6},{40,56,3,0,0,3,0,7},{16,7,3,7},{41,263,3,0,0,2,0,0,3,0,8},{16,8,4,8},{41,263,3,0,0,2,0,1,3,0,9},{16,9,5,9},{13,1,6,7,8,9,10},{1}},
Function[{\[Lambda],C$1868785,C$1868786,C$1868787,C$1868788,C$1868789},Plus[C$1868785,
Times[\[Lambda],C$1868786],Times[Power[\[Lambda],2],C$1868787],Times[Power[\[Lambda],
3],C$1868788],Times[Power[\[Lambda],4],C$1868789]]],Evaluate][\[Lambda],Apply[Sequence,
{7.672492359425208`16.01*^7,485.0549669628617`16.01,20378.14022770299999999998527555611360639887`14.01,0.04579174228675136`16.01,1}]],
{\[Lambda],Function[{CalculateScan`PlotterScanner`Private`y,CalculateScan`PlotterScanner`Private`L},
Times[Sign[CalculateScan`PlotterScanner`Private`y],CalculateScan`PlotterScanner`Private`L,
Power[Tan[Abs[CalculateScan`PlotterScanner`Private`y]],1]]][CalculateScan`PlotterScanner`Private`x1L$,
48.295672763668996`],Function[{CalculateScan`PlotterScanner`Private`y,CalculateScan`PlotterScanner`Private`L},
Times[Sign[CalculateScan`PlotterScanner`Private`y],CalculateScan`PlotterScanner`Private`L,
Power[Tan[Abs[CalculateScan`PlotterScanner`Private`y]],1]]][CalculateScan`PlotterScanner`Private`x2L$,
48.295672763668996`]},PlotStyle -> Directive[Black,Thick]]],Set[{{CalculateScan`PlotterScanner`Private`xL$,CalculateScan`PlotterScanner`Private`xU$},{CalculateScan`PlotterScanner`Private`yL$,CalculateScan`PlotterScanner`Private`yU$}},
Lookup[AbsoluteOptions[CalculateScan`PlotterScanner`Private`originalCurvePlot$,PlotRange],
PlotRange]],Set[CalculateScan`PlotterScanner`Private`\[CapitalDelta]y$,Plus[CalculateScan`PlotterScanner`Private`yU$,
Times[-1,CalculateScan`PlotterScanner`Private`yL$]]],Set[CalculateScan`PlotterScanner`Private`pRY$,
{Plus[CalculateScan`PlotterScanner`Private`yL$,Times[-1,CalculateScan`PlotterScanner`Private`\[CapitalDelta]y$]],Plus[
CalculateScan`PlotterScanner`Private`yU$,CalculateScan`PlotterScanner`Private`\[CapitalDelta]y$]}],
Set[CalculateScan`PlotterScanner`Private`originalCurvePlot$,Plot[CompiledFunction[
{11,12.`,5468},{Blank[Real],Blank[Real],Blank[Real],Blank[Real],Blank[Real],Blank[
Real]},{{3,0,0},{3,0,1},{3,0,2},{3,0,3},{3,0,4},{3,0,5},{3,0,10}},{{4,{2,0,1}},{3,{2,0,0}}},
{0,2,11,0,0},{{16,0,2,6},{40,56,3,0,0,3,0,7},{16,7,3,7},{41,263,3,0,0,2,0,0,3,0,8},{16,8,4,8},{41,263,3,0,0,2,0,1,3,0,9},{16,9,5,9},{13,1,6,7,8,9,10},{1}},
Function[{\[Lambda],C$1868785,C$1868786,C$1868787,C$1868788,C$1868789},Plus[C$1868785,
Times[\[Lambda],C$1868786],Times[Power[\[Lambda],2],C$1868787],Times[Power[\[Lambda],
3],C$1868788],Times[Power[\[Lambda],4],C$1868789]]],Evaluate][\[Lambda],Apply[Sequence,
{7.672492359425208`16.01*^7,485.0549669628617`16.01,20378.14022770299999999998527555611360639887`14.01,0.04579174228675136`16.01,1}]],
{\[Lambda],Function[{CalculateScan`PlotterScanner`Private`y,CalculateScan`PlotterScanner`Private`L},
Times[Sign[CalculateScan`PlotterScanner`Private`y],CalculateScan`PlotterScanner`Private`L,
Power[Tan[Abs[CalculateScan`PlotterScanner`Private`y]],1]]][CalculateScan`PlotterScanner`Private`x1L$,
48.295672763668996`],Function[{CalculateScan`PlotterScanner`Private`y,CalculateScan`PlotterScanner`Private`L},
Times[Sign[CalculateScan`PlotterScanner`Private`y],CalculateScan`PlotterScanner`Private`L,
Power[Tan[Abs[CalculateScan`PlotterScanner`Private`y]],1]]][CalculateScan`PlotterScanner`Private`x2L$,
48.295672763668996`]},PlotStyle -> Directive[Black,Thick],PlotRange -> CalculateScan`PlotterScanner`Private`pRY$]],
Set[CalculateScan`PlotterScanner`Private`functionsToPlotHeldList$,ReplaceAll[Apply[
Hold,{Map[Function[CalculateScan`PlotterScanner`Private`FED0[\[Lambda],Apply[Sequence,
Slot[1]]]],CalculateScan`PlotterScanner`Private`curveParameterLists$]}],CalculateScan`PlotterScanner`Private`FED0 -> CompiledFunction[
{11,12.`,5468},{Blank[Real],Blank[Real],Blank[Real],Blank[Real],Blank[Real],Blank[
Real]},{{3,0,0},{3,0,1},{3,0,2},{3,0,3},{3,0,4},{3,0,5},{3,0,10}},{{4,{2,0,1}},{3,{2,0,0}}},
{0,2,11,0,0},{{16,0,2,6},{40,56,3,0,0,3,0,7},{16,7,3,7},{41,263,3,0,0,2,0,0,3,0,8},{16,8,4,8},{41,263,3,0,0,2,0,1,3,0,9},{16,9,5,9},{13,1,6,7,8,9,10},{1}},
Function[{\[Lambda],C$1868785,C$1868786,C$1868787,C$1868788,C$1868789},Plus[C$1868785,
Times[\[Lambda],C$1868786],Times[Power[\[Lambda],2],C$1868787],Times[Power[\[Lambda],
3],C$1868788],Times[Power[\[Lambda],4],C$1868789]]],Evaluate]]],Set[CalculateScan`PlotterScanner`Private`embeddingCurvePlots$,
Apply[Function[CalculateScan`PlotterScanner`Private`curveList$,Plot[CalculateScan`PlotterScanner`Private`curveList$,
{\[Lambda],Function[{CalculateScan`PlotterScanner`Private`y,CalculateScan`PlotterScanner`Private`L},
Times[Sign[CalculateScan`PlotterScanner`Private`y],CalculateScan`PlotterScanner`Private`L,
Power[Tan[Abs[CalculateScan`PlotterScanner`Private`y]],1]]][CalculateScan`PlotterScanner`Private`x1L$,
48.295672763668996`],Function[{CalculateScan`PlotterScanner`Private`y,CalculateScan`PlotterScanner`Private`L},
Times[Sign[CalculateScan`PlotterScanner`Private`y],CalculateScan`PlotterScanner`Private`L,
Power[Tan[Abs[CalculateScan`PlotterScanner`Private`y]],1]]][CalculateScan`PlotterScanner`Private`x2L$,
48.295672763668996`]},Evaluate[PlotStyle -> Map[Function[Directive[Slot[1],AbsoluteThickness[
1]]],CalculateScan`PlotterScanner`Private`colorLists$],PlotRange -> CalculateScan`PlotterScanner`Private`pRY$]],
{HoldAll}],CalculateScan`PlotterScanner`Private`functionsToPlotHeldList$]],Null]],
ReplaceAll[Column[{Grid[{{Style["embedding function",GrayLevel[0.3`]],ReplaceAll[
Plus[C[0],Times[\[Lambda],C[1]],Times[Power[\[Lambda],2],C[2]],Times[Power[\[Lambda],
3],C[3]],Times[Power[\[Lambda],4],C[4]]],RuleDelayed[C[Pattern[CalculateScan`PlotterScanner`Private`i,
Blank[]]],Subscript[RawBoxes["c"],CalculateScan`PlotterScanner`Private`i]]]},{Style[
"embedding ODE",GrayLevel[0.3`]],Part[Flatten[{Equal[Derivative[5][y][\[Lambda]],
0]}],1]}},Alignment -> Left],If[And[SameQ[CalculateScan`PlotterScanner`Private`SC$$,
False],SameQ[CalculateScan`PlotterScanner`Private`embeddingCurvePlots$,{}]],Style[
"no curves to show",Gray],Show[{CalculateScan`PlotterScanner`Private`embeddingCurvePlots$,CalculateScan`PlotterScanner`Private`originalCurvePlot$},
PlotRange -> {Automatic,CalculateScan`PlotterScanner`Private`pRY$},ImageSize -> 360,
ImagePadding -> 12,If[CalculateScan`PlotterScanner`Private`Sa$$,Apply[Sequence,{Axes -> True,AxesStyle -> Gray}],
Apply[Sequence,{Axes -> False}]],If[CalculateScan`PlotterScanner`Private`Sat$$,Apply[
Sequence,{Ticks -> True}],Apply[Sequence,{Ticks -> False}]]]],If[And[SameQ[CalculateScan`PlotterScanner`Private`SC$$,
False],SameQ[CalculateScan`PlotterScanner`Private`embeddingCurvePlots$,{}]],Apply[
Sequence,{}],Grid[{{Style["\[LongDash]",Bold,Black],Style["original function",GrayLevel[
0.3`]],ReplaceAll[Plus[C[0],Times[\[Lambda],C[1]],Times[Power[\[Lambda],2],C[2]],
Times[Power[\[Lambda],3],C[3]],Times[Power[\[Lambda],4],C[4]]],{C[0] -> 7.672492359425208`16.01*^7,C[
1] -> 485.0549669628617`16.01,C[2] -> 20378.14022770299999999998527555611360639887`14.01,C[
3] -> 0.04579174228675136`16.01,C[4] -> 1}]},If[SameQ[CalculateScan`PlotterScanner`Private`SC$$,
True],{Style["\[LongDash]",Bold,Gray],Style[Row[{Subscript[RawBoxes["c"],RawBoxes[
"j"]],"\[Hyphen]values function"}],GrayLevel[0.3`]],ReplaceAll[Plus[C[0],Times[\[Lambda],
C[1]],Times[Power[\[Lambda],2],C[2]],Times[Power[\[Lambda],3],C[3]],Times[Power[\[Lambda],
4],C[4]]],Apply[Rule,Transpose[{{C[0],C[1],C[2],C[3],C[4]},Tan[{sc1$$,sc2$$,sc3$$,sc4$$,sc5$$}]}],
{1}]]},Apply[Sequence,{}]],Apply[Sequence,DeleteCases[Table[If[SameQ[Part[{scTF1$$,scTF2$$,scTF3$$,scTF4$$,scTF5$$},
CalculateScan`PlotterScanner`Private`j],True],{Style["\[LongDash]",Bold,Part[{scColor1$$,scColor2$$,scColor3$$,scColor4$$,scColor5$$},
CalculateScan`PlotterScanner`Private`j]],Style[Row[{Subscript[RawBoxes["c"],CalculateScan`PlotterScanner`Private`j],"\[Hyphen]family"}],
GrayLevel[0.3`]],ReplaceAll[Plus[C[0],Times[\[Lambda],C[1]],Times[Power[\[Lambda],
2],C[2]],Times[Power[\[Lambda],3],C[3]],Times[Power[\[Lambda],4],C[4]]],Apply[Rule,
Transpose[{{C[0],C[1],C[2],C[3],C[4]},MapAt[Function[Subscript[RawBoxes["c"],CalculateScan`PlotterScanner`Private`j]],
Tan[{sc1$$,sc2$$,sc3$$,sc4$$,sc5$$}],CalculateScan`PlotterScanner`Private`j]}],{1}]]},
{}],{CalculateScan`PlotterScanner`Private`j,5}],{}]]},Alignment -> Left]]},Dividers -> {False,{False,False,False}}],
\[Lambda] -> \[Lambda]1230]]]]],RuleDelayed["Specifications",{{CalculateUtilities`GraphicsUtilities`Private`more$$,{False,True},ControlType -> None},{{CalculateScan`PlotterScanner`Private`x1$$,-0.5491165379519889`,Subscript[
Style["\[Lambda]",Italic],"min"]},-1.5692255304681018`,1.5692255304681018`,ImageSize -> Small,ControlPlacement -> 1},{{CalculateScan`PlotterScanner`Private`x2$$,0.9465071451198819`,Subscript[
Style["\[Lambda]",Italic],"max"]},-1.5692255304681018`,1.5692255304681018`,ImageSize -> Small,ControlPlacement -> 2},{{CalculateScan`PlotterScanner`Private`Sa$$,True,"show axes"},{True,False},ControlPlacement -> 3},{{CalculateScan`PlotterScanner`Private`Sat$$,False,"show ticks"},{True,False},ControlPlacement -> 4},{{sc1$$,1.5707963007277478192313249118058999885`23.790026338775377,Row[
{Subscript[RawBoxes["c"],1]," value"}]},-1.5692255304681018`,1.5692255304681018`,ImageSize -> Small,ControlPlacement -> 5},{{sc2$$,1.56667310612457929808943676646283402207`18.58974673218461,Row[
{Subscript[RawBoxes["c"],2]," value"}]},-1.5692255304681018`,1.5692255304681018`,ImageSize -> Small,ControlPlacement -> 6},{{sc3$$,1.57069818241217912474726724037044583634`18.214227296115343,Row[
{Subscript[RawBoxes["c"],3]," value"}]},-1.5692255304681018`,1.5692255304681018`,ImageSize -> Small,ControlPlacement -> 7},{{sc4$$,0.0228918715697864150929198901434829818`16.010151735081248,Row[
{Subscript[RawBoxes["c"],4]," value"}]},-1.5692255304681018`,1.5692255304681018`,ImageSize -> Small,ControlPlacement -> 8},{{sc5$$,ArcTan[
Rational[1,2]],Row[{Subscript[RawBoxes["c"],5]," value"}]},-1.5692255304681018`,1.5692255304681018`,ImageSize -> Small,ControlPlacement -> 9},{{CalculateScan`PlotterScanner`Private`SC$$,True,"show single curve"},{True,False},ControlPlacement -> 10},{{scTF1$$,True,Row[
{"show ",Subscript[RawBoxes["c"],1]," family"}]},{True,False},ControlPlacement -> 11},{{scColor1$$,RGBColor[
0.237736`,0.340215`,0.575113`]," color"},RGBColor[1,0,0],ImageSize -> Tiny,ControlPlacement -> 12},{{sc1min$$,1.57079631376132204935725723325498869406`24.091056326722068,Subscript[
RawBoxes["c"],1,"min"]},-1.5692255304681018`,1.5692255304681018`,ImageSize -> Tiny,ControlPlacement -> 13},{{sc1max$$,1.57079631376132238910538051392577865856`24.0910563493637,Subscript[
RawBoxes["c"],1,"max"]},-1.5692255304681018`,1.5692255304681018`,ImageSize -> Tiny,ControlPlacement -> 14},{{scCount1$$,12," curve count"},2,60,1,ImageSize -> Tiny,ControlPlacement -> 15},{{scTF2$$,False,Row[
{"show ",Subscript[RawBoxes["c"],2]," family"}]},{True,False},ControlPlacement -> 16},{{scColor2$$,RGBColor[
0.277947`,0.45009699999999997`,0.32815550000000004`]," color"},RGBColor[1,0,0],ImageSize -> Tiny,ControlPlacement -> 17},{{sc2min$$,1.56873044864957678272604956151468305932`18.889548585250807,Subscript[
RawBoxes["c"],2,"min"]},-1.5692255304681018`,1.5692255304681018`,ImageSize -> Tiny,ControlPlacement -> 18},{{sc2max$$,1.56873894922026965768356587434644401758`18.893132332698443,Subscript[
RawBoxes["c"],2,"max"]},-1.5692255304681018`,1.5692255304681018`,ImageSize -> Tiny,ControlPlacement -> 19},{{scCount2$$,12," curve count"},2,60,1,ImageSize -> Tiny,ControlPlacement -> 20},{{scTF3$$,False,Row[
{"show ",Subscript[RawBoxes["c"],3]," family"}]},{True,False},ControlPlacement -> 21},{{scColor3$$,RGBColor[
0.624866`,0.673302`,0.264296`]," color"},RGBColor[1,0,0],ImageSize -> Tiny,ControlPlacement -> 22},{{sc3min$$,1.57074725219522155225337630898455280058`18.515228231503844,Subscript[
RawBoxes["c"],3,"min"]},-1.5692255304681018`,1.5692255304681018`,ImageSize -> Tiny,ControlPlacement -> 23},{{sc3max$$,1.57074725701138151267958671257208523098`18.515313479963282,Subscript[
RawBoxes["c"],3,"max"]},-1.5692255304681018`,1.5692255304681018`,ImageSize -> Tiny,ControlPlacement -> 24},{{scCount3$$,12," curve count"},2,60,1,ImageSize -> Tiny,ControlPlacement -> 25},{{scTF4$$,False,Row[
{"show ",Subscript[RawBoxes["c"],4]," family"}]},{True,False},ControlPlacement -> 26},{{scColor4$$,RGBColor[
0.8453409999999999`,0.6248695`,0.3151775`]," color"},RGBColor[1,0,0],ImageSize -> Tiny,ControlPlacement -> 27},{{sc4min$$,-0.76197007490505171667510507894219119384`17.512300835477358,Subscript[
RawBoxes["c"],4,"min"]},-1.5692255304681018`,1.5692255304681018`,ImageSize -> Tiny,ControlPlacement -> 28},{{sc4max$$,0.8077778104431761893647864327873812143`17.577415131904893,Subscript[
RawBoxes["c"],4,"max"]},-1.5692255304681018`,1.5692255304681018`,ImageSize -> Tiny,ControlPlacement -> 29},{{scCount4$$,12," curve count"},2,60,1,ImageSize -> Tiny,ControlPlacement -> 30},{{scTF5$$,False,Row[
{"show ",Subscript[RawBoxes["c"],5]," family"}]},{True,False},ControlPlacement -> 31},{{scColor5$$,RGBColor[
0.72987`,0.239399`,0.230961`]," color"},RGBColor[1,0,0],ImageSize -> Tiny,ControlPlacement -> 32},{{sc5min$$,0,Subscript[
RawBoxes["c"],5,"min"]},-1.5692255304681018`,1.5692255304681018`,ImageSize -> Tiny,ControlPlacement -> 33},{{sc5max$$,ArcTan[
2],Subscript[RawBoxes["c"],5,"max"]},-1.5692255304681018`,1.5692255304681018`,ImageSize -> Tiny,ControlPlacement -> 34},{{scCount5$$,12," curve count"},2,60,1,ImageSize -> Tiny,ControlPlacement -> 35},Style[
Overlay[{Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","PodInfoBackground"]]],Pane[
Column[{Row[{Invisible[Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","OrangePlus"]]]]," ",Column[
{"Horizontal plot range",Row[{Manipulate`Place[1],"  ",Manipulate`Place[2]}],Row[
{Manipulate`Place[3],"  ",Manipulate`Place[4]}]}]}],PaneSelector[{True -> Grid[{{Button[
Row[{Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","OrangePlus"]]]," "}],
Set[CalculateUtilities`GraphicsUtilities`Private`more$$,False],Appearance -> None,
BaseStyle -> {}],Button["Fewer controls",Set[CalculateUtilities`GraphicsUtilities`Private`more$$,
False],Appearance -> None,BaseStyle -> {}]},{"",Item[Column[{Style["Curve parameters",
Plain],Column[{Manipulate`Place[5],Manipulate`Place[6],Manipulate`Place[7],Manipulate`Place[
8],Manipulate`Place[9]}],Manipulate`Place[10],Style["Show curve families",Plain],Column[
{Row[{Manipulate`Place[11]," | ",Manipulate`Place[12]}],Row[{Manipulate`Place[13],"  ",Manipulate`Place[
14],"  ",Manipulate`Place[15]}],Row[{Manipulate`Place[16]," | ",Manipulate`Place[
17]}],Row[{Manipulate`Place[18],"  ",Manipulate`Place[19],"  ",Manipulate`Place[20]}],Row[
{Manipulate`Place[21]," | ",Manipulate`Place[22]}],Row[{Manipulate`Place[23],"  ",Manipulate`Place[
24],"  ",Manipulate`Place[25]}],Row[{Manipulate`Place[26]," | ",Manipulate`Place[
27]}],Row[{Manipulate`Place[28],"  ",Manipulate`Place[29],"  ",Manipulate`Place[30]}],Row[
{Manipulate`Place[31]," | ",Manipulate`Place[32]}],Row[{Manipulate`Place[33],"  ",Manipulate`Place[
34],"  ",Manipulate`Place[35]}]}]}],ItemSize -> Scaled[1],Frame -> {None,None,True,None}]}},
FrameStyle -> GrayLevel[0.9`],Alignment -> Left,Spacings -> {0,0.8`}],False -> Button[
Row[{Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","OrangePlus"]]]," ","More controls"}],
Set[CalculateUtilities`GraphicsUtilities`Private`more$$,True],Appearance -> None,
BaseStyle -> {}]},Dynamic[CalculateUtilities`GraphicsUtilities`Private`more$$],ImageSize -> Automatic]}],
ImageMargins -> {{20,30},{10,10}}]},{1,2},2,Alignment -> {Left,Top}]]}],RuleDelayed[
"Options",{ControlPlacement -> Bottom,FrameMargins -> {{0,0},{0,10}},Paneled -> False,AppearanceElements -> {},LabelStyle -> {"DialogStyle",FontColor -> GrayLevel[
0.25`]}}],RuleDelayed["DefaultOptions",{}]],SingleEvaluation -> True],RuleDelayed[
Initialization,CompoundExpression[{{SetDelayed[MakeBoxes[\[Lambda]1230,Pattern[CalculateScan`PlotterScanner`Private`form$,
Blank[]]],"\[Lambda]"]},ReleaseHold[Uncompress["6:eJztVm1v0zAQbinv7/APkPiMGCAYH5CADsakAaUp3+vFl8TCtYPtbIM/Dz67SZq1qxTTAZrSD6f60jy+e+656z04kOOk3+v19EVrPkhOkyt4um/NUM5yWQj67jhXoDWTIrmAz65bE4HZAU5+APW+y9a8l2pGjD+/wvcJjwtODHw1jDPDQE93FckzFuvaM1Ls0P5kymVMOPsJD7e2n2+/ePnYw2AsI2IMKKGftoXMM0U0JD0EumTNW07EN3+8Vx4/FZxH8L0AEYO+Y70TRaiFkYJwzCf41vPN1E1MzBBBiaJnTpOT57DtBdooJtIJzHJ843SyttoCE5Vqz82tkpt1CvLhX8UHMnIxeY9L2p0dgWFhnDP6Tsrqn3M3wPPrtvBKHq0mDvN7w5E3Ytgh6GU6H7Wuk2ek6loX/Zyrs5ovGw3y9ClT/y/tM22Ww3jSNgyYHdgar9beMvyztvAyx66fi/u2NZ+9owRcNRwqwX2UtODzKJopD7xE26erc+vwGDcqviN0hlSwwhnbOMt+cf1xtwKvN4UIazfdgHREPQPGkIN1UcftDkuZGWZEkdgCz6/rl002kXUoAXe2rz0TlNkB5glZtzyh2UsW6k5MnH35o+JWcjnRZMj7njCQglor+mtYH2XJFXQiAyOJ8IKmXoM5rJIaERUs+0EJEuVEMIRkv+zHffMPFyuBVO0qVJfyLA5caY7Dk+iXBd4HkZqsuWMHjq7gtsVsxvKoVt2YJcnitNkc0/0m040bmgM9lITQkoQP9G5T6DaFv7opLO3B3ZrQrQndmtCtCd2a8P+uCS5i/Ff6DZtkuNY="]]},
Set[Typeset`initDone$$,True]]],RuleDelayed[DynamicModuleValues,{}],RuleDelayed[Deinitialization,
None],RuleDelayed[UntrackedVariables,{Typeset`size$$}],SynchronousInitialization -> True,
RuleDelayed[UnsavedVariables,{Typeset`initDone$$}],RuleDelayed[UndoTrackedVariables,
{Typeset`show$$,Typeset`bookmarkMode$$}]],"Manipulate",Deployed -> True,StripOnInput -> False],
TraditionalForm],Manipulate`InterpretManipulate[1]],TraditionalForm]],"Output",{Background -> None,GraphicsBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics"},DefaultAxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsAxes"],DefaultFrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsFrame"],DefaultFrameTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsFrameTicks"],DefaultTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsTicks"]},Graphics3DBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics3D"}}},
NumberPoint -> ".",CellSize -> {550,Automatic},AutoStyleOptions -> {"HighlightFormattingErrors" -> False},
RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}],XMLElement[
"dataformats",{},{}]}],XMLElement["expressiontypes",{"count" -> "1"},{"\n   ",XMLElement[
"expressiontype",{"name" -> "Default"},{}],"\n  "}]}]],Set[Typeset`pod13$$,XMLElement[
"pod",{"title" -> "Inverse iterations","scanner" -> "Plotter","id" -> "InverseIterations","position" -> "1300","error" -> "false","numsubpods" -> "1"},
{XMLElement["subpod",{"title" -> ""},{XMLElement["cell",{"compressed" -> True,"string" -> False},
{Cell[
BoxData[FormBox[TagBox[FormBox[StyleBox[DynamicModuleBox[{Set[CalculateScan`PlotterScanner`Private`iter$$,
4],Set[CalculateUtilities`GraphicsUtilities`Private`more$$,False],Set[CalculateScan`PlotterScanner`Private`P$$,
{69.77956791876414`,71.34192731776551`}],Set[CalculateScan`PlotterScanner`Private`sf$$,
False],Set[Typeset`show$$,True],Set[Typeset`bookmarkList$$,{}],Set[Typeset`bookmarkMode$$,
"Menu"],Typeset`animator$$,Set[Typeset`animvar$$,1],Set[Typeset`name$$,"\"untitled\""],Set[
Typeset`specs$$,{{Hold[CalculateUtilities`GraphicsUtilities`Private`more$$],{False,True}},{{Hold[
CalculateScan`PlotterScanner`Private`iter$$],4,"backward iterations"},{1,2,3,4,5,6}},{{Hold[
CalculateScan`PlotterScanner`Private`sf$$],False,"show frame"},{True,False}},{Hold[
Style[Overlay[{Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","PodInfoBackground"]]],Pane[
Column[{Column[{Manipulate`Place[1],Manipulate`Place[2]}]}],ImageMargins -> {{20,30},{10,10}}]},
{1,2},2,Alignment -> {Left,Top}]]],Manipulate`Dump`ThisIsNotAControl},{{Hold[CalculateScan`PlotterScanner`Private`P$$],{69.77956791876414`,71.34192731776551`}}}}],Set[
Typeset`size$$,Automatic],Set[Typeset`update$$,0],Set[Typeset`initDone$$,False],Set[
Typeset`skipInitDone$$,False],Set[CalculateUtilities`GraphicsUtilities`Private`more$1868967$$,
False],Set[CalculateScan`PlotterScanner`Private`iter$1868968$$,0],Set[CalculateScan`PlotterScanner`Private`sf$1868969$$,
False]},DynamicBox[Manipulate`ManipulateBoxes[2,TraditionalForm,RuleDelayed["Variables",
{Set[CalculateScan`PlotterScanner`Private`iter$$,4],Set[CalculateUtilities`GraphicsUtilities`Private`more$$,
False],Set[CalculateScan`PlotterScanner`Private`P$$,{69.77956791876414`,71.34192731776551`}],Set[
CalculateScan`PlotterScanner`Private`sf$$,False]}],RuleDelayed["ControllerVariables",
{Hold[CalculateUtilities`GraphicsUtilities`Private`more$$,CalculateUtilities`GraphicsUtilities`Private`more$1868967$$,
False],Hold[CalculateScan`PlotterScanner`Private`iter$$,CalculateScan`PlotterScanner`Private`iter$1868968$$,
0],Hold[CalculateScan`PlotterScanner`Private`sf$$,CalculateScan`PlotterScanner`Private`sf$1868969$$,
False]}],RuleDelayed["OtherVariables",{Typeset`show$$,Typeset`bookmarkList$$,Typeset`bookmarkMode$$,Typeset`animator$$,Typeset`animvar$$,Typeset`name$$,Typeset`specs$$,Typeset`size$$,Typeset`update$$,Typeset`initDone$$,Typeset`skipInitDone$$}],
RuleDelayed["Body",Quiet[Quiet[Graphics[{Dynamic[{AbsolutePointSize[1.5`],RGBColor[
0.237`,0.34`,0.575`],Point[Map[Function[{Re[Slot[1]],Im[Slot[1]]}],Flatten[NestList[
Function[Union[Flatten[Map[Function[ReplaceAll[\[Lambda],Solve[Equal[Plus[7.672492359425208`16.01*^7,
Times[485.0549669628617`16.01,\[Lambda]],Times[20378.14022770299999999998527555611360639887`14.01,
Power[\[Lambda],2]],Times[0.04579174228675136`16.01,Power[\[Lambda],3]],Power[\[Lambda],
4]],Slot[1]],\[Lambda]]]],Slot[1]]]]],{Dot[CalculateScan`PlotterScanner`Private`P$$,
{1,I}]},CalculateScan`PlotterScanner`Private`iter$$]]]]}],{Locator[Dynamic[CalculateScan`PlotterScanner`Private`P$$,
Function[Set[CalculateScan`PlotterScanner`Private`P$$,{Max[Min[Part[Slot[1],1],Part[
{{-147.34803696139176`,147.3251410902484`},{-147.33658902582007`,147.33658902582007`}},
1,2]],Part[{{-147.34803696139176`,147.3251410902484`},{-147.33658902582007`,147.33658902582007`}},
1,1]],Max[Min[Part[Slot[1],2],Part[{{-147.34803696139176`,147.3251410902484`},{-147.33658902582007`,147.33658902582007`}},
2,2]],Part[{{-147.34803696139176`,147.3251410902484`},{-147.33658902582007`,147.33658902582007`}},
2,1]]}]]]]}},PlotRange -> {{-155.10259427854018`,155.07969840739682`},{-155.0911463429685`,155.0911463429685`}},
ImageMargins -> 20,ImageSize -> 240,If[CalculateScan`PlotterScanner`Private`sf$$,
Frame -> True,Apply[Sequence,{}]]]]]],RuleDelayed["Specifications",{{CalculateUtilities`GraphicsUtilities`Private`more$$,{False,True},ControlType -> None},{{CalculateScan`PlotterScanner`Private`iter$$,4,"backward iterations"},{1,2,3,4,5,6},ControlType -> SetterBar,ControlPlacement -> 1},{{CalculateScan`PlotterScanner`Private`sf$$,False,"show frame"},{True,False},ControlPlacement -> 2},Style[
Overlay[{Dynamic[RawBoxes[FEPrivate`FrontEndResource["WABitmaps","PodInfoBackground"]]],Pane[
Column[{Column[{Manipulate`Place[1],Manipulate`Place[2]}]}],ImageMargins -> {{20,30},{10,10}}]},
{1,2},2,Alignment -> {Left,Top}]],{{CalculateScan`PlotterScanner`Private`P$$,{69.77956791876414`,71.34192731776551`}},ControlType -> None}}],
RuleDelayed["Options",{ControlPlacement -> Bottom,FrameMargins -> {{0,0},{0,10}},Paneled -> False,AppearanceElements -> {},LabelStyle -> {"DialogStyle",FontColor -> GrayLevel[
0.25`]}}],RuleDelayed["DefaultOptions",{}]],SingleEvaluation -> True],RuleDelayed[
Initialization,CompoundExpression[{None,ReleaseHold[Uncompress["6:eJztVm1v0zAQbinv7/APkPiMNF6m8QEJ6GBMGlCS8r1efEktXDvYzjb48+Czm6RZu0oxHaAp/XCqL83ju+eeu96jQxml/V6vpy9b80Fyml7D00NrhnKWy0LQdye5Aq2ZFOklfHbTmhjMLnDyA6j3XbXmvVQzYvz5Fb5PeFJwYuCrYZwZBnqyp0g+ZYmuPSPFjuxPJlwmhLOf8HhrZ3vn5YttD4OxjIgxoIR+1hYynyqiIe0h0BVr3nIivvnjg/L4qeA8hu8FiAT0PesdK0ItjBSEYz7Bt15spm5jYoYIShQ9d5qcPIdtL9BGMZGNYZbjG2eTtdUWmKhMe27ulNysU5AP/zo+kLGLyXtc0u7sCAwL44LRd1pW/5y7AZ5ft4VX8ng1cZjfG468EcOOQC/T+aR1nTwjVde66Odcndd82WiQZ0+Z+n/pgGmzHMbTtmHA7NDWeLX2luGft4WXOXb9XNx3rfnsHSXgquFQCe6jpAWfR9FMeeAl2j5dnVuHx7hV8R2jM6SCFU5k4yz7xfXH/Qq83hRirN1kA9IR9QyIIAfroo7bXZYxM5wSRRILPL+uXzbZWNahBNzZvvZMUGYHmCdk3fKEZj9dqDsxyfTLHxW3ksupJkPe94WBDNRa0d/A+ihLrqBjGRhJjBc09RrMYZXUiKhg2Q9KkDgngiEk+2U/7pt/uFgJpGpPobqUZ3HgSnMSnkS/LPABiMxMmzt24OgKblvMJpLHteoilqaL02ZzTPebTDduaA70UBJCSxI+0LtNodsU/uqmsLQHd2tCtyZ0a0K3JnRrwv+7JriI8V/pN4KOuPY="]]},
Set[Typeset`initDone$$,True]]],RuleDelayed[DynamicModuleValues,{}],RuleDelayed[Deinitialization,
None],RuleDelayed[UntrackedVariables,{Typeset`size$$}],SynchronousInitialization -> True,
RuleDelayed[UnsavedVariables,{Typeset`initDone$$}],RuleDelayed[UndoTrackedVariables,
{Typeset`show$$,Typeset`bookmarkMode$$}]],"Manipulate",Deployed -> True,StripOnInput -> False],
TraditionalForm],Manipulate`InterpretManipulate[1]],TraditionalForm]],"Output",{Background -> None,GraphicsBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics"},DefaultAxesStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsAxes"],DefaultFrameStyle -> Directive[
GrayLevel[0,0.35`],FontColor -> GrayLevel[0.25`],FontOpacity -> 1,"GraphicsFrame"],DefaultFrameTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsFrameTicks"],DefaultTicksStyle -> Directive[
FontFamily -> "Times",FontSize -> 10,"GraphicsTicks"]},Graphics3DBoxOptions -> {DefaultBaseStyle -> {FontFamily -> "Times","Graphics3D"}}},
NumberPoint -> ".",CellSize -> {550,Automatic},AutoStyleOptions -> {"HighlightFormattingErrors" -> False},
RenderingOptions -> {"3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}],XMLElement[
"dataformats",{},{}]}],XMLElement["expressiontypes",{"count" -> "1"},{"\n   ",XMLElement[
"expressiontype",{"name" -> "Default"},{}],"\n  "}]}]],Set[Typeset`aux1$$,{True,False,{False},True}],Set[
Typeset`aux2$$,{True,False,{False},True}],Set[Typeset`aux3$$,{True,False,{False,False},True}],Set[
Typeset`aux4$$,{True,False,{False,False},True}],Set[Typeset`aux5$$,{True,False,{False,False,False,False},True}],Set[
Typeset`aux6$$,{True,False,{False},True}],Set[Typeset`aux7$$,{True,False,{False},True}],Set[
Typeset`aux8$$,{True,False,{False},True}],Set[Typeset`aux9$$,{True,False,{False},True}],Set[
Typeset`aux10$$,{True,False,{False},True}],Set[Typeset`aux11$$,{True,False,{False},True}],Set[
Typeset`aux12$$,{True,False,{False},True}],Set[Typeset`aux13$$,{True,False,{False},True}],Set[
Typeset`asyncpods$$,{}],Set[Typeset`nonpods$$,{}],Set[Typeset`initdone$$,FrontEnd`SuppressEvaluationHash[
True]],Set[Typeset`queryinfo$$,{"success" -> "true","error" -> "false",{"http://www.w3.org/XML/1998/namespace","space"} -> "preserve","numpods" -> "13","datatypes" -> "Math","timedout" -> "GlobalExtrema","timedoutpods" -> "","timing" -> "3.595","parsetiming" -> "0.365","parsetimedout" -> "false","recalculated" -> "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=MSPa8601h0fi268cah2166300004ea0gf3b33003he27167914177805443390","id" -> "MSP8611h0fi268cah216630000315662cd05ai2d6e","host" -> "https://www6b3.wolframalpha.com","server" -> "6","related" -> "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=MSPa8621h0fi268cah2166300002030gfecbfgcedh47167914177805443390","version" -> "2.6","inputstring" -> "7.672492359425208*^7 + 485.0549669628617*\[Lambda] + 20378.140227703*\[Lambda]^2 + 0.04579174228675136*\[Lambda]^3 + \[Lambda]^4"}],Set[
Typeset`sessioninfo$$,{"TimeZone" -> -6.`,"Date" -> {2023,3,9,9,17,52.266495`8.470798352189576},"Line" -> 228,"SessionID" -> 29407323735728583873}],Set[
Typeset`showpods$$,{1,2,3,4,5,6,7,8,9,10,11,12,13}],Set[Typeset`failedpods$$,{}],Set[
Typeset`chosen$$,{}],Set[Typeset`open$$,False],Set[Typeset`newq$$,"7.672492359425208*^7 + 485.0549669628617*\[Lambda] + 20378.140227703*\[Lambda]^2 + 0.04579174228675136*\[Lambda]^3 + \[Lambda]^4"]},
DynamicBox[ToBoxes[AlphaIntegration`FormatAlphaResults[Dynamic[{1,{Typeset`pod1$$,Typeset`pod2$$,Typeset`pod3$$,Typeset`pod4$$,Typeset`pod5$$,Typeset`pod6$$,Typeset`pod7$$,Typeset`pod8$$,Typeset`pod9$$,Typeset`pod10$$,Typeset`pod11$$,Typeset`pod12$$,Typeset`pod13$$},{Typeset`aux1$$,Typeset`aux2$$,Typeset`aux3$$,Typeset`aux4$$,Typeset`aux5$$,Typeset`aux6$$,Typeset`aux7$$,Typeset`aux8$$,Typeset`aux9$$,Typeset`aux10$$,Typeset`aux11$$,Typeset`aux12$$,Typeset`aux13$$},Typeset`chosen$$,Typeset`open$$,Typeset`elements$$,Typeset`q$$,Typeset`opts$$,Typeset`nonpods$$,Typeset`queryinfo$$,Typeset`sessioninfo$$,Typeset`showpods$$,Typeset`failedpods$$,Typeset`newq$$}]],
StandardForm],RuleDelayed[TrackedSymbols,{Typeset`showpods$$,Typeset`failedpods$$}]],
RuleDelayed[Initialization,If[And[Not[SameQ[Typeset`initdone$$,True]],Not[SameQ[Typeset`initdone$$,
FrontEnd`SuppressEvaluationHash[True]]]],CompoundExpression[Null,WolframAlphaClient`Private`doAsyncUpdates[
Hold[{Typeset`pod1$$,Typeset`pod2$$,Typeset`pod3$$,Typeset`pod4$$,Typeset`pod5$$,Typeset`pod6$$,Typeset`pod7$$,Typeset`pod8$$,Typeset`pod9$$,Typeset`pod10$$,Typeset`pod11$$,Typeset`pod12$$,Typeset`pod13$$}],
Typeset`asyncpods$$,Dynamic[Typeset`failedpods$$]],Set[Typeset`asyncpods$$,{}],Set[
Typeset`initdone$$,FrontEnd`SuppressEvaluationHash[True]]]]],RuleDelayed[DynamicModuleValues,
{}],SynchronousInitialization -> False,ExpressionUUID -> "dcbf1a5d-dd5f-42cf-9e55-26f14ba37269"],
BaseStyle -> {Deployed -> True},Editable -> False,DeleteWithContents -> True,SelectWithContents -> True],
StandardForm],"Output",CellLabel -> "Out[228]= ",ExpressionUUID -> "0138b05b-8cbe-4e2a-8636-d5a721e251b6"],Cell[
BoxData[
NamespaceBox["WolframAlphaQueryResults",DynamicModuleBox[{Set[Typeset`q$$,"7.672492359425208`*^7+485.0549669628617` \[Lambda]+20378.140227703` Cell[BoxData[SuperscriptBox[\"\\[Lambda]\",\"2\"]]]+0.04579174228675136` Cell[BoxData[SuperscriptBox[\"\\[Lambda]\",\"3\"]]]+Cell[BoxData[SuperscriptBox[\"\\[Lambda]\",\"4\"]]] == 0"],Set[
Typeset`opts$$,{AppearanceElements -> {"Warnings","Assumptions","Brand","Pods","PodMenus","Unsuccessful","Sources"}}],Set[
Typeset`elements$$,{"Warnings","Assumptions","Brand","Pods","PodMenus","Unsuccessful","Sources"}],Set[
Typeset`asyncpods$$,{}],Set[Typeset`nonpods$$,{}],Set[Typeset`initdone$$,FrontEnd`SuppressEvaluationHash[
True]],Set[Typeset`queryinfo$$,{"success" -> "false","error" -> "false",{"http://www.w3.org/XML/1998/namespace","space"} -> "preserve","numpods" -> "0","datatypes" -> "","timedout" -> "","timedoutpods" -> "","timing" -> "1.848","parsetimedout" -> "false","recalculate" -> "","id" -> "","parseidserver" -> "20","host" -> "https://www6b3.wolframalpha.com","server" -> "20","related" -> "","version" -> "2.6"}],Set[
Typeset`sessioninfo$$,{"TimeZone" -> -6.`,"Date" -> {2023,3,9,9,17,11.164282`7.800405784013626},"Line" -> 225,"SessionID" -> 29407323735728583873}],Set[
Typeset`showpods$$,{}],Set[Typeset`failedpods$$,{}],Set[Typeset`chosen$$,{}],Set[
Typeset`open$$,False],Set[Typeset`newq$$,"7.672492359425208`*^7+485.0549669628617` \[Lambda]+20378.140227703` Cell[BoxData[SuperscriptBox[\"\\[Lambda]\",\"2\"]]]+0.04579174228675136` Cell[BoxData[SuperscriptBox[\"\\[Lambda]\",\"3\"]]]+Cell[BoxData[SuperscriptBox[\"\\[Lambda]\",\"4\"]]] == 0"]},
DynamicBox[ToBoxes[AlphaIntegration`FormatAlphaResults[Dynamic[{1,{},{},Typeset`chosen$$,Typeset`open$$,Typeset`elements$$,Typeset`q$$,Typeset`opts$$,Typeset`nonpods$$,Typeset`queryinfo$$,Typeset`sessioninfo$$,Typeset`showpods$$,Typeset`failedpods$$,Typeset`newq$$}]],
StandardForm],RuleDelayed[TrackedSymbols,{Typeset`showpods$$,Typeset`failedpods$$}]],
RuleDelayed[Initialization,If[And[Not[SameQ[Typeset`initdone$$,True]],Not[SameQ[Typeset`initdone$$,
FrontEnd`SuppressEvaluationHash[True]]]],CompoundExpression[Null,WolframAlphaClient`Private`doAsyncUpdates[
Hold[{}],Typeset`asyncpods$$,Dynamic[Typeset`failedpods$$]],Set[Typeset`asyncpods$$,
{}],Set[Typeset`initdone$$,FrontEnd`SuppressEvaluationHash[True]]]]],RuleDelayed[
DynamicModuleValues,{}],SynchronousInitialization -> False,ExpressionUUID -> "f8fb1597-5117-4df2-bc03-5f12777ed3fe"],
BaseStyle -> {Deployed -> True},Editable -> False,DeleteWithContents -> True,SelectWithContents -> True],
StandardForm],"Output",CellLabel -> "Out[225]= ",ExpressionUUID -> "a227b28a-9fbf-4bda-aa83-54a5bc8bff56"]},
Open],ExpressionUUID -> "8f1f74e4-f763-40b0-8377-406ede70cc72"],Cell[
BoxData[""],
"Input",NumberMarks -> False,ExpressionUUID -> "a16fa9b0-26e3-4a38-a9ce-1e6231422359"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{"Solve","[",RowBox[{RowBox[{RowBox[{RowBox[{"0.492153986553374`"," ","^","9"}],"+",RowBox[
{"4492.094049043062`"," ","\[Lambda]"}],"+",RowBox[{"89867.59840417023`"," ",SuperscriptBox[
"\[Lambda]","2"]}],"+",RowBox[{"0.09616265880217786`"," ",SuperscriptBox["\[Lambda]",
"3"]}],"+",SuperscriptBox["\[Lambda]","4"]}],"==","0"}],","," ","\[Lambda]"}],"]"}]],
"Input",CellLabel -> "In[34]:= ",ExpressionUUID -> "213d41c0-3b2b-4344-a914-43326088ba4f"],Cell[
BoxData[
RowBox[{"{",RowBox[{RowBox[{"{",RowBox[{"\[Lambda]","\[Rule]",RowBox[{"-","0.049985315670745836`"}]}],"}"}],",",RowBox[
{"{",RowBox[{"\[Lambda]","\[Rule]",RowBox[{RowBox[{"-","0.023088483012690064`"}],"-",RowBox[
{"299.7792447166509`"," ","\[ImaginaryI]"}]}]}],"}"}],",",RowBox[{"{",RowBox[{"\[Lambda]","\[Rule]",RowBox[
{RowBox[{"-","0.023088483012690064`"}],"+",RowBox[{"299.7792447166509`"," ","\[ImaginaryI]"}]}]}],"}"}],",",RowBox[
{"{",RowBox[{"\[Lambda]","\[Rule]",RowBox[{"-","3.771060519060978`*^-7"}]}],"}"}]}],"}"}],
StandardForm],"Output",CellLabel -> "Out[34]= ",ExpressionUUID -> "eea53017-e643-4feb-816b-c4cee6d39975"]},
Open],ExpressionUUID -> "eceacbe1-c54c-4abc-b04f-02c9dca2754f"],Cell[
CellGroupData[
{Cell[
BoxData[{RowBox[{"a1"," ","="," ",RowBox[{"-","0.025904605"}]}],"\n",RowBox[
{"a2"," ","="," ",RowBox[{"-","0.02217672"}]}],"\n",RowBox[{"b1"," ","="," ","148.255402602"}],"\n",RowBox[
{"b2"," ","="," ","260.55312422"}],RowBox[{"\n","\n"}],RowBox[{"a1"," ","="," ",RowBox[
{"-","0.0123355"}]}],"\n",RowBox[{"b1"," ","="," ","70.5978108"}],"\n",RowBox[{"a2","=",RowBox[
{"-","0.010560"}]}],"\n",RowBox[{"b2","=","124.072916"}],"\n",RowBox[{"Z1"," ","="," ",RowBox[
{RowBox[{"Function","[",RowBox[{"x",",",RowBox[{RowBox[{"E"," ","^",RowBox[{"(",RowBox[
{"a1","*","x"}],")"}]}],"*",RowBox[{"(",RowBox[{RowBox[{"cos",RowBox[{"(",RowBox[
{"b1","*","x"}],")"}]}],"+",RowBox[{"sin",RowBox[{"(",RowBox[{"b1","*","x"}],")"}]}]}],")"}]}]}],"]"}],"[","x","]"}]}],"\n",RowBox[
{"Z2"," ","="," ",RowBox[{RowBox[{"Function","[",RowBox[{"x",",",RowBox[{RowBox[{"E"," ","^",RowBox[
{"(",RowBox[{"a12","*","x"}],")"}]}],"*",RowBox[{"(",RowBox[{RowBox[{"cos",RowBox[
{"(",RowBox[{"b2","*","x"}],")"}]}],"+",RowBox[{"sin",RowBox[{"(",RowBox[{"b2","*","x"}],")"}]}]}],")"}]}]}],"]"}],"[","x","]"}]}],"\n",RowBox[
{"Plot","[",RowBox[{RowBox[{"{",RowBox[{RowBox[{RowBox[{"E"," ","^",RowBox[{"(",RowBox[
{"a1","*","x"}],")"}]}],"*",RowBox[{"(",RowBox[{RowBox[{"Cos","[",RowBox[{"b1","*","x"}],"]"}],"+",RowBox[
{"Sin","[",RowBox[{"b1","*","x"}],"]"}]}],")"}]}],",",RowBox[{RowBox[{"E"," ","^",RowBox[
{"(",RowBox[{"a2","*","x"}],")"}]}],"*",RowBox[{"(",RowBox[{RowBox[{"Cos","[",RowBox[
{"b2","*","x"}],"]"}],"+",RowBox[{"Sin","[",RowBox[{"b2","*","x"}],"]"}]}],")"}]}]}],"}"}],",",RowBox[
{"{",RowBox[{"x",",","0",",","1"}],"}"}]}],"]"}]}],"Input",ExpressionUUID -> "eddce91c-9f27-4a90-95d7-2105d71bf398"],Cell[
BoxData[
RowBox[{"-","0.025904605`"}],StandardForm],"Output",CellLabel -> "Out[240]= ",ExpressionUUID -> "de746454-5f6b-4449-8651-e1eb11eb5833"],Cell[
BoxData[
RowBox[{"-","0.02217672`"}],StandardForm],"Output",CellLabel -> "Out[241]= ",ExpressionUUID -> "9d137b9e-7f43-49f2-aa19-241f99b1a193"],Cell[
BoxData[
"148.255402602`",StandardForm],"Output",CellLabel -> "Out[242]= ",ExpressionUUID -> "c59afa13-c22d-40fd-a8a8-14528a05d4c6"],Cell[
BoxData[
"260.55312422`",StandardForm],"Output",CellLabel -> "Out[243]= ",ExpressionUUID -> "dcf83e5b-6ba8-4979-bf57-1a967ddc3b25"],Cell[
BoxData[
RowBox[{"-","0.0123355`"}],StandardForm],"Output",CellLabel -> "Out[244]= ",ExpressionUUID -> "6f9479d4-ddec-4307-b189-093ca5f135f4"],Cell[
BoxData[
"70.5978108`",StandardForm],"Output",CellLabel -> "Out[245]= ",ExpressionUUID -> "1db7792d-3e09-4ac9-a3d7-b0a3dc153afe"],Cell[
BoxData[
RowBox[{"-","0.01056`"}],StandardForm],"Output",CellLabel -> "Out[246]= ",ExpressionUUID -> "5732f959-ce17-45d1-af6b-cb66995d46a6"],Cell[
BoxData[
"124.072916`",StandardForm],"Output",CellLabel -> "Out[247]= ",ExpressionUUID -> "01acabcd-6255-46d5-8856-4b662f1476c2"],Cell[
BoxData[
RowBox[{SuperscriptBox["\[ExponentialE]",RowBox[{RowBox[{"-","0.0123355`"}]," ","x"}]]," ",RowBox[
{"(",RowBox[{RowBox[{"70.5978108`"," ","cos"," ","x"}],"+",RowBox[{"70.5978108`"," ","sin"," ","x"}]}],")"}]}],
StandardForm],"Output",CellLabel -> "Out[248]= ",ExpressionUUID -> "370adcf9-d298-47eb-9d21-5554dbd6cb67"],Cell[
BoxData[
RowBox[{SuperscriptBox["\[ExponentialE]",RowBox[{"a12"," ","x"}]]," ",RowBox[{"(",RowBox[
{RowBox[{"124.072916`"," ","cos"," ","x"}],"+",RowBox[{"124.072916`"," ","sin"," ","x"}]}],")"}]}],
StandardForm],"Output",CellLabel -> "Out[249]= ",ExpressionUUID -> "240b4f31-c562-4a92-b003-a567d1f3d449"],Cell[
BoxData[
GraphicsBox[{{{{},{},TagBox[{Directive[Opacity[1.`],RGBColor[0.368417`,0.506779`,
0.709798`],AbsoluteThickness[1.6`]],LineBox[CompressedData["1:"]]},
Function[Annotation[Slot[1],"Charting`Private`Tag$163237#1"]]],TagBox[{Directive[
Opacity[1.`],RGBColor[0.880722`,0.611041`,0.142051`],AbsoluteThickness[1.6`]],LineBox[
CompressedData["1:"]]},
Function[Annotation[Slot[1],"Charting`Private`Tag$163237#2"]]]}},{}},{DisplayFunction -> Identity,Ticks -> {Automatic,Automatic},AxesOrigin -> {0,0},FrameTicks -> {{Automatic,Automatic},{Automatic,Automatic}},GridLines -> {None,None},DisplayFunction -> Identity,PlotRangePadding -> {{Scaled[
0.02`],Scaled[0.02`]},{Scaled[0.05`],Scaled[0.05`]}},PlotRangeClipping -> True,ImagePadding -> All,DisplayFunction -> Identity,AspectRatio -> NCache[
Power[GoldenRatio,-1],0.6180339887498948`],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0,0},RuleDelayed[
DisplayFunction,Identity],Frame -> {{False,False},{False,False}},FrameLabel -> {{None,None},{None,None}},FrameTicks -> {{Automatic,Automatic},{Automatic,Automatic}},GridLines -> {None,None},GridLinesStyle -> Directive[
GrayLevel[0.5`,0.4`]],Method -> CompressedData["1:eJzlUstOwzAQbMv7wlscuPENfAAqLYVKFKqm6t1N1u0K1xt5bYnw2/wAtqs+CbkgTkRKtPbuzuxM9mZMA7lXq9V413+eka1sLE4DpyC59EEbpHDK3pPTmTBFYgsFfOQTTWdpJiymW03Xq6ZHI/IpptzVFoxILZKWOxV8Bz4YgWFfZ27j83m3VXLug6HHeuuRY+gTY0RtrKPGYGgccBDXEYqhhOhBSkgtVw4UdD7hZKr8a2W9ojIwGe8GYbjfSh6vw/QJ9S+wwkhtQ7lCDbypu8QqaQAkmVnLGSbTowyW5pTg5kqkMANtK3HD6O9JsK2pVEmuSMLxhfQ2xelqM3rA07hKcyPOAtiYSTkL0Z8EPwD3v6sPEEkqvPhJx+m4Ucw/0F35oEVkMtTCAg+J1GseOyrlnYQpkb0XxYJiPuRhWKbFzSZCyJcULW+6mTcVbbH67Ykii/UNgX1hbEkBLsH/jKFkzS6ieTlCNhLKwX9y4gucBRzd"],PlotRange -> {{0,1},{-1.4137121194464495`,1.4139961971006865`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],Scaled[0.02`]},{Scaled[0.02`],Scaled[0.02`]}},Ticks -> {Automatic,Automatic}}],
StandardForm],"Output",CellLabel -> "Out[250]= ",ExpressionUUID -> "85eceddd-dd7d-4723-a76a-1619a0181d74"]},
Open],ExpressionUUID -> "a7a538b0-62e0-48e8-9456-494877548f7a"],Cell[
CellGroupData[
{Cell[
BoxData[{RowBox[{"k"," ","=","  ",RowBox[{RowBox[{"Function","[",RowBox[{"x",",",RowBox[
{"x","+","1"}]}],"]"}],"[","x","]"}]}],"\n",RowBox[{"Plot","[",RowBox[{RowBox[{RowBox[
{"E"," ","^",RowBox[{"(",RowBox[{"a2","*","x"}],")"}]}],"*",RowBox[{"(",RowBox[{RowBox[
{"Cos","[",RowBox[{"b2","*","x"}],"]"}],"+",RowBox[{"Sin","[",RowBox[{"b2","*","x"}],"]"}]}],")"}]}],",",RowBox[
{"{",RowBox[{"x",",","0",",","1"}],"}"}]}],"]"}]}],"Input",CellLabel -> "In[251]:= ",
ExpressionUUID -> "69644217-1c77-46e8-951e-44c0e47122a6"],Cell[
BoxData[RowBox[{"1","+","x"}],
StandardForm],"Output",CellLabel -> "Out[251]= ",ExpressionUUID -> "615d6aa2-d3bb-4eb1-9b0a-24ef84953c0c"],Cell[
BoxData[
GraphicsBox[{{{{},{},TagBox[{Directive[Opacity[1.`],RGBColor[0.368417`,0.506779`,
0.709798`],AbsoluteThickness[1.6`]],LineBox[CompressedData["1:"]]},
Function[Annotation[Slot[1],"Charting`Private`Tag$163838#1"]]]}},{}},{DisplayFunction -> Identity,Ticks -> {Automatic,Automatic},AxesOrigin -> {0,0},FrameTicks -> {{Automatic,Automatic},{Automatic,Automatic}},GridLines -> {None,None},DisplayFunction -> Identity,PlotRangePadding -> {{Scaled[
0.02`],Scaled[0.02`]},{Scaled[0.05`],Scaled[0.05`]}},PlotRangeClipping -> True,ImagePadding -> All,DisplayFunction -> Identity,AspectRatio -> NCache[
Power[GoldenRatio,-1],0.6180339887498948`],Axes -> {True,True},AxesLabel -> {None,None},AxesOrigin -> {0,0},RuleDelayed[
DisplayFunction,Identity],Frame -> {{False,False},{False,False}},FrameLabel -> {{None,None},{None,None}},FrameTicks -> {{Automatic,Automatic},{Automatic,Automatic}},GridLines -> {None,None},GridLinesStyle -> Directive[
GrayLevel[0.5`,0.4`]],Method -> CompressedData["1:eJzlUstOwzAQbMv7wlscuPENfAAqLYVKFKqm6t1N1u0K1xt5bYnw2/wAtqs+CbkgTkRKtPbuzuxM9mZMA7lXq9V413+eka1sLE4DpyC59EEbpHDK3pPTmTBFYgsFfOQTTWdpJiymW03Xq6ZHI/IpptzVFoxILZKWOxV8Bz4YgWFfZ27j83m3VXLug6HHeuuRY+gTY0RtrKPGYGgccBDXEYqhhOhBSkgtVw4UdD7hZKr8a2W9ojIwGe8GYbjfSh6vw/QJ9S+wwkhtQ7lCDbypu8QqaQAkmVnLGSbTowyW5pTg5kqkMANtK3HD6O9JsK2pVEmuSMLxhfQ2xelqM3rA07hKcyPOAtiYSTkL0Z8EPwD3v6sPEEkqvPhJx+m4Ucw/0F35oEVkMtTCAg+J1GseOyrlnYQpkb0XxYJiPuRhWKbFzSZCyJcULW+6mTcVbbH67Ykii/UNgX1hbEkBLsH/jKFkzS6ieTlCNhLKwX9y4gucBRzd"],PlotRange -> {{0,1},{-1.4137121194464495`,1.413984396812119`}},PlotRangeClipping -> True,PlotRangePadding -> {{Scaled[
0.02`],Scaled[0.02`]},{Scaled[0.02`],Scaled[0.02`]}},Ticks -> {Automatic,Automatic}}],
StandardForm],"Output",CellLabel -> "Out[252]= ",ExpressionUUID -> "f633f124-93fa-4373-872a-0a7b48f45ec7"]},
Open],ExpressionUUID -> "07e9af47-0ae8-4b87-ae3c-39a3a240531e"],Cell[
CellGroupData[
{Cell[
BoxData[RowBox[{RowBox[{"E"," ","^",RowBox[{"(",RowBox[{"a1","*","0.1"}],")"}]}],"*",RowBox[
{"(",RowBox[{RowBox[{"Cos","[",RowBox[{"b2","*","0.1"}],"]"}],"+",RowBox[{"Sin","[",RowBox[
{"b2","*","0.1"}],"]"}]}],")"}]}]],"Input",CellLabel -> "In[175]:= ",ExpressionUUID -> "63921945-faf0-4578-be3b-f6cf873d07ce"],Cell[
BoxData[
"1.3973048246696238`",StandardForm],"Output",CellLabel -> "Out[175]= ",ExpressionUUID -> "198e6324-82ec-4a59-9e32-1e4d2af489ad"]},
Open],ExpressionUUID -> "2114dccf-240d-4894-b889-5382f7621d90"]},StyleDefinitions -> "Default.nb",
FrontEndVersion -> "13.2 for Wolfram Cloud 1.64.2 (December 29, 2022)",TaggingRules -> {"TryRealOnly" -> False}]